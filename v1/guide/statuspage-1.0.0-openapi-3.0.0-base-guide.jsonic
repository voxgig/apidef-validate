# Guide

guide: {

  entity: component: {
    path: '/pages/{page_id}/components': {  # ent:component:cmp=component;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=component
      op: list: method: *"GET"|string  # array;ent=component
    }
    path: '/pages/{page_id}/components/{component_id}': {  # ent:component:no-cmp;path=t/p/;entres=true/204,401,404/nores;path-primary-delete
      rename: param: "component_id": *"id"|string  # end-id:GET:parent=true/component:cmp=false/component
      op: load: method: *"GET"|string  # end-param;ent=component
      op: patch: method: *"PATCH"|string  # not-load;ent=component
      op: remove: method: *"DELETE"|string  # not-load;ent=component
      op: update: method: *"PUT"|string  # not-load;ent=component
    }
    path: '/pages/{page_id}/components/{component_id}/page_access_groups': {  # ent:component:cmp=component;path=t/p/t/;cmp-path;has-cmp
      action: "page_access_groups": kind: *"`$BOOLEAN`"|top  # ent:component:action-not-parent:component_id:POST
      rename: param: "component_id": *"id"|string  # action-not-parent:component
      op: create: method: *"POST"|string  # not-load;ent=component
      op: remove: method: *"DELETE"|string  # not-load;ent=component
    }
    path: '/pages/{page_id}/components/{component_id}/page_access_users': {  # ent:component:cmp=component;path=t/p/t/;cmp-path;has-cmp
      action: "page_access_users": kind: *"`$BOOLEAN`"|top  # ent:component:action-not-parent:component_id:POST
      rename: param: "component_id": *"id"|string  # action-not-parent:component
      op: create: method: *"POST"|string  # not-load;ent=component
      op: remove: method: *"DELETE"|string  # not-load;ent=component
    }
    path: '/pages/{page_id}/page_access_groups/{page_access_group_id}/components': {  # ent:component:cmp=component;path=t/p/t/;path-primary;has-cmp
      op: list: method: *"GET"|string  # array;ent=component
    }
    path: '/pages/{page_id}/page_access_users/{page_access_user_id}/components': {  # ent:component:cmp=component;path=t/p/t/;path-primary;has-cmp
      op: list: method: *"GET"|string  # array;ent=component
    }
  }

  entity: component_group_uptime: {
    path: '/pages/{page_id}/component-groups/{id}/uptime': {  # ent:component_group_uptime:cmp=component_group_uptime;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *"GET"|string  # not-list;ent=component_group_uptime
    }
  }

  entity: component_uptime: {
    path: '/pages/{page_id}/components/{component_id}/uptime': {  # ent:component_uptime:cmp=component_uptime;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "component_id": *"id"|string  # action-not-parent:component_uptime
      op: load: method: *"GET"|string  # not-list;ent=component_uptime
    }
  }

  entity: data: {
    path: '/pages/{page_id}/metrics/data': {  # ent:data:no-cmp;path=t/;entres=false/202,401,403,404,405;ent-act
      op: create: method: *"POST"|string  # not-load;ent=data
    }
  }

  entity: group_component: {
    path: '/pages/{page_id}/component-groups': {  # ent:group_component:cmp=group_component;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=group_component
      op: list: method: *"GET"|string  # array;ent=group_component
    }
    path: '/pages/{page_id}/component-groups/{id}': {  # ent:group_component:cmp=group_component;path=t/p/;cmp-primary
      op: load: method: *"GET"|string  # end-param;ent=group_component
      op: patch: method: *"PATCH"|string  # not-load;ent=group_component
      op: remove: method: *"DELETE"|string  # not-load;ent=group_component
      op: update: method: *"PUT"|string  # not-load;ent=group_component
    }
  }

  entity: incident: {
    path: '/pages/{page_id}/incidents': {  # ent:incident:cmp=incident;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=incident
      op: list: method: *"GET"|string  # array;ent=incident
    }
    path: '/pages/{page_id}/incidents/active_maintenance': {  # ent:incident:cmp=incident;path=t/;cmp-primary
      op: list: method: *"GET"|string  # array;ent=incident
    }
    path: '/pages/{page_id}/incidents/scheduled': {  # ent:incident:cmp=incident;path=t/;cmp-primary
      op: list: method: *"GET"|string  # array;ent=incident
    }
    path: '/pages/{page_id}/incidents/unresolved': {  # ent:incident:cmp=incident;path=t/;cmp-primary
      op: list: method: *"GET"|string  # array;ent=incident
    }
    path: '/pages/{page_id}/incidents/upcoming': {  # ent:incident:cmp=incident;path=t/;cmp-primary
      op: list: method: *"GET"|string  # array;ent=incident
    }
    path: '/pages/{page_id}/incidents/{incident_id}': {  # ent:incident:cmp=incident;path=t/p/;path-primary
      rename: param: "incident_id": *"id"|string  # end-id:GET:parent=true/incident:cmp=false/incident
      op: load: method: *"GET"|string  # end-param;ent=incident
      op: patch: method: *"PATCH"|string  # not-load;ent=incident
      op: remove: method: *"DELETE"|string  # not-load;ent=incident
      op: update: method: *"PUT"|string  # not-load;ent=incident
    }
  }

  entity: incident_template: {
    path: '/pages/{page_id}/incident_templates': {  # ent:incident_template:cmp=incident_template;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=incident_template
      op: list: method: *"GET"|string  # array;ent=incident_template
    }
  }

  entity: incident_update: {
    path: '/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}': {  # ent:incident_update:cmp=incident_update;path=t/p/;path-primary
      rename: param: "incident_update_id": *"id"|string  # end-id:PUT:parent=true/incident_update:cmp=false/incident_update
      op: patch: method: *"PATCH"|string  # not-load;ent=incident_update
      op: update: method: *"PUT"|string  # not-load;ent=incident_update
    }
  }

  entity: metric: {
    path: '/pages/{page_id}/metrics': {  # ent:metric:cmp=metric;path=t/p/t/;path-primary;has-cmp
      op: load: method: *"GET"|string  # not-list;ent=metric
    }
    path: '/pages/{page_id}/metrics/{metric_id}': {  # ent:metric:cmp=metric;path=t/p/;path-primary
      rename: param: "metric_id": *"id"|string  # end-id:GET:parent=true/metric:cmp=false/metric
      op: load: method: *"GET"|string  # end-param;ent=metric
      op: patch: method: *"PATCH"|string  # not-load;ent=metric
      op: remove: method: *"DELETE"|string  # not-load;ent=metric
      op: update: method: *"PUT"|string  # not-load;ent=metric
    }
    path: '/pages/{page_id}/metrics/{metric_id}/data': {  # ent:metric:cmp=metric;path=t/p/t/;cmp-primary;has-cmp
      action: "data": kind: *"`$BOOLEAN`"|top  # ent:metric:action-not-parent:metric_id:DELETE
      rename: param: "metric_id": *"id"|string  # action-not-parent:metric
      op: remove: method: *"DELETE"|string  # not-load;ent=metric
    }
    path: '/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics': {  # ent:metric:cmp=metric;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=metric
      op: load: method: *"GET"|string  # not-list;ent=metric
    }
    path: '/pages/{page_id}/page_access_users/{page_access_user_id}/metrics': {  # ent:metric:cmp=metric;path=t/p/t/;path-primary;has-cmp
      op: list: method: *"GET"|string  # array;ent=metric
    }
  }

  entity: metrics_provider: {
    path: '/pages/{page_id}/metrics_providers': {  # ent:metrics_provider:cmp=metrics_provider;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=metrics_provider
      op: list: method: *"GET"|string  # array;ent=metrics_provider
    }
    path: '/pages/{page_id}/metrics_providers/{metrics_provider_id}': {  # ent:metrics_provider:cmp=metrics_provider;path=t/p/;path-primary
      rename: param: "metrics_provider_id": *"id"|string  # end-id:GET:parent=true/metrics_provider:cmp=false/metrics_provider
      op: load: method: *"GET"|string  # end-param;ent=metrics_provider
      op: patch: method: *"PATCH"|string  # not-load;ent=metrics_provider
      op: remove: method: *"DELETE"|string  # not-load;ent=metrics_provider
      op: update: method: *"PUT"|string  # not-load;ent=metrics_provider
    }
  }

  entity: page: {
    path: '/pages': {  # ent:page:cmp=page;path=t/;path-primary
      op: list: method: *"GET"|string  # array;ent=page
    }
    path: '/pages/{page_id}': {  # ent:page:cmp=page;path=t/p/;path-primary
      rename: param: "page_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/page
      op: load: method: *"GET"|string  # end-param;ent=page
      op: patch: method: *"PATCH"|string  # not-load;ent=page
      op: update: method: *"PUT"|string  # not-load;ent=page
    }
  }

  entity: page_access_group: {
    path: '/pages/{page_id}/page_access_groups': {  # ent:page_access_group:cmp=page_access_group;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=page_access_group
      op: list: method: *"GET"|string  # array;ent=page_access_group
    }
    path: '/pages/{page_id}/page_access_groups/{page_access_group_id}': {  # ent:page_access_group:cmp=page_access_group;path=t/p/;path-primary
      rename: param: "page_access_group_id": *"id"|string  # end-id:GET:parent=true/page_access_group:cmp=false/page_access_group
      op: load: method: *"GET"|string  # end-param;ent=page_access_group
      op: patch: method: *"PATCH"|string  # not-load;ent=page_access_group
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_group
      op: update: method: *"PUT"|string  # not-load;ent=page_access_group
    }
    path: '/pages/{page_id}/page_access_groups/{page_access_group_id}/components': {  # ent:page_access_group:cmp=page_access_group;path=t/p/t/;cmp-primary;has-cmp
      action: "components": kind: *"`$BOOLEAN`"|top  # ent:page_access_group:action-not-parent:page_access_group_id:POST
      rename: param: "page_access_group_id": *"id"|string  # action-not-parent:page_access_group
      op: create: method: *"POST"|string  # not-load;ent=page_access_group
      op: patch: method: *"PATCH"|string  # not-load;ent=page_access_group
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_group
      op: update: method: *"PUT"|string  # not-load;ent=page_access_group
    }
    path: '/pages/{page_id}/page_access_groups/{page_access_group_id}/components/{component_id}': {  # ent:page_access_group:cmp=page_access_group;path=t/p/;cmp-primary
      rename: param: "page_access_group_id": *"id"|string  # id-not-parent
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_group
    }
  }

  entity: page_access_user: {
    path: '/pages/{page_id}/page_access_users': {  # ent:page_access_user:cmp=page_access_user;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=page_access_user
      op: list: method: *"GET"|string  # array;ent=page_access_user
    }
    path: '/pages/{page_id}/page_access_users/{page_access_user_id}': {  # ent:page_access_user:no-cmp;path=t/p/;entres=true/204,401,403,404/nores;path-primary-delete
      rename: param: "page_access_user_id": *"id"|string  # end-id:GET:parent=true/page_access_user:cmp=false/page_access_user
      op: load: method: *"GET"|string  # end-param;ent=page_access_user
      op: patch: method: *"PATCH"|string  # not-load;ent=page_access_user
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_user
      op: update: method: *"PUT"|string  # not-load;ent=page_access_user
    }
    path: '/pages/{page_id}/page_access_users/{page_access_user_id}/components': {  # ent:page_access_user:cmp=page_access_user;path=t/p/t/;cmp-primary;has-cmp
      action: "components": kind: *"`$BOOLEAN`"|top  # ent:page_access_user:action-not-parent:page_access_user_id:POST
      rename: param: "page_access_user_id": *"id"|string  # action-not-parent:page_access_user
      op: create: method: *"POST"|string  # not-load;ent=page_access_user
      op: patch: method: *"PATCH"|string  # not-load;ent=page_access_user
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_user
      op: update: method: *"PUT"|string  # not-load;ent=page_access_user
    }
    path: '/pages/{page_id}/page_access_users/{page_access_user_id}/components/{component_id}': {  # ent:page_access_user:cmp=page_access_user;path=t/p/;cmp-primary
      rename: param: "page_access_user_id": *"id"|string  # id-not-parent
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_user
    }
    path: '/pages/{page_id}/page_access_users/{page_access_user_id}/metrics': {  # ent:page_access_user:cmp=page_access_user;path=t/p/t/;cmp-primary;has-cmp
      action: "metrics": kind: *"`$BOOLEAN`"|top  # ent:page_access_user:action-not-parent:page_access_user_id:POST
      rename: param: "page_access_user_id": *"id"|string  # action-not-parent:page_access_user
      op: create: method: *"POST"|string  # not-load;ent=page_access_user
      op: patch: method: *"PATCH"|string  # not-load;ent=page_access_user
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_user
      op: update: method: *"PUT"|string  # not-load;ent=page_access_user
    }
    path: '/pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id}': {  # ent:page_access_user:cmp=page_access_user;path=t/p/;cmp-primary
      rename: param: "page_access_user_id": *"id"|string  # id-not-parent
      op: remove: method: *"DELETE"|string  # not-load;ent=page_access_user
    }
  }

  entity: permission: {
    path: '/organizations/{organization_id}/permissions/{user_id}': {  # ent:permission:cmp=permission;path=t/p/;path-primary
      rename: param: "user_id": *"id"|string  # end-id:GET:parent=true/permission:cmp=false/permission
      op: load: method: *"GET"|string  # end-param;ent=permission
      op: update: method: *"PUT"|string  # not-load;ent=permission
    }
  }

  entity: postmortem: {
    path: '/pages/{page_id}/incidents/{incident_id}/postmortem': {  # ent:postmortem:no-cmp;path=t/p/t/;entres=true/204,401,404/nores;path-primary-delete;prob-ent-last
      op: load: method: *"GET"|string  # not-list;ent=postmortem
      op: remove: method: *"DELETE"|string  # not-load;ent=postmortem
      op: update: method: *"PUT"|string  # not-load;ent=postmortem
    }
    path: '/pages/{page_id}/incidents/{incident_id}/postmortem/publish': {  # ent:postmortem:cmp=postmortem;path=t/;cmp-primary
      op: update: method: *"PUT"|string  # not-load;ent=postmortem
    }
    path: '/pages/{page_id}/incidents/{incident_id}/postmortem/revert': {  # ent:postmortem:cmp=postmortem;path=t/;cmp-primary
      op: update: method: *"PUT"|string  # not-load;ent=postmortem
    }
  }

  entity: reactivate: {
    path: '/pages/{page_id}/subscribers/reactivate': {  # ent:reactivate:no-cmp;path=t/;entres=false/201,400,401,404,422;ent-act
      op: create: method: *"POST"|string  # not-load;ent=reactivate
    }
  }

  entity: resend_confirmation: {
    path: '/pages/{page_id}/subscribers/resend_confirmation': {  # ent:resend_confirmation:no-cmp;path=t/;entres=false/201,400,401,404,422;ent-act
      op: create: method: *"POST"|string  # not-load;ent=resend_confirmation
    }
  }

  entity: single_metric_add_response: {
    path: '/pages/{page_id}/metrics/{metric_id}/data': {  # ent:single_metric_add_response:cmp=single_metric_add_response;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=single_metric_add_response
    }
  }

  entity: status_embed_config: {
    path: '/pages/{page_id}/status_embed_config': {  # ent:status_embed_config:cmp=status_embed_config;path=t/p/t/;path-primary;has-cmp
      op: load: method: *"GET"|string  # not-list;ent=status_embed_config
      op: patch: method: *"PATCH"|string  # not-load;ent=status_embed_config
      op: update: method: *"PUT"|string  # not-load;ent=status_embed_config
    }
  }

  entity: subscriber: {
    path: '/pages/{page_id}/incidents/{incident_id}/subscribers': {  # ent:subscriber:cmp=subscriber;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=subscriber
      op: list: method: *"GET"|string  # array;ent=subscriber
    }
    path: '/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}': {  # ent:subscriber:cmp=subscriber;path=t/p/;path-primary
      rename: param: "subscriber_id": *"id"|string  # end-id:GET:parent=true/subscriber:cmp=false/subscriber
      op: load: method: *"GET"|string  # end-param;ent=subscriber
      op: remove: method: *"DELETE"|string  # not-load;ent=subscriber
    }
    path: '/pages/{page_id}/subscribers': {  # ent:subscriber:cmp=subscriber;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=subscriber
      op: list: method: *"GET"|string  # array;ent=subscriber
    }
    path: '/pages/{page_id}/subscribers/unsubscribed': {  # ent:subscriber:cmp=subscriber;path=t/;cmp-primary
      op: list: method: *"GET"|string  # array;ent=subscriber
    }
    path: '/pages/{page_id}/subscribers/{subscriber_id}': {  # ent:subscriber:cmp=subscriber;path=t/p/;path-primary
      rename: param: "subscriber_id": *"id"|string  # end-id:GET:parent=true/subscriber:cmp=false/subscriber
      op: load: method: *"GET"|string  # end-param;ent=subscriber
      op: patch: method: *"PATCH"|string  # not-load;ent=subscriber
      op: remove: method: *"DELETE"|string  # not-load;ent=subscriber
    }
  }

  entity: subscriber_count_by_type: {
    path: '/pages/{page_id}/subscribers/count': {  # ent:subscriber_count_by_type:cmp=subscriber_count_by_type;path=t/;cmp-primary
      op: load: method: *"GET"|string  # not-list;ent=subscriber_count_by_type
    }
  }

  entity: subscriber_count_by_type_and_state: {
    path: '/pages/{page_id}/subscribers/histogram_by_state': {  # ent:subscriber_count_by_type_and_state:cmp=subscriber_count_by_type_and_state;path=t/;cmp-primary
      op: load: method: *"GET"|string  # not-list;ent=subscriber_count_by_type_and_state
    }
  }

  entity: subscriber_resend_confirmation: {
    path: '/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation': {  # ent:subscriber_resend_confirmation:no-cmp;path=t/p/t/;entres=false/201;part-ent
      rename: param: "subscriber_id": *"id"|string  # action-not-parent:subscriber_resend_confirmation
      op: create: method: *"POST"|string  # not-load;ent=subscriber_resend_confirmation
    }
    path: '/pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation': {  # ent:subscriber_resend_confirmation:no-cmp;path=t/p/t/;entres=false/201,401,404;part-ent
      rename: param: "subscriber_id": *"id"|string  # action-not-parent:subscriber_resend_confirmation
      op: create: method: *"POST"|string  # not-load;ent=subscriber_resend_confirmation
    }
  }

  entity: unsubscribe: {
    path: '/pages/{page_id}/subscribers/unsubscribe': {  # ent:unsubscribe:no-cmp;path=t/;entres=false/201,400,401,404,422;ent-act
      op: create: method: *"POST"|string  # not-load;ent=unsubscribe
    }
  }

  entity: user: {
    path: '/organizations/{organization_id}/users': {  # ent:user:cmp=user;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=user
      op: list: method: *"GET"|string  # array;ent=user
    }
    path: '/organizations/{organization_id}/users/{user_id}': {  # ent:user:cmp=user;path=t/p/;path-primary
      rename: param: "user_id": *"id"|string  # end-id:DELETE:parent=true/user:cmp=false/user
      op: remove: method: *"DELETE"|string  # not-load;ent=user
    }
  }

}