# Guide

guide: {

  entity: abort: {
    path: '/files/{owner}/{repo}/{identifier}/abort/': {  # ent:abort:no-cmp;path=p/t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=abort
    }
  }

  entity: alpine: {
    path: '/packages/{owner}/{repo}/upload/alpine/': {  # ent:alpine:cmp=alpine_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=alpine
    }
    path: '/packages/{owner}/{repo}/validate-upload/alpine/': {  # ent:alpine:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=alpine
    }
  }

  entity: cargo: {
    path: '/packages/{owner}/{repo}/upload/cargo/': {  # ent:cargo:cmp=cargo_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cargo
    }
    path: '/packages/{owner}/{repo}/validate-upload/cargo/': {  # ent:cargo:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cargo
    }
    path: '/repos/{owner}/{identifier}/upstream/cargo/': {  # ent:cargo:cmp=cargo_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cargo
      op: load: method: *"GET"|string  # no-schema;ent=cargo
    }
    path: '/repos/{owner}/{identifier}/upstream/cargo/{slug_perm}/': {  # ent:cargo:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/cargo:cmp=false/cargo_upstream
      op: load: method: *"GET"|string  # end-param;ent=cargo
      op: patch: method: *"PATCH"|string  # not-load;ent=cargo
      op: remove: method: *"DELETE"|string  # not-load;ent=cargo
      op: update: method: *"PUT"|string  # not-load;ent=cargo
    }
  }

  entity: cocoapod: {
    path: '/packages/{owner}/{repo}/upload/cocoapods/': {  # ent:cocoapod:cmp=cocoapods_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cocoapod
    }
    path: '/packages/{owner}/{repo}/validate-upload/cocoapods/': {  # ent:cocoapod:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cocoapod
    }
  }

  entity: composer: {
    path: '/packages/{owner}/{repo}/upload/composer/': {  # ent:composer:cmp=composer_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=composer
    }
    path: '/packages/{owner}/{repo}/validate-upload/composer/': {  # ent:composer:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=composer
    }
    path: '/repos/{owner}/{identifier}/upstream/composer/': {  # ent:composer:cmp=composer_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=composer
      op: load: method: *"GET"|string  # no-schema;ent=composer
    }
    path: '/repos/{owner}/{identifier}/upstream/composer/{slug_perm}/': {  # ent:composer:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/composer:cmp=false/composer_upstream
      op: load: method: *"GET"|string  # end-param;ent=composer
      op: patch: method: *"PATCH"|string  # not-load;ent=composer
      op: remove: method: *"DELETE"|string  # not-load;ent=composer
      op: update: method: *"PUT"|string  # not-load;ent=composer
    }
  }

  entity: conan: {
    path: '/packages/{owner}/{repo}/upload/conan/': {  # ent:conan:cmp=conan_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=conan
    }
    path: '/packages/{owner}/{repo}/validate-upload/conan/': {  # ent:conan:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=conan
    }
  }

  entity: conda: {
    path: '/packages/{owner}/{repo}/upload/conda/': {  # ent:conda:cmp=conda_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=conda
    }
    path: '/packages/{owner}/{repo}/validate-upload/conda/': {  # ent:conda:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=conda
    }
    path: '/repos/{owner}/{identifier}/upstream/conda/': {  # ent:conda:cmp=conda_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=conda
      op: load: method: *"GET"|string  # no-schema;ent=conda
    }
    path: '/repos/{owner}/{identifier}/upstream/conda/{slug_perm}/': {  # ent:conda:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/conda:cmp=false/conda_upstream
      op: load: method: *"GET"|string  # end-param;ent=conda
      op: patch: method: *"PATCH"|string  # not-load;ent=conda
      op: remove: method: *"DELETE"|string  # not-load;ent=conda
      op: update: method: *"PUT"|string  # not-load;ent=conda
    }
  }

  entity: cran: {
    path: '/packages/{owner}/{repo}/upload/cran/': {  # ent:cran:cmp=cran_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cran
    }
    path: '/packages/{owner}/{repo}/validate-upload/cran/': {  # ent:cran:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cran
    }
    path: '/repos/{owner}/{identifier}/upstream/cran/': {  # ent:cran:cmp=cran_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=cran
      op: load: method: *"GET"|string  # no-schema;ent=cran
    }
    path: '/repos/{owner}/{identifier}/upstream/cran/{slug_perm}/': {  # ent:cran:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/cran:cmp=false/cran_upstream
      op: load: method: *"GET"|string  # end-param;ent=cran
      op: patch: method: *"PATCH"|string  # not-load;ent=cran
      op: remove: method: *"DELETE"|string  # not-load;ent=cran
      op: update: method: *"PUT"|string  # not-load;ent=cran
    }
  }

  entity: dart: {
    path: '/packages/{owner}/{repo}/upload/dart/': {  # ent:dart:cmp=dart_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=dart
    }
    path: '/packages/{owner}/{repo}/validate-upload/dart/': {  # ent:dart:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=dart
    }
    path: '/repos/{owner}/{identifier}/upstream/dart/': {  # ent:dart:cmp=dart_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=dart
      op: load: method: *"GET"|string  # no-schema;ent=dart
    }
    path: '/repos/{owner}/{identifier}/upstream/dart/{slug_perm}/': {  # ent:dart:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/dart:cmp=false/dart_upstream
      op: load: method: *"GET"|string  # end-param;ent=dart
      op: patch: method: *"PATCH"|string  # not-load;ent=dart
      op: remove: method: *"DELETE"|string  # not-load;ent=dart
      op: update: method: *"PUT"|string  # not-load;ent=dart
    }
  }

  entity: deb: {
    path: '/packages/{owner}/{repo}/upload/deb/': {  # ent:deb:cmp=deb_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=deb
    }
    path: '/packages/{owner}/{repo}/validate-upload/deb/': {  # ent:deb:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=deb
    }
    path: '/repos/{owner}/{identifier}/upstream/deb/': {  # ent:deb:cmp=deb_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=deb
      op: load: method: *"GET"|string  # no-schema;ent=deb
    }
    path: '/repos/{owner}/{identifier}/upstream/deb/{slug_perm}/': {  # ent:deb:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/deb:cmp=false/deb_upstream
      op: load: method: *"GET"|string  # end-param;ent=deb
      op: patch: method: *"PATCH"|string  # not-load;ent=deb
      op: remove: method: *"DELETE"|string  # not-load;ent=deb
      op: update: method: *"PUT"|string  # not-load;ent=deb
    }
  }

  entity: deny_policy: {
    path: '/orgs/{org}/deny-policy/{slug_perm}/': {  # ent:deny_policy:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:DELETE:parent=true/deny_policy:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load;ent=deny_policy
    }
  }

  entity: disable: {
    path: '/entitlements/{owner}/{repo}/{identifier}/disable/': {  # ent:disable:no-cmp;path=p/t/;entres=true/204,400,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=disable
    }
    path: '/orgs/{org}/saml-group-sync/disable/': {  # ent:disable:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=disable
    }
    path: '/repos/{owner}/{identifier}/geoip/disable/': {  # ent:disable:no-cmp;path=t/;entres=false/200,400,402,404,422;ent-act
      op: create: method: *"POST"|string  # not-load;ent=disable
    }
  }

  entity: distribution_full: {
    path: '/distros/': {  # ent:distribution_full:cmp=distribution_full;path=t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=distribution_full
    }
    path: '/distros/{slug}/': {  # ent:distribution_full:cmp=distribution_full;path=t/p/;cmp-primary
      rename: param: "slug": *"id"|string  # end-id:GET:parent=false/null:cmp=false/distribution_full
      op: load: method: *"GET"|string  # end-param;ent=distribution_full
    }
  }

  entity: docker: {
    path: '/packages/{owner}/{repo}/upload/docker/': {  # ent:docker:cmp=docker_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=docker
    }
    path: '/packages/{owner}/{repo}/validate-upload/docker/': {  # ent:docker:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=docker
    }
    path: '/repos/{owner}/{identifier}/upstream/docker/': {  # ent:docker:cmp=docker_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=docker
      op: load: method: *"GET"|string  # no-schema;ent=docker
    }
    path: '/repos/{owner}/{identifier}/upstream/docker/{slug_perm}/': {  # ent:docker:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/docker:cmp=false/docker_upstream
      op: load: method: *"GET"|string  # end-param;ent=docker
      op: patch: method: *"PATCH"|string  # not-load;ent=docker
      op: remove: method: *"DELETE"|string  # not-load;ent=docker
      op: update: method: *"PUT"|string  # not-load;ent=docker
    }
  }

  entity: dynamic_mapping: {
    path: '/orgs/{org}/openid-connect/{provider_setting}/dynamic-mappings/': {  # ent:dynamic_mapping:cmp=dynamic_mapping;path=t/p/t/;path-primary;has-cmp
      op: load: method: *"GET"|string  # no-schema;ent=dynamic_mapping
    }
    path: '/orgs/{org}/openid-connect/{provider_setting}/dynamic-mappings/{claim_value}/': {  # ent:dynamic_mapping:cmp=dynamic_mapping;path=t/p/;path-primary
      rename: param: "claim_value": *"id"|string  # end-id:GET:parent=true/dynamic_mapping:cmp=false/dynamic_mapping
      rename: param: "provider_setting": *"openid_connect_id"|string  # not-primary
      op: load: method: *"GET"|string  # end-param;ent=dynamic_mapping
    }
  }

  entity: enable: {
    path: '/entitlements/{owner}/{repo}/{identifier}/enable/': {  # ent:enable:no-cmp;path=p/t/;entres=true/204,400,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=enable
    }
    path: '/orgs/{org}/saml-group-sync/enable/': {  # ent:enable:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=enable
    }
    path: '/repos/{owner}/{identifier}/geoip/enable/': {  # ent:enable:no-cmp;path=t/;entres=false/200,400,402,404,422;ent-act
      op: create: method: *"POST"|string  # not-load;ent=enable
    }
  }

  entity: entitlement: {
    path: '/entitlements/{owner}/{repo}/{identifier}/': {  # ent:entitlement:no-cmp;path=t/p/p;entres=true/204,400,422/nores;path-primary-delete
      op: remove: method: *"DELETE"|string  # not-load;ent=entitlement
    }
    path: '/metrics/entitlements/{owner}/': {  # ent:entitlement:cmp=entitlement_usage_metric;path=t/p/;path-primary
      rename: param: "owner": *"id"|string  # end-id:GET:parent=true/entitlement:cmp=false/entitlement_usage_metric
      op: load: method: *"GET"|string  # end-param;ent=entitlement
    }
    path: '/metrics/entitlements/{owner}/{repo}/': {  # ent:entitlement:cmp=entitlement_usage_metric;path=t/p/p;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=entitlement
    }
  }

  entity: error_detail: {
    path: '/orgs/{org}/saml-group-sync/{slug_perm}/': {  # ent:error_detail:no-cmp;path=t/p/;entres=true/204,400,422/nores;cmp-found-delete
      op: remove: method: *"DELETE"|string  # not-load;ent=error_detail
    }
  }

  entity: file: {
    path: '/files/{owner}/{repo}/': {  # ent:file:no-cmp;path=t/p/p;entres=false/202,400,404,422;ent-act
      op: create: method: *"POST"|string  # not-load;ent=file
    }
  }

  entity: format: {
    path: '/formats/': {  # ent:format:cmp=format;path=t/;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=format
    }
    path: '/formats/{slug}/': {  # ent:format:cmp=format;path=t/p/;path-primary
      rename: param: "slug": *"id"|string  # end-id:GET:parent=false/null:cmp=false/format
      op: load: method: *"GET"|string  # end-param;ent=format
    }
  }

  entity: go: {
    path: '/packages/{owner}/{repo}/upload/go/': {  # ent:go:cmp=go_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=go
    }
    path: '/packages/{owner}/{repo}/validate-upload/go/': {  # ent:go:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=go
    }
    path: '/repos/{owner}/{identifier}/upstream/go/': {  # ent:go:cmp=go_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=go
      op: load: method: *"GET"|string  # no-schema;ent=go
    }
    path: '/repos/{owner}/{identifier}/upstream/go/{slug_perm}/': {  # ent:go:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/go:cmp=false/go_upstream
      op: load: method: *"GET"|string  # end-param;ent=go
      op: patch: method: *"PATCH"|string  # not-load;ent=go
      op: remove: method: *"DELETE"|string  # not-load;ent=go
      op: update: method: *"PUT"|string  # not-load;ent=go
    }
  }

  entity: helm: {
    path: '/packages/{owner}/{repo}/upload/helm/': {  # ent:helm:cmp=helm_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=helm
    }
    path: '/packages/{owner}/{repo}/validate-upload/helm/': {  # ent:helm:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=helm
    }
    path: '/repos/{owner}/{identifier}/upstream/helm/': {  # ent:helm:cmp=helm_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=helm
      op: load: method: *"GET"|string  # no-schema;ent=helm
    }
    path: '/repos/{owner}/{identifier}/upstream/helm/{slug_perm}/': {  # ent:helm:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/helm:cmp=false/helm_upstream
      op: load: method: *"GET"|string  # end-param;ent=helm
      op: patch: method: *"PATCH"|string  # not-load;ent=helm
      op: remove: method: *"DELETE"|string  # not-load;ent=helm
      op: update: method: *"PUT"|string  # not-load;ent=helm
    }
  }

  entity: hex: {
    path: '/packages/{owner}/{repo}/upload/hex/': {  # ent:hex:cmp=hex_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=hex
    }
    path: '/packages/{owner}/{repo}/validate-upload/hex/': {  # ent:hex:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=hex
    }
    path: '/repos/{owner}/{identifier}/upstream/hex/': {  # ent:hex:cmp=hex_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=hex
      op: load: method: *"GET"|string  # no-schema;ent=hex
    }
    path: '/repos/{owner}/{identifier}/upstream/hex/{slug_perm}/': {  # ent:hex:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/hex:cmp=false/hex_upstream
      op: load: method: *"GET"|string  # end-param;ent=hex
      op: patch: method: *"PATCH"|string  # not-load;ent=hex
      op: remove: method: *"DELETE"|string  # not-load;ent=hex
      op: update: method: *"PUT"|string  # not-load;ent=hex
    }
  }

  entity: huggingface: {
    path: '/packages/{owner}/{repo}/upload/huggingface/': {  # ent:huggingface:cmp=huggingface_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=huggingface
    }
    path: '/packages/{owner}/{repo}/validate-upload/huggingface/': {  # ent:huggingface:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=huggingface
    }
    path: '/repos/{owner}/{identifier}/upstream/huggingface/': {  # ent:huggingface:cmp=huggingface_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=huggingface
      op: load: method: *"GET"|string  # no-schema;ent=huggingface
    }
    path: '/repos/{owner}/{identifier}/upstream/huggingface/{slug_perm}/': {  # ent:huggingface:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/huggingface:cmp=false/huggingface_upstream
      op: load: method: *"GET"|string  # end-param;ent=huggingface
      op: patch: method: *"PATCH"|string  # not-load;ent=huggingface
      op: remove: method: *"DELETE"|string  # not-load;ent=huggingface
      op: update: method: *"PUT"|string  # not-load;ent=huggingface
    }
  }

  entity: invite: {
    path: '/orgs/{org}/invites/{slug_perm}/': {  # ent:invite:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:DELETE:parent=true/invite:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load;ent=invite
    }
  }

  entity: license_policy: {
    path: '/orgs/{org}/license-policy/{slug_perm}/': {  # ent:license_policy:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:DELETE:parent=true/license_policy:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load;ent=license_policy
    }
  }

  entity: luarock: {
    path: '/packages/{owner}/{repo}/upload/luarocks/': {  # ent:luarock:cmp=luarocks_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=luarock
    }
    path: '/packages/{owner}/{repo}/validate-upload/luarocks/': {  # ent:luarock:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=luarock
    }
  }

  entity: maven: {
    path: '/packages/{owner}/{repo}/upload/maven/': {  # ent:maven:cmp=maven_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=maven
    }
    path: '/packages/{owner}/{repo}/validate-upload/maven/': {  # ent:maven:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=maven
    }
    path: '/repos/{owner}/{identifier}/upstream/maven/': {  # ent:maven:cmp=maven_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=maven
      op: load: method: *"GET"|string  # no-schema;ent=maven
    }
    path: '/repos/{owner}/{identifier}/upstream/maven/{slug_perm}/': {  # ent:maven:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/maven:cmp=false/maven_upstream
      op: load: method: *"GET"|string  # end-param;ent=maven
      op: patch: method: *"PATCH"|string  # not-load;ent=maven
      op: remove: method: *"DELETE"|string  # not-load;ent=maven
      op: update: method: *"PUT"|string  # not-load;ent=maven
    }
  }

  entity: member: {
    path: '/orgs/{org}/members/{member}/': {  # ent:member:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "member": *"id"|string  # end-id:DELETE:parent=true/member:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load;ent=member
    }
  }

  entity: namespace: {
    path: '/namespaces/': {  # ent:namespace:cmp=namespace;path=t/;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=namespace
    }
    path: '/namespaces/{slug}/': {  # ent:namespace:cmp=namespace;path=t/p/;path-primary
      rename: param: "slug": *"id"|string  # end-id:GET:parent=false/null:cmp=false/namespace
      op: load: method: *"GET"|string  # end-param;ent=namespace
    }
  }

  entity: namespace_audit_log: {
    path: '/audit-log/{owner}/': {  # ent:namespace_audit_log:cmp=namespace_audit_log;path=t/p/;cmp-primary
      rename: param: "owner": *"id"|string  # end-id:GET:parent=false/null:cmp=false/namespace_audit_log
      op: load: method: *"GET"|string  # end-param;ent=namespace_audit_log
    }
  }

  entity: npm: {
    path: '/packages/{owner}/{repo}/upload/npm/': {  # ent:npm:cmp=npm_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=npm
    }
    path: '/packages/{owner}/{repo}/validate-upload/npm/': {  # ent:npm:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=npm
    }
    path: '/repos/{owner}/{identifier}/upstream/npm/': {  # ent:npm:cmp=npm_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=npm
      op: load: method: *"GET"|string  # no-schema;ent=npm
    }
    path: '/repos/{owner}/{identifier}/upstream/npm/{slug_perm}/': {  # ent:npm:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/npm:cmp=false/npm_upstream
      op: load: method: *"GET"|string  # end-param;ent=npm
      op: patch: method: *"PATCH"|string  # not-load;ent=npm
      op: remove: method: *"DELETE"|string  # not-load;ent=npm
      op: update: method: *"PUT"|string  # not-load;ent=npm
    }
  }

  entity: nuget: {
    path: '/packages/{owner}/{repo}/upload/nuget/': {  # ent:nuget:cmp=nuget_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=nuget
    }
    path: '/packages/{owner}/{repo}/validate-upload/nuget/': {  # ent:nuget:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=nuget
    }
    path: '/repos/{owner}/{identifier}/upstream/nuget/': {  # ent:nuget:cmp=nuget_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=nuget
      op: load: method: *"GET"|string  # no-schema;ent=nuget
    }
    path: '/repos/{owner}/{identifier}/upstream/nuget/{slug_perm}/': {  # ent:nuget:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/nuget:cmp=false/nuget_upstream
      op: load: method: *"GET"|string  # end-param;ent=nuget
      op: patch: method: *"PATCH"|string  # not-load;ent=nuget
      op: remove: method: *"DELETE"|string  # not-load;ent=nuget
      op: update: method: *"PUT"|string  # not-load;ent=nuget
    }
  }

  entity: openid_connect: {
    path: '/orgs/{org}/openid-connect/{slug_perm}/': {  # ent:openid_connect:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:DELETE:parent=true/openid_connect:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load;ent=openid_connect
    }
  }

  entity: org: {
    path: '/orgs/': {  # ent:org:cmp=organization;path=t/;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=org
    }
    path: '/orgs/{org}/': {  # ent:org:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "org": *"id"|string  # end-id:GET:parent=false/null:cmp=false/organization
      op: load: method: *"GET"|string  # end-param;ent=org
      op: remove: method: *"DELETE"|string  # not-load;ent=org
    }
  }

  entity: organization_group_sync: {
    path: '/orgs/{org}/saml-group-sync/': {  # ent:organization_group_sync:cmp=organization_group_sync;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_group_sync
      op: load: method: *"GET"|string  # no-schema;ent=organization_group_sync
    }
  }

  entity: organization_group_sync_status: {
    path: '/orgs/{org}/saml-group-sync/status/': {  # ent:organization_group_sync_status:cmp=organization_group_sync_status;path=t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=organization_group_sync_status
    }
  }

  entity: organization_invite: {
    path: '/orgs/{org}/invites/': {  # ent:organization_invite:cmp=organization_invite;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_invite
      op: load: method: *"GET"|string  # no-schema;ent=organization_invite
    }
    path: '/orgs/{org}/invites/{slug_perm}/': {  # ent:organization_invite:cmp=organization_invite;path=t/p/;cmp-primary
      rename: param: "slug_perm": *"id"|string  # end-id:PATCH:parent=true/invite:cmp=false/organization_invite
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_invite
    }
  }

  entity: organization_invite_extend: {
    path: '/orgs/{org}/invites/{slug_perm}/extend/': {  # ent:organization_invite_extend:cmp=organization_invite_extend;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_invite_extend
    }
    path: '/orgs/{org}/invites/{slug_perm}/resend/': {  # ent:organization_invite_extend:cmp=organization_invite_extend;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_invite_extend
    }
  }

  entity: organization_membership: {
    path: '/orgs/{org}/members/': {  # ent:organization_membership:cmp=organization_membership;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *"GET"|string  # no-schema;ent=organization_membership
    }
    path: '/orgs/{org}/members/{member}/': {  # ent:organization_membership:cmp=organization_membership;path=t/p/;cmp-primary
      op: load: method: *"GET"|string  # end-param;ent=organization_membership
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_membership
    }
  }

  entity: organization_membership_role_update: {
    path: '/orgs/{org}/members/{member}/update-role/': {  # ent:organization_membership_role_update:cmp=organization_membership_role_update;path=t/p/t/;cmp-primary;has-cmp
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_membership_role_update
    }
  }

  entity: organization_membership_visibility_update: {
    path: '/orgs/{org}/members/{member}/update-visibility/': {  # ent:organization_membership_visibility_update:cmp=organization_membership_visibility_update;path=t/p/t/;cmp-primary;has-cmp
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_membership_visibility_update
    }
  }

  entity: organization_package_license_policy: {
    path: '/orgs/{org}/license-policy/': {  # ent:organization_package_license_policy:cmp=organization_package_license_policy;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_package_license_policy
      op: load: method: *"GET"|string  # no-schema;ent=organization_package_license_policy
    }
    path: '/orgs/{org}/license-policy/{slug_perm}/': {  # ent:organization_package_license_policy:cmp=organization_package_license_policy;path=t/p/;cmp-primary
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/license_policy:cmp=false/organization_package_license_policy
      op: load: method: *"GET"|string  # end-param;ent=organization_package_license_policy
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_package_license_policy
      op: update: method: *"PUT"|string  # not-load;ent=organization_package_license_policy
    }
  }

  entity: organization_package_vulnerability_policy: {
    path: '/orgs/{org}/vulnerability-policy/': {  # ent:organization_package_vulnerability_policy:cmp=organization_package_vulnerability_policy;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_package_vulnerability_policy
      op: load: method: *"GET"|string  # no-schema;ent=organization_package_vulnerability_policy
    }
    path: '/orgs/{org}/vulnerability-policy/{slug_perm}/': {  # ent:organization_package_vulnerability_policy:cmp=organization_package_vulnerability_policy;path=t/p/;cmp-primary
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/vulnerability_policy:cmp=false/organization_package_vulnerability_policy
      op: load: method: *"GET"|string  # end-param;ent=organization_package_vulnerability_policy
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_package_vulnerability_policy
      op: update: method: *"PUT"|string  # not-load;ent=organization_package_vulnerability_policy
    }
  }

  entity: organization_sa_ml_auth: {
    path: '/orgs/{org}/saml-authentication': {  # ent:organization_sa_ml_auth:cmp=organization_sa_ml_auth;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *"GET"|string  # no-schema;ent=organization_sa_ml_auth
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_sa_ml_auth
    }
  }

  entity: organization_team: {
    path: '/orgs/{org}/teams/': {  # ent:organization_team:cmp=organization_team;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_team
      op: load: method: *"GET"|string  # no-schema;ent=organization_team
    }
    path: '/orgs/{org}/teams/{team}/': {  # ent:organization_team:cmp=organization_team;path=t/p/;cmp-primary
      rename: param: "team": *"id"|string  # end-id:GET:parent=true/team:cmp=false/organization_team
      op: load: method: *"GET"|string  # end-param;ent=organization_team
      op: patch: method: *"PATCH"|string  # not-load;ent=organization_team
    }
  }

  entity: organization_team_member: {
    path: '/orgs/{org}/teams/{team}/members': {  # ent:organization_team_member:cmp=organization_team_member;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=organization_team_member
      op: load: method: *"GET"|string  # no-schema;ent=organization_team_member
    }
  }

  entity: p2: {
    path: '/packages/{owner}/{repo}/upload/p2/': {  # ent:p2:cmp=p2_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=p2
    }
    path: '/packages/{owner}/{repo}/validate-upload/p2/': {  # ent:p2:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=p2
    }
  }

  entity: package: {
    path: '/metrics/packages/{owner}/{repo}/': {  # ent:package:cmp=package_usage_metric;path=t/p/p;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=package
    }
    path: '/packages/{owner}/{repo}/': {  # ent:package:cmp=package;path=t/p/p;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=package
    }
    path: '/packages/{owner}/{repo}/{identifier}/': {  # ent:package:no-cmp;path=t/p/p;entres=true/204,400,422/nores;path-primary-delete
      op: load: method: *"GET"|string  # no-schema;ent=package
      op: remove: method: *"DELETE"|string  # not-load;ent=package
    }
    path: '/packages/{owner}/{repo}/{identifier}/scan/': {  # ent:package:cmp=package;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=package
    }
    path: '/packages/{owner}/{repo}/{identifier}/tag/': {  # ent:package:cmp=package;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=package
    }
  }

  entity: package_copy: {
    path: '/packages/{owner}/{repo}/{identifier}/copy/': {  # ent:package_copy:cmp=package_copy;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=package_copy
    }
  }

  entity: package_deny_policy: {
    path: '/orgs/{org}/deny-policy/': {  # ent:package_deny_policy:cmp=package_deny_policy;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=package_deny_policy
      op: load: method: *"GET"|string  # no-schema;ent=package_deny_policy
    }
    path: '/orgs/{org}/deny-policy/{slug_perm}/': {  # ent:package_deny_policy:cmp=package_deny_policy;path=t/p/;cmp-primary
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/deny_policy:cmp=false/package_deny_policy
      op: load: method: *"GET"|string  # end-param;ent=package_deny_policy
      op: patch: method: *"PATCH"|string  # not-load;ent=package_deny_policy
      op: update: method: *"PUT"|string  # not-load;ent=package_deny_policy
    }
  }

  entity: package_dependency: {
    path: '/packages/{owner}/{repo}/{identifier}/dependencies/': {  # ent:package_dependency:cmp=package_dependency;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=package_dependency
    }
  }

  entity: package_file_parts_upload: {
    path: '/files/{owner}/{repo}/{identifier}/info/': {  # ent:package_file_parts_upload:cmp=package_file_parts_upload;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=package_file_parts_upload
    }
  }

  entity: package_file_upload: {
    path: '/files/{owner}/{repo}/{identifier}/complete/': {  # ent:package_file_upload:cmp=package_file_upload;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=package_file_upload
    }
  }

  entity: package_group: {
    path: '/packages/{owner}/{repo}/groups/': {  # ent:package_group:cmp=package_group;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=package_group
    }
  }

  entity: package_license_policy_evaluation_request: {
    path: '/orgs/{org}/license-policy/{policy_slug_perm}/evaluation/': {  # ent:package_license_policy_evaluation_request:cmp=package_license_policy_evaluation_request;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=package_license_policy_evaluation_request
      op: load: method: *"GET"|string  # no-schema;ent=package_license_policy_evaluation_request
    }
    path: '/orgs/{org}/license-policy/{policy_slug_perm}/evaluation/{slug_perm}/': {  # ent:package_license_policy_evaluation_request:cmp=package_license_policy_evaluation_request;path=t/p/;cmp-primary
      rename: param: "policy_slug_perm": *"license_policy_id"|string  # not-primary
      op: load: method: *"GET"|string  # end-param;ent=package_license_policy_evaluation_request
    }
  }

  entity: package_license_policy_violation_log: {
    path: '/orgs/{org}/license-policy-violation/': {  # ent:package_license_policy_violation_log:cmp=package_license_policy_violation_log;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *"GET"|string  # no-schema;ent=package_license_policy_violation_log
    }
  }

  entity: package_move: {
    path: '/packages/{owner}/{repo}/{identifier}/move/': {  # ent:package_move:cmp=package_move;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=package_move
    }
  }

  entity: package_quarantine: {
    path: '/packages/{owner}/{repo}/{identifier}/quarantine/': {  # ent:package_quarantine:cmp=package_quarantine;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=package_quarantine
    }
  }

  entity: package_resync: {
    path: '/packages/{owner}/{repo}/{identifier}/resync/': {  # ent:package_resync:cmp=package_resync;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=package_resync
    }
  }

  entity: package_status: {
    path: '/packages/{owner}/{repo}/{identifier}/status/': {  # ent:package_status:cmp=package_status;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=package_status
    }
  }

  entity: package_version_badge: {
    path: '/badges/version/{owner}/{repo}/{package_format}/{package_name}/{package_version}/{package_identifiers}/': {  # ent:package_version_badge:cmp=package_version_badge;path=t/p/p;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=package_version_badge
    }
  }

  entity: package_vulnerability_policy_evaluation_request: {
    path: '/orgs/{org}/vulnerability-policy/{policy_slug_perm}/evaluation/': {  # ent:package_vulnerability_policy_evaluation_request:cmp=package_vulnerability_policy_evaluation_request;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=package_vulnerability_policy_evaluation_request
      op: load: method: *"GET"|string  # no-schema;ent=package_vulnerability_policy_evaluation_request
    }
    path: '/orgs/{org}/vulnerability-policy/{policy_slug_perm}/evaluation/{slug_perm}/': {  # ent:package_vulnerability_policy_evaluation_request:cmp=package_vulnerability_policy_evaluation_request;path=t/p/;cmp-primary
      rename: param: "policy_slug_perm": *"vulnerability_policy_id"|string  # not-primary
      op: load: method: *"GET"|string  # end-param;ent=package_vulnerability_policy_evaluation_request
    }
  }

  entity: package_vulnerability_policy_violation_log: {
    path: '/orgs/{org}/vulnerability-policy-violation/': {  # ent:package_vulnerability_policy_violation_log:cmp=package_vulnerability_policy_violation_log;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *"GET"|string  # no-schema;ent=package_vulnerability_policy_violation_log
    }
  }

  entity: privilege: {
    path: '/repos/{owner}/{identifier}/privileges': {  # ent:privilege:no-cmp;path=p/t/;entres=true/204,400,404,422/nores;path-primary
      op: patch: method: *"PATCH"|string  # not-load;ent=privilege
      op: update: method: *"PUT"|string  # not-load;ent=privilege
    }
  }

  entity: provider_setting: {
    path: '/orgs/{org}/openid-connect/': {  # ent:provider_setting:cmp=provider_setting;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *"GET"|string  # no-schema;ent=provider_setting
    }
    path: '/orgs/{org}/openid-connect/{slug_perm}/': {  # ent:provider_setting:cmp=provider_setting;path=t/p/;cmp-primary
      op: load: method: *"GET"|string  # end-param;ent=provider_setting
    }
  }

  entity: provider_settings_write: {
    path: '/orgs/{org}/openid-connect/': {  # ent:provider_settings_write:cmp=provider_settings_write;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=provider_settings_write
    }
    path: '/orgs/{org}/openid-connect/{slug_perm}/': {  # ent:provider_settings_write:cmp=provider_settings_write;path=t/p/;cmp-primary
      op: patch: method: *"PATCH"|string  # not-load;ent=provider_settings_write
      op: update: method: *"PUT"|string  # not-load;ent=provider_settings_write
    }
  }

  entity: python: {
    path: '/packages/{owner}/{repo}/upload/python/': {  # ent:python:cmp=python_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=python
    }
    path: '/packages/{owner}/{repo}/validate-upload/python/': {  # ent:python:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=python
    }
    path: '/repos/{owner}/{identifier}/upstream/python/': {  # ent:python:cmp=python_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=python
      op: load: method: *"GET"|string  # no-schema;ent=python
    }
    path: '/repos/{owner}/{identifier}/upstream/python/{slug_perm}/': {  # ent:python:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/python:cmp=false/python_upstream
      op: load: method: *"GET"|string  # end-param;ent=python
      op: patch: method: *"PATCH"|string  # not-load;ent=python
      op: remove: method: *"DELETE"|string  # not-load;ent=python
      op: update: method: *"PUT"|string  # not-load;ent=python
    }
  }

  entity: quota: {
    path: '/quota/oss/{owner}/': {  # ent:quota:cmp=quota;path=t/p/;cmp-primary
      op: load: method: *"GET"|string  # end-param;ent=quota
    }
    path: '/quota/{owner}/': {  # ent:quota:cmp=quota;path=t/p/;path-primary
      rename: param: "owner": *"id"|string  # end-id:GET:parent=false/null:cmp=false/quota
      op: load: method: *"GET"|string  # end-param;ent=quota
    }
  }

  entity: quota_history: {
    path: '/quota/history/{owner}/': {  # ent:quota_history:cmp=quota_history;path=t/p/;cmp-primary
      rename: param: "owner": *"id"|string  # end-id:GET:parent=true/history:cmp=false/quota_history
      op: load: method: *"GET"|string  # end-param;ent=quota_history
    }
    path: '/quota/oss/history/{owner}/': {  # ent:quota_history:cmp=quota_history;path=t/p/;cmp-primary
      rename: param: "owner": *"id"|string  # end-id:GET:parent=true/history:cmp=false/quota_history
      op: load: method: *"GET"|string  # end-param;ent=quota_history
    }
  }

  entity: raw: {
    path: '/packages/{owner}/{repo}/upload/raw/': {  # ent:raw:cmp=raw_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=raw
    }
    path: '/packages/{owner}/{repo}/validate-upload/raw/': {  # ent:raw:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=raw
    }
  }

  entity: refresh: {
    path: '/orgs/{org}/members/{member}/refresh/': {  # ent:refresh:no-cmp;path=t/p/t/;entres=true/204,400,404,422/nores;path-primary;prob-ent-prefix
      op: create: method: *"POST"|string  # not-load;ent=refresh
    }
  }

  entity: remove: {
    path: '/orgs/{org}/members/{member}/remove/': {  # ent:remove:no-cmp;path=t/p/t/;entres=true/204,400,422/nores;path-primary;prob-ent-prefix
      op: load: method: *"GET"|string  # no-schema;ent=remove
    }
  }

  entity: repo: {
    path: '/repos/': {  # ent:repo:cmp=repository;path=t/;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=repo
    }
    path: '/repos/{owner}/': {  # ent:repo:cmp=repository_create;path=t/p/;path-primary
      rename: param: "owner": *"id"|string  # end-id:GET:parent=false/null:cmp=false/repository
      op: create: method: *"POST"|string  # not-load;ent=repo
      op: load: method: *"GET"|string  # end-param;ent=repo
    }
    path: '/repos/{owner}/{identifier}/': {  # ent:repo:no-cmp;path=t/p/p;entres=false/200,400,404,422;ent-act
      op: load: method: *"GET"|string  # no-schema;ent=repo
      op: patch: method: *"PATCH"|string  # not-load;ent=repo
      op: remove: method: *"DELETE"|string  # not-load;ent=repo
    }
  }

  entity: repository_audit_log: {
    path: '/audit-log/{owner}/{repo}/': {  # ent:repository_audit_log:cmp=repository_audit_log;path=t/p/p;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_audit_log
    }
  }

  entity: repository_ecdsa_key: {
    path: '/repos/{owner}/{identifier}/ecdsa/': {  # ent:repository_ecdsa_key:cmp=repository_ecdsa_key;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_ecdsa_key
      op: load: method: *"GET"|string  # no-schema;ent=repository_ecdsa_key
    }
    path: '/repos/{owner}/{identifier}/ecdsa/regenerate/': {  # ent:repository_ecdsa_key:cmp=repository_ecdsa_key;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_ecdsa_key
    }
  }

  entity: repository_geo_ip_rule: {
    path: '/repos/{owner}/{identifier}/geoip': {  # ent:repository_geo_ip_rule:cmp=repository_geo_ip_rule;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_geo_ip_rule
      op: patch: method: *"PATCH"|string  # not-load;ent=repository_geo_ip_rule
      op: update: method: *"PUT"|string  # not-load;ent=repository_geo_ip_rule
    }
  }

  entity: repository_geo_ip_status: {
    path: '/repos/{owner}/{identifier}/geoip/status/': {  # ent:repository_geo_ip_status:cmp=repository_geo_ip_status;path=t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_geo_ip_status
    }
  }

  entity: repository_geo_ip_test_address_response: {
    path: '/repos/{owner}/{identifier}/geoip/test/': {  # ent:repository_geo_ip_test_address_response:cmp=repository_geo_ip_test_address_response;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_geo_ip_test_address_response
    }
  }

  entity: repository_gpg_key: {
    path: '/repos/{owner}/{identifier}/gpg/': {  # ent:repository_gpg_key:cmp=repository_gpg_key;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_gpg_key
      op: load: method: *"GET"|string  # no-schema;ent=repository_gpg_key
    }
    path: '/repos/{owner}/{identifier}/gpg/regenerate/': {  # ent:repository_gpg_key:cmp=repository_gpg_key;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_gpg_key
    }
  }

  entity: repository_privilege_input: {
    path: '/repos/{owner}/{identifier}/privileges': {  # ent:repository_privilege_input:cmp=repository_privilege_input;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_privilege_input
    }
  }

  entity: repository_retention_rule: {
    path: '/repos/{owner}/{repo}/retention/': {  # ent:repository_retention_rule:cmp=repository_retention_rule;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_retention_rule
      op: patch: method: *"PATCH"|string  # not-load;ent=repository_retention_rule
    }
  }

  entity: repository_rsa_key: {
    path: '/repos/{owner}/{identifier}/rsa/': {  # ent:repository_rsa_key:cmp=repository_rsa_key;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_rsa_key
      op: load: method: *"GET"|string  # no-schema;ent=repository_rsa_key
    }
    path: '/repos/{owner}/{identifier}/rsa/regenerate/': {  # ent:repository_rsa_key:cmp=repository_rsa_key;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_rsa_key
    }
  }

  entity: repository_token: {
    path: '/entitlements/{owner}/{repo}/': {  # ent:repository_token:cmp=repository_token;path=t/p/p;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_token
      op: load: method: *"GET"|string  # no-schema;ent=repository_token
    }
    path: '/entitlements/{owner}/{repo}/{identifier}/': {  # ent:repository_token:cmp=repository_token;path=t/p/p;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_token
      op: patch: method: *"PATCH"|string  # not-load;ent=repository_token
    }
  }

  entity: repository_token_refresh: {
    path: '/entitlements/{owner}/{repo}/{identifier}/refresh/': {  # ent:repository_token_refresh:cmp=repository_token_refresh;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_token_refresh
    }
  }

  entity: repository_token_sync: {
    path: '/entitlements/{owner}/{repo}/sync/': {  # ent:repository_token_sync:cmp=repository_token_sync;path=p/t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_token_sync
    }
  }

  entity: repository_webhook: {
    path: '/webhooks/{owner}/{repo}/': {  # ent:repository_webhook:cmp=repository_webhook;path=t/p/p;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=repository_webhook
      op: load: method: *"GET"|string  # no-schema;ent=repository_webhook
    }
    path: '/webhooks/{owner}/{repo}/{identifier}/': {  # ent:repository_webhook:cmp=repository_webhook;path=t/p/p;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_webhook
      op: patch: method: *"PATCH"|string  # not-load;ent=repository_webhook
    }
  }

  entity: repository_x509_ecdsa_certificate: {
    path: '/repos/{owner}/{identifier}/x509-ecdsa/': {  # ent:repository_x509_ecdsa_certificate:cmp=repository_x509_ecdsa_certificate;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_x509_ecdsa_certificate
    }
  }

  entity: repository_x509_rsa_certificate: {
    path: '/repos/{owner}/{identifier}/x509-rsa/': {  # ent:repository_x509_rsa_certificate:cmp=repository_x509_rsa_certificate;path=p/t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=repository_x509_rsa_certificate
    }
  }

  entity: reset: {
    path: '/entitlements/{owner}/{repo}/{identifier}/reset/': {  # ent:reset:no-cmp;path=p/t/;entres=true/204,400,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=reset
    }
  }

  entity: resources_rate_check: {
    path: '/rates/limits/': {  # ent:resources_rate_check:cmp=resources_rate_check;path=t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=resources_rate_check
    }
  }

  entity: rpm: {
    path: '/packages/{owner}/{repo}/upload/rpm/': {  # ent:rpm:cmp=rpm_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=rpm
    }
    path: '/packages/{owner}/{repo}/validate-upload/rpm/': {  # ent:rpm:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=rpm
    }
    path: '/repos/{owner}/{identifier}/upstream/rpm/': {  # ent:rpm:cmp=rpm_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=rpm
      op: load: method: *"GET"|string  # no-schema;ent=rpm
    }
    path: '/repos/{owner}/{identifier}/upstream/rpm/{slug_perm}/': {  # ent:rpm:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/rpm:cmp=false/rpm_upstream
      op: load: method: *"GET"|string  # end-param;ent=rpm
      op: patch: method: *"PATCH"|string  # not-load;ent=rpm
      op: remove: method: *"DELETE"|string  # not-load;ent=rpm
      op: update: method: *"PUT"|string  # not-load;ent=rpm
    }
  }

  entity: ruby: {
    path: '/packages/{owner}/{repo}/upload/ruby/': {  # ent:ruby:cmp=ruby_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=ruby
    }
    path: '/packages/{owner}/{repo}/validate-upload/ruby/': {  # ent:ruby:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=ruby
    }
    path: '/repos/{owner}/{identifier}/upstream/ruby/': {  # ent:ruby:cmp=ruby_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=ruby
      op: load: method: *"GET"|string  # no-schema;ent=ruby
    }
    path: '/repos/{owner}/{identifier}/upstream/ruby/{slug_perm}/': {  # ent:ruby:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/ruby:cmp=false/ruby_upstream
      op: load: method: *"GET"|string  # end-param;ent=ruby
      op: patch: method: *"PATCH"|string  # not-load;ent=ruby
      op: remove: method: *"DELETE"|string  # not-load;ent=ruby
      op: update: method: *"PUT"|string  # not-load;ent=ruby
    }
  }

  entity: service: {
    path: '/orgs/{org}/services/': {  # ent:service:cmp=service;path=t/p/t/;path-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=service
      op: load: method: *"GET"|string  # no-schema;ent=service
    }
    path: '/orgs/{org}/services/{service}/': {  # ent:service:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "service": *"id"|string  # end-id:GET:parent=true/service:cmp=false/service
      op: load: method: *"GET"|string  # end-param;ent=service
      op: patch: method: *"PATCH"|string  # not-load;ent=service
      op: remove: method: *"DELETE"|string  # not-load;ent=service
    }
    path: '/orgs/{org}/services/{service}/refresh/': {  # ent:service:cmp=service;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *"POST"|string  # not-load;ent=service
    }
  }

  entity: status_basic: {
    path: '/status/check/basic/': {  # ent:status_basic:cmp=status_basic;path=t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=status_basic
    }
  }

  entity: storage_region: {
    path: '/storage-regions/': {  # ent:storage_region:cmp=storage_region;path=t/;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=storage_region
    }
    path: '/storage-regions/{slug}/': {  # ent:storage_region:cmp=storage_region;path=t/p/;path-primary
      rename: param: "slug": *"id"|string  # end-id:GET:parent=false/null:cmp=false/storage_region
      op: load: method: *"GET"|string  # end-param;ent=storage_region
    }
  }

  entity: swift: {
    path: '/packages/{owner}/{repo}/upload/swift/': {  # ent:swift:cmp=swift_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=swift
    }
    path: '/packages/{owner}/{repo}/validate-upload/swift/': {  # ent:swift:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=swift
    }
    path: '/repos/{owner}/{identifier}/upstream/swift/': {  # ent:swift:cmp=swift_upstream;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=swift
      op: load: method: *"GET"|string  # no-schema;ent=swift
    }
    path: '/repos/{owner}/{identifier}/upstream/swift/{slug_perm}/': {  # ent:swift:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:GET:parent=true/swift:cmp=false/swift_upstream
      op: load: method: *"GET"|string  # end-param;ent=swift
      op: patch: method: *"PATCH"|string  # not-load;ent=swift
      op: remove: method: *"DELETE"|string  # not-load;ent=swift
      op: update: method: *"PUT"|string  # not-load;ent=swift
    }
  }

  entity: team: {
    path: '/orgs/{org}/teams/{team}/': {  # ent:team:no-cmp;path=t/p/;entres=true/204,400,404,422/nores;path-primary-delete
      rename: param: "team": *"id"|string  # end-id:DELETE:parent=true/team:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load;ent=team
    }
  }

  entity: team_member: {
    path: '/orgs/{org}/teams/{team}/members': {  # ent:team_member:no-cmp;path=t/p/t/;entres=true/204,400,404,422/nores;path-primary;prob-ent-part
      op: update: method: *"PUT"|string  # not-load;ent=team_member
    }
  }

  entity: terraform: {
    path: '/packages/{owner}/{repo}/upload/terraform/': {  # ent:terraform:cmp=terraform_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=terraform
    }
    path: '/packages/{owner}/{repo}/validate-upload/terraform/': {  # ent:terraform:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=terraform
    }
  }

  entity: transfer_region: {
    path: '/repos/{owner}/{repo}/transfer-region/': {  # ent:transfer_region:no-cmp;path=p/t/;entres=false/200,400,402,404,422;ent-act
      op: create: method: *"POST"|string  # not-load;ent=transfer_region
    }
  }

  entity: user_auth_token: {
    path: '/user/token/': {  # ent:user_auth_token:cmp=user_auth_token;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=user_auth_token
    }
  }

  entity: user_authentication_token: {
    path: '/user/tokens/': {  # ent:user_authentication_token:cmp=user_authentication_token;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load;ent=user_authentication_token
      op: load: method: *"GET"|string  # no-schema;ent=user_authentication_token
    }
    path: '/user/tokens/{slug_perm}/refresh/': {  # ent:user_authentication_token:cmp=user_authentication_token;path=t/p/t/;cmp-primary;has-cmp
      op: update: method: *"PUT"|string  # not-load;ent=user_authentication_token
    }
  }

  entity: user_brief: {
    path: '/user/self/': {  # ent:user_brief:cmp=user_brief;path=t/;cmp-primary
      op: load: method: *"GET"|string  # no-schema;ent=user_brief
    }
  }

  entity: user_profile: {
    path: '/users/profile/{slug}/': {  # ent:user_profile:cmp=user_profile;path=t/p/;cmp-primary
      rename: param: "slug": *"id"|string  # end-id:GET:parent=true/profile:cmp=false/user_profile
      op: load: method: *"GET"|string  # end-param;ent=user_profile
    }
  }

  entity: vagrant: {
    path: '/packages/{owner}/{repo}/upload/vagrant/': {  # ent:vagrant:cmp=vagrant_package_upload;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load;ent=vagrant
    }
    path: '/packages/{owner}/{repo}/validate-upload/vagrant/': {  # ent:vagrant:no-cmp;path=t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=vagrant
    }
  }

  entity: validate: {
    path: '/files/{owner}/{repo}/validate/': {  # ent:validate:no-cmp;path=p/t/;entres=true/204,400,404,422/nores;path-primary
      op: create: method: *"POST"|string  # not-load;ent=validate
    }
  }

  entity: vulnerability: {
    path: '/vulnerabilities/{owner}/': {  # ent:vulnerability:cmp=vulnerability_scan_results_list;path=t/p/;path-primary
      rename: param: "owner": *"id"|string  # end-id:GET:parent=false/null:cmp=false/vulnerability_scan_results_list
      op: load: method: *"GET"|string  # end-param;ent=vulnerability
    }
    path: '/vulnerabilities/{owner}/{repo}/': {  # ent:vulnerability:cmp=vulnerability_scan_results_list;path=t/p/p;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=vulnerability
    }
    path: '/vulnerabilities/{owner}/{repo}/{package}/': {  # ent:vulnerability:cmp=vulnerability_scan_results_list;path=t/p/p;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=vulnerability
    }
    path: '/vulnerabilities/{owner}/{repo}/{package}/{identifier}/': {  # ent:vulnerability:cmp=vulnerability_scan_result;path=t/p/p;path-primary
      op: load: method: *"GET"|string  # no-schema;ent=vulnerability
    }
  }

  entity: vulnerability_policy: {
    path: '/orgs/{org}/vulnerability-policy/{slug_perm}/': {  # ent:vulnerability_policy:no-cmp;path=t/p/;entres=true/204,400,422/nores;path-primary-delete
      rename: param: "slug_perm": *"id"|string  # end-id:DELETE:parent=true/vulnerability_policy:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load;ent=vulnerability_policy
    }
  }

  entity: webhook: {
    path: '/webhooks/{owner}/{repo}/{identifier}/': {  # ent:webhook:no-cmp;path=t/p/p;entres=true/204,400,422/nores;path-primary-delete
      op: remove: method: *"DELETE"|string  # not-load;ent=webhook
    }
  }

}