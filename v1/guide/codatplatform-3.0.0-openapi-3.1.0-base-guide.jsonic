# Guide

guide: {

  entity: all: {
    path: '/companies/{companyId}/data/all': {  # ent:no-cmp;path=t/;no-cmp
      op: create: method": *"POST"|string  # not-load
    }
  }

  entity: api_key: {
    path: '/apiKeys': {  # ent:cmp=api_key_detail;path=t/;cr=0.088;path-primary
      op: create: method": *"POST"|string  # not-load
      op: list: method": *"GET"|string  # array-prop:results
    }
    path: '/apiKeys/{apiKeyId}': {  # ent:no-cmp;path=t/p/;no-cmp
      rename: param: "apiKeyId": *"id"|string  # end-id
      op: remove: method": *"DELETE"|string  # not-load
    }
  }

  entity: authorization: {
    path: '/companies/{companyId}/connections/{connectionId}/authorization': {  # ent:cmp=connection;path=t/p/t/;cr=0.853;path-primary
      op: update: method": *"PUT"|string  # not-load
    }
  }

  entity: branding: {
    path: '/integrations/{platformKey}/branding': {  # ent:cmp=branding;path=t/p/t/;cr=0.029;path-primary
      op: load: method": *"GET"|string  # not-list
    }
  }

  entity: company: {
    path: '/companies': {  # ent:cmp=company;path=t/;cr=0.206;path-primary
      op: create: method": *"POST"|string  # not-load
      op: list: method": *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}': {  # ent:cmp=company;path=t/p/;cr=0.206;path-primary
      rename: param: "companyId": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
      op: patch: method": *"PATCH"|string  # not-load
      op: remove: method": *"DELETE"|string  # not-load
      op: update: method": *"PUT"|string  # not-load
    }
  }

  entity: company_access_token: {
    path: '/companies/{companyId}/accessToken': {  # ent:cmp=company_access_token;path=t/p/t/;cr=0.029;cmp-primary
      op: load: method": *"GET"|string  # not-list
    }
  }

  entity: connection: {
    path: '/companies/{companyId}/connections': {  # ent:cmp=connection;path=t/p/t/;cr=0.853;path-primary
      op: create: method": *"POST"|string  # not-load
      op: list: method": *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}/connections/{connectionId}': {  # ent:cmp=connection;path=t/p/;cr=0.853;path-primary
      rename: param: "connectionId": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
      op: patch: method": *"PATCH"|string  # not-load
      op: remove: method": *"DELETE"|string  # not-load
    }
  }

  entity: connection_management_access_token: {
    path: '/companies/{companyId}/connectionManagement/accessToken': {  # ent:cmp=connection_management_access_token;path=t/;cr=0.029;cmp-primary
      op: load: method": *"GET"|string  # not-list
    }
  }

  entity: connection_management_allowed_origin: {
    path: '/connectionManagement/corsSettings': {  # ent:cmp=connection_management_allowed_origin;path=t/;cr=0.206;cmp-primary
      op: create: method": *"POST"|string  # not-load
      op: list: method": *"GET"|string  # array-prop:allowedOrigins
    }
    path: '/corsSettings': {  # ent:cmp=connection_management_allowed_origin;path=t/;cr=0.206;cmp-primary
      op: create: method": *"POST"|string  # not-load
      op: list: method": *"GET"|string  # array-prop:allowedOrigins
    }
  }

  entity: custom: {
    path: '/companies/{companyId}/connections/{connectionId}/data/custom/{customDataIdentifier}': {  # ent:cmp=custom_data_type_record;path=t/p/;cr=0.059;path-primary
      rename: param: "connectionId": *"connection_id"|string  # non-primary
      rename: param: "customDataIdentifier": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
    }
    path: '/integrations/{platformKey}/dataTypes/custom/{customDataIdentifier}': {  # ent:cmp=custom_data_type_configuration;path=t/p/;cr=0.059;path-primary
      rename: param: "customDataIdentifier": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
      op: update: method": *"PUT"|string  # not-load
    }
  }

  entity: data_status: {
    path: '/companies/{companyId}/dataStatus': {  # ent:cmp=data_status;path=t/p/t/;cr=2.559;path-primary
      op: load: method": *"GET"|string  # not-list
    }
  }

  entity: data_type_supplemental_data_config: {
    path: '/integrations/{platformKey}/dataTypes/{dataType}/supplementalDataConfig': {  # ent:no-cmp;path=t/p/t/
      op: update: method": *"PUT"|string  # not-load
    }
  }

  entity: integration: {
    path: '/integrations': {  # ent:cmp=integration;path=t/;cr=0.118;path-primary
      op: list: method": *"GET"|string  # array-prop:results
    }
    path: '/integrations/{platformKey}': {  # ent:cmp=integration;path=t/p/;cr=0.118;path-primary
      rename: param: "platformKey": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
    }
  }

  entity: product: {
    path: '/companies/{companyId}/products/{productIdentifier}': {  # ent:no-cmp;path=t/p/;no-cmp
      rename: param: "productIdentifier": *"id"|string  # end-id
      op: remove: method": *"DELETE"|string  # not-load
      op: update: method": *"PUT"|string  # not-load
    }
  }

  entity: product_refresh: {
    path: '/companies/{companyId}/products/{productIdentifier}/refresh': {  # ent:no-cmp;path=t/p/t/
      op: create: method": *"POST"|string  # not-load
    }
  }

  entity: profile: {
    path: '/profile': {  # ent:cmp=profile;path=t/;cr=0.088;path-primary
      op: list: method": *"GET"|string  # array-prop:whiteListUrls
      op: update: method": *"PUT"|string  # not-load
    }
  }

  entity: pull_operation: {
    path: '/companies/{companyId}/connections/{connectionId}/data/queue/custom/{customDataIdentifier}': {  # ent:cmp=pull_operation;path=t/p/;cr=0.176;cmp-primary
      rename: param: "connectionId": *"connection_id"|string  # non-primary
      rename: param: "customDataIdentifier": *"id"|string  # end-id
      op: create: method": *"POST"|string  # not-load
    }
    path: '/companies/{companyId}/data/history': {  # ent:cmp=pull_operation;path=t/;cr=0.176;cmp-primary
      op: list: method": *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}/data/history/{datasetId}': {  # ent:cmp=pull_operation;path=t/p/;cr=0.176;cmp-primary
      rename: param: "datasetId": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
    }
    path: '/companies/{companyId}/data/queue/{dataType}': {  # ent:cmp=pull_operation;path=t/p/;cr=0.176;cmp-primary
      rename: param: "dataType": *"id"|string  # end-id
      op: create: method": *"POST"|string  # not-load
    }
  }

  entity: push: {
    path: '/companies/{companyId}/push': {  # ent:cmp=push_operation;path=t/p/t/;cr=0.118;path-primary
      op: list: method": *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}/push/{pushOperationKey}': {  # ent:cmp=push_operation;path=t/p/;cr=0.118;path-primary
      rename: param: "pushOperationKey": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
    }
  }

  entity: push_option: {
    path: '/companies/{companyId}/connections/{connectionId}/options/{dataType}': {  # ent:cmp=push_option;path=t/p/;cr=0.029;cmp-primary
      rename: param: "connectionId": *"connection_id"|string  # non-primary
      rename: param: "dataType": *"id"|string  # end-id
      op: load: method": *"GET"|string  # end-param
    }
  }

  entity: supplemental_data_config: {
    path: '/integrations/{platformKey}/dataTypes/{dataType}/supplementalDataConfig': {  # ent:cmp=supplemental_data_configuration;path=t/p/t/;cr=0.059;path-primary
      op: load: method": *"GET"|string  # not-list
    }
  }

  entity: sync_setting: {
    path: '/profile/syncSettings': {  # ent:no-cmp;path=t/;no-cmp
      op: create: method": *"POST"|string  # not-load
      op: list: method": *"GET"|string  # array-prop:settings
    }
  }

  entity: validation: {
    path: '/companies/{companyId}/sync/{datasetId}/validation': {  # ent:cmp=validation_result;path=t/p/t/;cr=0.029;path-primary
      op: list: method": *"GET"|string  # array-prop:errors;array-prop:warnings
    }
  }

  entity: webhook: {
    path: '/webhooks': {  # ent:cmp=webhook_consumer;path=t/;cr=0.147;path-primary
      op: create: method": *"POST"|string  # not-load
      op: list: method": *"GET"|string  # array-prop:results
    }
    path: '/webhooks/{webhookId}': {  # ent:no-cmp;path=t/p/;no-cmp
      rename: param: "webhookId": *"id"|string  # end-id
      op: remove: method": *"DELETE"|string  # not-load
    }
  }

  entity: webhook_zapier_key: {
    path: '/webhooks/integrationKeys/zapier': {  # ent:cmp=webhook_zapier_key;path=t/;cr=0.029;cmp-primary
      op: create: method": *"POST"|string  # not-load
    }
  }

}
