# Guide

guide: {

  entity: all: {
    path: '/companies/{companyId}/data/all': {  # ent:all:no-cmp;path=t/;entres=true/204,400,401,402,403,404,429,500,503/nores;path-primary
      op: create: method: *"POST"|string  # not-load
    }
  }

  entity: api_key: {
    path: '/apiKeys': {  # ent:api_key:cmp=api_key_detail;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load
      op: list: method: *"GET"|string  # array-prop:results
    }
    path: '/apiKeys/{apiKeyId}': {  # ent:api_key:no-cmp;path=t/p/;entres=true/204,401,402,403,404,429,500,503/nores;path-primary
      rename: param: "apiKeyId": *"id"|string  # end-id:DELETE:parent=false/null:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load
    }
  }

  entity: branding: {
    path: '/integrations/{platformKey}/branding': {  # ent:branding:cmp=branding;path=t/p/t/;has-cmp;path-primary
      op: load: method: *"GET"|string  # not-list
    }
  }

  entity: company: {
    path: '/companies': {  # ent:company:cmp=company;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load
      op: list: method: *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}': {  # ent:company:no-cmp;path=t/p/;entres=true/204,401,402,403,404,429,500,503/nores;path-primary
      rename: param: "companyId": *"id"|string  # end-id:GET:parent=false/null:cmp=false/company
      op: load: method: *"GET"|string  # end-param
      op: patch: method: *"PATCH"|string  # not-load
      op: remove: method: *"DELETE"|string  # not-load
      op: update: method: *"PUT"|string  # not-load
    }
  }

  entity: company_access_token: {
    path: '/companies/{companyId}/accessToken': {  # ent:company_access_token:cmp=company_access_token;path=t/p/t/;has-cmp;cmp-primary
      op: load: method: *"GET"|string  # not-list
    }
  }

  entity: connection: {
    path: '/companies/{companyId}/connections': {  # ent:connection:cmp=connection;path=t/p/t/;has-cmp;path-primary
      op: create: method: *"POST"|string  # not-load
      op: list: method: *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}/connections/{connectionId}': {  # ent:connection:no-cmp;path=t/p/;entres=false/200,401,402,403,404,429,500,503;ent-act
      rename: param: "connectionId": *"id"|string  # end-id:GET:parent=true/connection:cmp=false/connection
      op: load: method: *"GET"|string  # end-param
      op: patch: method: *"PATCH"|string  # not-load
      op: remove: method: *"DELETE"|string  # not-load
    }
    path: '/companies/{companyId}/connections/{connectionId}/authorization': {  # ent:connection:cmp=connection;path=t/p/t/;has-cmp;cmp-path
      op: update: method: *"PUT"|string  # not-load
    }
  }

  entity: connection_management_access_token: {
    path: '/companies/{companyId}/connectionManagement/accessToken': {  # ent:connection_management_access_token:cmp=connection_management_access_token;path=t/;cmp-primary
      op: load: method: *"GET"|string  # not-list
    }
  }

  entity: connection_management_allowed_origin: {
    path: '/connectionManagement/corsSettings': {  # ent:connection_management_allowed_origin:cmp=connection_management_allowed_origin;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load
      op: list: method: *"GET"|string  # array-prop:allowedOrigins
    }
    path: '/corsSettings': {  # ent:connection_management_allowed_origin:cmp=connection_management_allowed_origin;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load
      op: list: method: *"GET"|string  # array-prop:allowedOrigins
    }
  }

  entity: custom: {
    path: '/companies/{companyId}/connections/{connectionId}/data/custom/{customDataIdentifier}': {  # ent:custom:cmp=custom_data_type_record;path=t/p/;path-primary
      rename: param: "connectionId": *"connection_id"|string  # not-primary
      rename: param: "customDataIdentifier": *"id"|string  # end-id:GET:parent=true/custom:cmp=false/custom_data_type_record
      op: load: method: *"GET"|string  # end-param
    }
    path: '/integrations/{platformKey}/dataTypes/custom/{customDataIdentifier}': {  # ent:custom:cmp=custom_data_type_configuration;path=t/p/;path-primary
      rename: param: "customDataIdentifier": *"id"|string  # end-id:GET:parent=true/custom:cmp=false/custom_data_type_record
      op: load: method: *"GET"|string  # end-param
      op: update: method: *"PUT"|string  # not-load
    }
  }

  entity: data_status: {
    path: '/companies/{companyId}/dataStatus': {  # ent:data_status:cmp=data_status;path=t/p/t/;has-cmp;path-primary
      op: load: method: *"GET"|string  # not-list
    }
  }

  entity: data_type_supplemental_data_config: {
    path: '/integrations/{platformKey}/dataTypes/{dataType}/supplementalDataConfig': {  # ent:data_type_supplemental_data_config:no-cmp;path=t/p/t/;entres=false/200,401,402,403,404,429,500,503;part-ent
      op: update: method: *"PUT"|string  # not-load
    }
  }

  entity: integration: {
    path: '/integrations': {  # ent:integration:cmp=integration;path=t/;path-primary
      op: list: method: *"GET"|string  # array-prop:results
    }
    path: '/integrations/{platformKey}': {  # ent:integration:cmp=integration;path=t/p/;path-primary
      rename: param: "platformKey": *"id"|string  # end-id:GET:parent=false/null:cmp=false/integration
      op: load: method: *"GET"|string  # end-param
    }
  }

  entity: product: {
    path: '/companies/{companyId}/products/{productIdentifier}': {  # ent:product:no-cmp;path=t/p/;entres=true/204,401,402,403,404,429,500,503/nores;path-primary
      rename: param: "productIdentifier": *"id"|string  # end-id:PUT:parent=true/product:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load
      op: update: method: *"PUT"|string  # not-load
    }
  }

  entity: product_refresh: {
    path: '/companies/{companyId}/products/{productIdentifier}/refresh': {  # ent:product_refresh:no-cmp;path=t/p/t/;entres=false/202,400,401,402,403,404,429,500,503;part-ent
      op: create: method: *"POST"|string  # not-load
    }
  }

  entity: profile: {
    path: '/profile': {  # ent:profile:cmp=profile;path=t/;path-primary
      op: list: method: *"GET"|string  # array-prop:whiteListUrls
      op: update: method: *"PUT"|string  # not-load
    }
  }

  entity: pull_operation: {
    path: '/companies/{companyId}/connections/{connectionId}/data/queue/custom/{customDataIdentifier}': {  # ent:pull_operation:cmp=pull_operation;path=t/p/;cmp-primary
      rename: param: "connectionId": *"connection_id"|string  # not-primary
      op: create: method: *"POST"|string  # not-load
    }
    path: '/companies/{companyId}/data/history': {  # ent:pull_operation:cmp=pull_operation;path=t/;cmp-primary
      op: list: method: *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}/data/history/{datasetId}': {  # ent:pull_operation:cmp=pull_operation;path=t/p/;cmp-primary
      op: load: method: *"GET"|string  # end-param
    }
    path: '/companies/{companyId}/data/queue/{dataType}': {  # ent:pull_operation:cmp=pull_operation;path=t/p/;cmp-primary
      op: create: method: *"POST"|string  # not-load
    }
  }

  entity: push: {
    path: '/companies/{companyId}/push': {  # ent:push:cmp=push_operation;path=t/p/t/;has-cmp;path-primary
      op: list: method: *"GET"|string  # array-prop:results
    }
    path: '/companies/{companyId}/push/{pushOperationKey}': {  # ent:push:cmp=push_operation;path=t/p/;path-primary
      rename: param: "pushOperationKey": *"id"|string  # end-id:GET:parent=true/push:cmp=false/push_operation
      op: load: method: *"GET"|string  # end-param
    }
  }

  entity: push_option: {
    path: '/companies/{companyId}/connections/{connectionId}/options/{dataType}': {  # ent:push_option:cmp=push_option;path=t/p/;cmp-primary
      rename: param: "connectionId": *"connection_id"|string  # not-primary
      op: load: method: *"GET"|string  # end-param
    }
  }

  entity: supplemental_data_config: {
    path: '/integrations/{platformKey}/dataTypes/{dataType}/supplementalDataConfig': {  # ent:supplemental_data_config:cmp=supplemental_data_configuration;path=t/p/t/;has-cmp;path-primary
      op: load: method: *"GET"|string  # not-list
    }
  }

  entity: sync_setting: {
    path: '/profile/syncSettings': {  # ent:sync_setting:no-cmp;path=t/;entres=true/204,401,402,403,429,500,503/nores;path-primary
      op: create: method: *"POST"|string  # not-load
      op: list: method: *"GET"|string  # array-prop:settings
    }
  }

  entity: validation: {
    path: '/companies/{companyId}/sync/{datasetId}/validation': {  # ent:validation:cmp=validation_result;path=t/p/t/;has-cmp;path-primary
      op: list: method: *"GET"|string  # array-prop:errors;array-prop:warnings
    }
  }

  entity: webhook: {
    path: '/webhooks': {  # ent:webhook:cmp=webhook_consumer;path=t/;path-primary
      op: create: method: *"POST"|string  # not-load
      op: list: method: *"GET"|string  # array-prop:results
    }
    path: '/webhooks/{webhookId}': {  # ent:webhook:no-cmp;path=t/p/;entres=true/204,401,402,403,404,429,500,503/nores;path-primary
      rename: param: "webhookId": *"id"|string  # end-id:DELETE:parent=false/null:cmp=false/undefined
      op: remove: method: *"DELETE"|string  # not-load
    }
  }

  entity: webhook_zapier_key: {
    path: '/webhooks/integrationKeys/zapier': {  # ent:webhook_zapier_key:cmp=webhook_zapier_key;path=t/;cmp-primary
      op: create: method: *"POST"|string  # not-load
    }
  }

}