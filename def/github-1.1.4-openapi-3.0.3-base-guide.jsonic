# Guide

guide: {
  metrics: count: entity: 359
  metrics: count: path: 722
  metrics: count: method: 1089

  entity: access: {
    path: "/orgs/{org}/codespaces/access": {  # ent:access:no-cmp;path=t/;entres=true/204,304,400,404,422,500/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=access
    }
    path: "/repos/{owner}/{repo}/actions/permissions/access": {  # ent:access:no-cmp;path=t/;entres=true/204/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=access
    }
  }

  entity: action: {
    path: "/orgs/{org}/settings/billing/actions": {  # ent:action:cmp=actions_billing_usage;path=t/;path-primary
      op: load: method: *GET|string  # not-list;ent=action
    }
    path: "/users/{username}/settings/billing/actions": {  # ent:action:cmp=actions_billing_usage;path=t/;path-primary
      op: load: method: *GET|string  # not-list;ent=action
    }
  }

  entity: actions_artifact_and_log_retention_response: {
    path: "/orgs/{org}/actions/permissions/artifact-and-log-retention": {  # ent:actions_artifact_and_log_retention_response:cmp=actions_artifact_and_log_retention_response;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_artifact_and_log_retention_response
    }
    path: "/repos/{owner}/{repo}/actions/permissions/artifact-and-log-retention": {  # ent:actions_artifact_and_log_retention_response:cmp=actions_artifact_and_log_retention_response;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_artifact_and_log_retention_response
    }
  }

  entity: actions_cache_list: {
    path: "/repos/{owner}/{repo}/actions/caches": {  # ent:actions_cache_list:cmp=actions_cache_list;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:actions_caches;ent=actions_cache_list
      op: remove: method: *DELETE|string  # not-load;ent=actions_cache_list
    }
  }

  entity: actions_cache_usage_by_repository: {
    path: "/orgs/{org}/actions/cache/usage-by-repository": {  # ent:actions_cache_usage_by_repository:cmp=actions_cache_usage_by_repository;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:repository_cache_usages;ent=actions_cache_usage_by_repository
    }
    path: "/repos/{owner}/{repo}/actions/cache/usage": {  # ent:actions_cache_usage_by_repository:cmp=actions_cache_usage_by_repository;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_cache_usage_by_repository
    }
  }

  entity: actions_cache_usage_org_enterprise: {
    path: "/orgs/{org}/actions/cache/usage": {  # ent:actions_cache_usage_org_enterprise:cmp=actions_cache_usage_org_enterprise;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_cache_usage_org_enterprise
    }
  }

  entity: actions_fork_pr_contributor_approval: {
    path: "/orgs/{org}/actions/permissions/fork-pr-contributor-approval": {  # ent:actions_fork_pr_contributor_approval:cmp=actions_fork_pr_contributor_approval;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_fork_pr_contributor_approval
    }
    path: "/repos/{owner}/{repo}/actions/permissions/fork-pr-contributor-approval": {  # ent:actions_fork_pr_contributor_approval:cmp=actions_fork_pr_contributor_approval;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_fork_pr_contributor_approval
    }
  }

  entity: actions_fork_pr_workflows_private_repo: {
    path: "/orgs/{org}/actions/permissions/fork-pr-workflows-private-repos": {  # ent:actions_fork_pr_workflows_private_repo:cmp=actions_fork_pr_workflows_private_repo;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_fork_pr_workflows_private_repo
    }
    path: "/repos/{owner}/{repo}/actions/permissions/fork-pr-workflows-private-repos": {  # ent:actions_fork_pr_workflows_private_repo:cmp=actions_fork_pr_workflows_private_repo;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_fork_pr_workflows_private_repo
    }
  }

  entity: actions_get_default_workflow_permission: {
    path: "/orgs/{org}/actions/permissions/workflow": {  # ent:actions_get_default_workflow_permission:cmp=actions_get_default_workflow_permission;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_get_default_workflow_permission
    }
    path: "/repos/{owner}/{repo}/actions/permissions/workflow": {  # ent:actions_get_default_workflow_permission:cmp=actions_get_default_workflow_permission;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_get_default_workflow_permission
    }
  }

  entity: actions_hosted_runner: {
    path: "/orgs/{org}/actions/hosted-runners": {  # ent:actions_hosted_runner:cmp=actions_hosted_runner;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=actions_hosted_runner
      op: list: method: *GET|string  # array-prop:runners;ent=actions_hosted_runner
    }
    path: "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}": {  # ent:actions_hosted_runner:cmp=actions_hosted_runner;path=t/p/;cmp-primary
      rename: param: "hosted_runner_id": *"id"|string  # end-id:GET:parent=true/hosted_runner:cmp=false/actions_hosted_runner
      op: load: method: *GET|string  # end-param;ent=actions_hosted_runner
      op: patch: method: *PATCH|string  # not-load;ent=actions_hosted_runner
      op: remove: method: *DELETE|string  # was/delete/A:hosted_runner:not-load;ent=hosted_runner
    }
    path: "/orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners": {  # ent:actions_hosted_runner:cmp=actions_hosted_runner;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:runners;ent=actions_hosted_runner
    }
  }

  entity: actions_hosted_runner_curated_image: {
    path: "/orgs/{org}/actions/hosted-runners/images/github-owned": {  # ent:actions_hosted_runner_curated_image:cmp=actions_hosted_runner_curated_image;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:images;ent=actions_hosted_runner_curated_image
    }
    path: "/orgs/{org}/actions/hosted-runners/images/partner": {  # ent:actions_hosted_runner_curated_image:cmp=actions_hosted_runner_curated_image;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:images;ent=actions_hosted_runner_curated_image
    }
  }

  entity: actions_hosted_runner_limit: {
    path: "/orgs/{org}/actions/hosted-runners/limits": {  # ent:actions_hosted_runner_limit:cmp=actions_hosted_runner_limit;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_hosted_runner_limit
    }
  }

  entity: actions_hosted_runner_machine_spec: {
    path: "/orgs/{org}/actions/hosted-runners/machine-sizes": {  # ent:actions_hosted_runner_machine_spec:cmp=actions_hosted_runner_machine_spec;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:machine_specs;ent=actions_hosted_runner_machine_spec
    }
  }

  entity: actions_organization_permission: {
    path: "/orgs/{org}/actions/permissions": {  # ent:actions_organization_permission:cmp=actions_organization_permission;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_organization_permission
    }
  }

  entity: actions_public_key: {
    path: "/orgs/{org}/actions/secrets/public-key": {  # ent:actions_public_key:cmp=actions_public_key;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_public_key
    }
    path: "/repos/{owner}/{repo}/actions/secrets/public-key": {  # ent:actions_public_key:cmp=actions_public_key;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_public_key
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key": {  # ent:actions_public_key:cmp=actions_public_key;path=t/;cmp-primary
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      op: load: method: *GET|string  # not-list;ent=actions_public_key
    }
  }

  entity: actions_repository_permission: {
    path: "/repos/{owner}/{repo}/actions/permissions": {  # ent:actions_repository_permission:cmp=actions_repository_permission;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_repository_permission
    }
  }

  entity: actions_secret: {
    path: "/repos/{owner}/{repo}/actions/organization-secrets": {  # ent:actions_secret:cmp=actions_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=actions_secret
    }
    path: "/repos/{owner}/{repo}/actions/secrets": {  # ent:actions_secret:cmp=actions_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=actions_secret
    }
    path: "/repos/{owner}/{repo}/actions/secrets/{secret_name}": {  # ent:actions_secret:cmp=actions_secret;path=t/p/;cmp-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/actions_secret
      op: load: method: *GET|string  # end-param;ent=actions_secret
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/secrets": {  # ent:actions_secret:cmp=actions_secret;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:secrets;ent=actions_secret
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}": {  # ent:actions_secret:cmp=actions_secret;path=t/p/;cmp-primary
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/actions_secret
      op: load: method: *GET|string  # end-param;ent=actions_secret
    }
  }

  entity: actions_variable: {
    path: "/repos/{owner}/{repo}/actions/organization-variables": {  # ent:actions_variable:cmp=actions_variable;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:variables;ent=actions_variable
    }
    path: "/repos/{owner}/{repo}/actions/variables": {  # ent:actions_variable:cmp=actions_variable;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:variables;ent=actions_variable
    }
    path: "/repos/{owner}/{repo}/actions/variables/{name}": {  # ent:actions_variable:no-cmp;path=t/p/;entres=true/204/nores;cmp-found-delete
      rename: param: "name": *"id"|string  # end-id:GET:parent=true/variable:cmp=false/actions_variable
      op: load: method: *GET|string  # end-param;ent=actions_variable
      op: remove: method: *DELETE|string  # not-load;ent=actions_variable
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/variables": {  # ent:actions_variable:cmp=actions_variable;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:variables;ent=actions_variable
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}": {  # ent:actions_variable:no-cmp;path=t/p/;entres=true/204/nores;cmp-found-delete
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      rename: param: "name": *"id"|string  # end-id:GET:parent=true/variable:cmp=false/actions_variable
      op: load: method: *GET|string  # end-param;ent=actions_variable
      op: remove: method: *DELETE|string  # not-load;ent=actions_variable
    }
  }

  entity: actions_workflow_access_to_repository: {
    path: "/repos/{owner}/{repo}/actions/permissions/access": {  # ent:actions_workflow_access_to_repository:cmp=actions_workflow_access_to_repository;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=actions_workflow_access_to_repository
    }
  }

  entity: activity: {
    path: "/repos/{owner}/{repo}/activity": {  # ent:activity:cmp=activity;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=activity
    }
  }

  entity: add: {
    path: "/enterprises/{enterprise}/teams/{enterprise-team}/memberships/add": {  # ent:add:cmp=simple_user;path=t/;path-over-cmp
      rename: param: "enterprise-team": *"team_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=add
    }
  }

  entity: api_insights_route_stat: {
    path: "/orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}": {  # ent:api_insights_route_stat:cmp=api_insights_route_stat;path=t/p/p;cmp-primary
      op: list: method: *GET|string  # array;ent=api_insights_route_stat
    }
  }

  entity: api_insights_subject_stat: {
    path: "/orgs/{org}/insights/api/subject-stats": {  # ent:api_insights_subject_stat:cmp=api_insights_subject_stat;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=api_insights_subject_stat
    }
  }

  entity: api_insights_summary_stat: {
    path: "/orgs/{org}/insights/api/summary-stats": {  # ent:api_insights_summary_stat:cmp=api_insights_summary_stat;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=api_insights_summary_stat
    }
    path: "/orgs/{org}/insights/api/summary-stats/users/{user_id}": {  # ent:api_insights_summary_stat:cmp=api_insights_summary_stat;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=api_insights_summary_stat
    }
    path: "/orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}": {  # ent:api_insights_summary_stat:cmp=api_insights_summary_stat;path=t/p/p;cmp-primary
      op: load: method: *GET|string  # not-list;ent=api_insights_summary_stat
    }
  }

  entity: api_insights_time_stat: {
    path: "/orgs/{org}/insights/api/time-stats": {  # ent:api_insights_time_stat:cmp=api_insights_time_stat;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=api_insights_time_stat
    }
    path: "/orgs/{org}/insights/api/time-stats/users/{user_id}": {  # ent:api_insights_time_stat:cmp=api_insights_time_stat;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=api_insights_time_stat
    }
    path: "/orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}": {  # ent:api_insights_time_stat:cmp=api_insights_time_stat;path=t/p/p;cmp-primary
      op: list: method: *GET|string  # array;ent=api_insights_time_stat
    }
  }

  entity: api_insights_user_stat: {
    path: "/orgs/{org}/insights/api/user-stats/{user_id}": {  # ent:api_insights_user_stat:cmp=api_insights_user_stat;path=t/p/;cmp-primary
      rename: param: "user_id": *"id"|string  # end-id:GET:parent=true/user_stat:cmp=false/api_insights_user_stat
      op: load: method: *GET|string  # end-param;ent=api_insights_user_stat
    }
  }

  entity: api_overview: {
    path: "/meta": {  # ent:api_overview:cmp=api_overview;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:actions;array-prop:actions_macos;array-prop:api;array-prop:codespaces;array-prop:copilot;array-prop:dependabot;array-prop:git;array-prop:github_enterprise_importer;array-prop:hooks;array-prop:importer;array-prop:packages;array-prop:pages;array-prop:ssh_keys;array-prop:web;ent=api_overview
    }
  }

  entity: artifact: {
    path: "/repos/{owner}/{repo}/actions/artifacts": {  # ent:artifact:cmp=artifact;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:artifacts;ent=artifact
    }
    path: "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}": {  # ent:artifact:no-cmp;path=t/p/;entres=true/204/nores;cmp-found-delete
      rename: param: "artifact_id": *"id"|string  # end-id:GET:parent=true/artifact:cmp=false/artifact
      op: load: method: *GET|string  # end-param;ent=artifact
      op: remove: method: *DELETE|string  # not-load;ent=artifact
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts": {  # ent:artifact:cmp=artifact;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:artifacts;ent=artifact
    }
  }

  entity: artifact_and_log_retention: {
    path: "/orgs/{org}/actions/permissions/artifact-and-log-retention": {  # ent:artifact_and_log_retention:no-cmp;path=t/;entres=true/204,403,404,409,422/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=artifact_and_log_retention
    }
    path: "/repos/{owner}/{repo}/actions/permissions/artifact-and-log-retention": {  # ent:artifact_and_log_retention:no-cmp;path=t/;entres=true/204,404,422/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=artifact_and_log_retention
    }
  }

  entity: assignee: {
    path: "/repos/{owner}/{repo}/assignees": {  # ent:assignee:cmp=simple_user;path=p/t/;path-over-cmp
      op: list: method: *GET|string  # array;ent=assignee
    }
    path: "/repos/{owner}/{repo}/assignees/{assignee}": {  # ent:assignee:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary
      rename: param: "assignee": *"id"|string  # end-id:GET:parent=true/assignee:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=assignee
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}": {  # ent:assignee:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary
      rename: param: "assignee": *"id"|string  # end-id:GET:parent=true/assignee:cmp=false/undefined
      rename: param: "issue_number": *"issue_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=assignee
    }
  }

  entity: attempt_log: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs": {  # ent:attempt_log:no-cmp;path=t/p/t/;entres=true/302/get;path-primary;prob-ent-part
      op: load: method: *GET|string  # no-schema;ent=attempt_log
    }
  }

  entity: attestation: {
    path: "/orgs/{org}/attestations/{subject_digest}": {  # ent:attestation:no-cmp;path=t/p/;entres=true/200/get;path-primary
      rename: param: "subject_digest": *"id"|string  # end-id:GET:parent=true/attestation:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=attestation
    }
    path: "/repos/{owner}/{repo}/attestations": {  # ent:attestation:no-cmp;path=p/t/;entres=true/201,403,422/post;path-primary
      op: create: method: *POST|string  # not-load;ent=attestation
    }
    path: "/repos/{owner}/{repo}/attestations/{subject_digest}": {  # ent:attestation:no-cmp;path=t/p/;entres=true/200/get;path-primary
      rename: param: "subject_digest": *"id"|string  # end-id:GET:parent=true/attestation:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=attestation
    }
  }

  entity: authentication_token: {
    path: "/orgs/{org}/actions/runners/registration-token": {  # ent:authentication_token:cmp=authentication_token;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=authentication_token
    }
    path: "/orgs/{org}/actions/runners/remove-token": {  # ent:authentication_token:cmp=authentication_token;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=authentication_token
    }
    path: "/repos/{owner}/{repo}/actions/runners/registration-token": {  # ent:authentication_token:cmp=authentication_token;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=authentication_token
    }
    path: "/repos/{owner}/{repo}/actions/runners/remove-token": {  # ent:authentication_token:cmp=authentication_token;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=authentication_token
    }
  }

  entity: authorization: {
    path: "/applications/{client_id}/token": {  # ent:authorization:cmp=authorization;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=authorization
      op: patch: method: *PATCH|string  # not-load;ent=authorization
    }
    path: "/applications/{client_id}/token/scoped": {  # ent:authorization:cmp=authorization;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=authorization
    }
  }

  entity: autolink: {
    path: "/repos/{owner}/{repo}/autolinks": {  # ent:autolink:cmp=autolink;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=autolink
      op: list: method: *GET|string  # array;ent=autolink
    }
    path: "/repos/{owner}/{repo}/autolinks/{autolink_id}": {  # ent:autolink:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "autolink_id": *"id"|string  # end-id:GET:parent=true/autolink:cmp=false/autolink
      op: load: method: *GET|string  # end-param;ent=autolink
      op: remove: method: *DELETE|string  # not-load;ent=autolink
    }
  }

  entity: automated_security_fix: {
    path: "/repos/{owner}/{repo}/automated-security-fixes": {  # ent:automated_security_fix:no-cmp;path=p/t/;entres=true/204/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=automated_security_fix
    }
  }

  entity: base_gist: {
    path: "/gists": {  # ent:base_gist:cmp=base_gist;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=base_gist
    }
    path: "/gists/public": {  # ent:base_gist:cmp=base_gist;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=base_gist
    }
    path: "/gists/starred": {  # ent:base_gist:cmp=base_gist;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=base_gist
    }
    path: "/gists/{gist_id}/forks": {  # ent:base_gist:cmp=base_gist;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=base_gist
    }
    path: "/users/{username}/gists": {  # ent:base_gist:cmp=base_gist;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=base_gist
    }
  }

  entity: basic_error: {
    path: "/app/installations/{installation_id}/suspended": {  # ent:basic_error:no-cmp;path=t/p/t/;entres=true/204,404/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/gists/{gist_id}/star": {  # ent:basic_error:no-cmp;path=t/p/t/;entres=true/204,304,403,404/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/orgs/{org}/attestations/digest/{subject_digest}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/200,204,404/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/orgs/{org}/attestations/{attestation_id}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/200,204,403,404/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/orgs/{org}/members/{username}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204,403/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/orgs/{org}/migrations/{migration_id}/archive": {  # ent:basic_error:no-cmp;path=t/p/t/;entres=true/204,404/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock": {  # ent:basic_error:no-cmp;path=t/p/t/;entres=true/204,404/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/orgs/{org}/outside_collaborators/{username}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204,422/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/orgs/{org}/public_members/{username}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/logs": {  # ent:basic_error:no-cmp;path=t/p/t/;entres=true/204,403,500/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/repos/{owner}/{repo}/tags/protection/{tag_protection_id}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204,403,404/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/teams/{team_id}/members/{username}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204,404/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204,401,403,404,500/nores;cmp-found-delete
      rename: param: "secret_name": *"secret_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/user/installations/{installation_id}/repositories/{repository_id}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204,304,403,404,422/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/user/migrations/{migration_id}/archive": {  # ent:basic_error:no-cmp;path=t/p/t/;entres=true/204,304,401,403,404/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/user/migrations/{migration_id}/repos/{repo_name}/lock": {  # ent:basic_error:no-cmp;path=t/p/t/;entres=true/204,304,401,403,404/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/user/repository_invitations/{invitation_id}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/204,304,403,404,409/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/user/starred/{owner}/{repo}": {  # ent:basic_error:no-cmp;path=t/p/p;entres=true/204,304,401,403,404/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/users/{username}/attestations/digest/{subject_digest}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/200,204,404/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
    path: "/users/{username}/attestations/{attestation_id}": {  # ent:basic_error:no-cmp;path=t/p/;entres=true/200,204,403,404/nores;cmp-found-delete
      op: remove: method: *DELETE|string  # not-load;ent=basic_error
    }
  }

  entity: billing_usage_report: {
    path: "/organizations/{org}/settings/billing/usage": {  # ent:billing_usage_report:cmp=billing_usage_report;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:usageItems;ent=billing_usage_report
    }
  }

  entity: billing_usage_report_user: {
    path: "/users/{username}/settings/billing/usage": {  # ent:billing_usage_report_user:cmp=billing_usage_report_user;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:usageItems;ent=billing_usage_report_user
    }
  }

  entity: blob: {
    path: "/repos/{owner}/{repo}/git/blobs/{file_sha}": {  # ent:blob:cmp=blob;path=t/p/;path-primary
      rename: param: "file_sha": *"id"|string  # end-id:GET:parent=true/blob:cmp=false/blob
      op: load: method: *GET|string  # end-param;ent=blob
    }
  }

  entity: block: {
    path: "/orgs/{org}/blocks": {  # ent:block:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=block
    }
    path: "/orgs/{org}/blocks/{username}": {  # ent:block:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/block:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=block
      op: remove: method: *DELETE|string  # not-load;ent=block
      op: update: method: *PUT|string  # not-load;ent=block
    }
    path: "/user/blocks": {  # ent:block:cmp=simple_user;path=t/;path-over-cmp
      op: list: method: *GET|string  # array;ent=block
    }
    path: "/user/blocks/{username}": {  # ent:block:no-cmp;path=t/p/;entres=true/204,304,401,403,404/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/block:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=block
      op: remove: method: *DELETE|string  # not-load;ent=block
      op: update: method: *PUT|string  # not-load;ent=block
    }
  }

  entity: branch: {
    path: "/repos/{owner}/{repo}/branches/{branch}": {  # ent:branch:cmp=branch_with_protection;path=t/p/;path-primary
      rename: param: "branch": *"id"|string  # end-id:GET:parent=true/branch:cmp=false/branch_with_protection
      op: load: method: *GET|string  # end-param;ent=branch
    }
  }

  entity: branch_protection: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection": {  # ent:branch_protection:cmp=branch_protection;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=branch_protection
    }
  }

  entity: branch_restriction_policy: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions": {  # ent:branch_restriction_policy:cmp=branch_restriction_policy;path=t/;cmp-primary
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: list: method: *GET|string  # array-prop:apps;array-prop:teams;array-prop:users;ent=branch_restriction_policy
      op: remove: method: *DELETE|string  # was/delete/A:restriction:not-load;ent=restriction
    }
  }

  entity: branch_short: {
    path: "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head": {  # ent:branch_short:cmp=branch_short;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=branch_short
    }
  }

  entity: branch_with_protection: {
    path: "/repos/{owner}/{repo}/branches/{branch}/rename": {  # ent:branch_with_protection:cmp=branch_with_protection;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=branch_with_protection
    }
  }

  entity: bulk_list: {
    path: "/orgs/{org}/attestations/bulk-list": {  # ent:bulk_list:no-cmp;path=t/;entres=false/200;ent-act
      op: create: method: *POST|string  # not-load;ent=bulk_list
    }
    path: "/users/{username}/attestations/bulk-list": {  # ent:bulk_list:no-cmp;path=t/;entres=false/200;ent-act
      op: create: method: *POST|string  # not-load;ent=bulk_list
    }
  }

  entity: cach: {
    path: "/repos/{owner}/{repo}/actions/caches/{cache_id}": {  # ent:cach:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "cache_id": *"id"|string  # end-id:DELETE:parent=true/cach:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=cach
    }
  }

  entity: campaign: {
    path: "/orgs/{org}/campaigns": {  # ent:campaign:cmp=campaign_summary;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=campaign
      op: list: method: *GET|string  # array;ent=campaign
    }
    path: "/orgs/{org}/campaigns/{campaign_number}": {  # ent:campaign:no-cmp;path=t/p/;entres=true/204,404,503/nores;path-primary-delete
      rename: param: "campaign_number": *"id"|string  # end-id:GET:parent=true/campaign:cmp=false/campaign_summary
      op: load: method: *GET|string  # end-param;ent=campaign
      op: patch: method: *PATCH|string  # not-load;ent=campaign
      op: remove: method: *DELETE|string  # not-load;ent=campaign
    }
  }

  entity: check_annotation: {
    path: "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations": {  # ent:check_annotation:cmp=check_annotation;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=check_annotation
    }
  }

  entity: check_automated_security_fix: {
    path: "/repos/{owner}/{repo}/automated-security-fixes": {  # ent:check_automated_security_fix:no-cmp;path=p/t/;entres=true/204/nores;cmp-found-delete
      op: load: method: *GET|string  # not-list;ent=check_automated_security_fix
      op: remove: method: *DELETE|string  # not-load;ent=check_automated_security_fix
    }
  }

  entity: check_run: {
    path: "/repos/{owner}/{repo}/check-runs": {  # ent:check_run:cmp=check_run;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=check_run
    }
    path: "/repos/{owner}/{repo}/check-runs/{check_run_id}": {  # ent:check_run:cmp=check_run;path=t/p/;path-primary
      rename: param: "check_run_id": *"id"|string  # end-id:GET:parent=true/check_run:cmp=false/check_run
      op: load: method: *GET|string  # end-param;ent=check_run
      op: patch: method: *PATCH|string  # not-load;ent=check_run
    }
    path: "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs": {  # ent:check_run:cmp=check_run;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:check_runs;ent=check_run
    }
    path: "/repos/{owner}/{repo}/commits/{ref}/check-runs": {  # ent:check_run:cmp=check_run;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:check_runs;ent=check_run
    }
  }

  entity: check_suite: {
    path: "/repos/{owner}/{repo}/check-suites": {  # ent:check_suite:cmp=check_suite;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=check_suite
    }
    path: "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {  # ent:check_suite:cmp=check_suite;path=t/p/;path-primary
      rename: param: "check_suite_id": *"id"|string  # end-id:GET:parent=true/check_suite:cmp=false/check_suite
      op: load: method: *GET|string  # end-param;ent=check_suite
    }
    path: "/repos/{owner}/{repo}/commits/{ref}/check-suites": {  # ent:check_suite:cmp=check_suite;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:check_suites;ent=check_suite
    }
  }

  entity: check_suite_preference: {
    path: "/repos/{owner}/{repo}/check-suites/preferences": {  # ent:check_suite_preference:cmp=check_suite_preference;path=t/;cmp-primary
      op: patch: method: *PATCH|string  # not-load;ent=check_suite_preference
    }
  }

  entity: classroom: {
    path: "/classrooms/{classroom_id}": {  # ent:classroom:cmp=classroom;path=t/p/;path-primary
      rename: param: "classroom_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/classroom
      op: load: method: *GET|string  # end-param;ent=classroom
    }
  }

  entity: classroom_accepted_assignment: {
    path: "/assignments/{assignment_id}/accepted_assignments": {  # ent:classroom_accepted_assignment:cmp=classroom_accepted_assignment;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=classroom_accepted_assignment
    }
  }

  entity: classroom_assignment: {
    path: "/assignments/{assignment_id}": {  # ent:classroom_assignment:cmp=classroom_assignment;path=t/p/;cmp-primary
      rename: param: "assignment_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/classroom_assignment
      op: load: method: *GET|string  # end-param;ent=classroom_assignment
    }
  }

  entity: classroom_assignment_grade: {
    path: "/assignments/{assignment_id}/grades": {  # ent:classroom_assignment_grade:cmp=classroom_assignment_grade;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=classroom_assignment_grade
    }
  }

  entity: clone: {
    path: "/repos/{owner}/{repo}/traffic/clones": {  # ent:clone:cmp=clone_traffic;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:clones;ent=clone
    }
  }

  entity: code: {
    path: "/search/code": {  # ent:code:cmp=code_search_result_item;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:items;ent=code
    }
  }

  entity: code_frequency: {
    path: "/repos/{owner}/{repo}/stats/code_frequency": {  # ent:code_frequency:cmp=code_frequency_stat;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=code_frequency
    }
  }

  entity: code_frequency_stat: {
    path: "/repos/{owner}/{repo}/stats/punch_card": {  # ent:code_frequency_stat:cmp=code_frequency_stat;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_frequency_stat
    }
  }

  entity: code_of_conduct: {
    path: "/codes_of_conduct": {  # ent:code_of_conduct:cmp=code_of_conduct;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_of_conduct
    }
    path: "/codes_of_conduct/{key}": {  # ent:code_of_conduct:cmp=code_of_conduct;path=t/p/;cmp-primary
      rename: param: "key": *"id"|string  # end-id:GET:parent=false/null:cmp=false/code_of_conduct
      op: load: method: *GET|string  # end-param;ent=code_of_conduct
    }
  }

  entity: code_scanning_alert: {
    path: "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}": {  # ent:code_scanning_alert:cmp=code_scanning_alert;path=t/p/;cmp-primary
      rename: param: "alert_number": *"id"|string  # end-id:GET:parent=true/alert:cmp=false/code_scanning_alert
      op: load: method: *GET|string  # end-param;ent=code_scanning_alert
      op: patch: method: *PATCH|string  # not-load;ent=code_scanning_alert
    }
  }

  entity: code_scanning_alert_instance: {
    path: "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances": {  # ent:code_scanning_alert_instance:cmp=code_scanning_alert_instance;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=code_scanning_alert_instance
    }
  }

  entity: code_scanning_alert_item: {
    path: "/repos/{owner}/{repo}/code-scanning/alerts": {  # ent:code_scanning_alert_item:cmp=code_scanning_alert_item;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_scanning_alert_item
    }
  }

  entity: code_scanning_analysi: {
    path: "/repos/{owner}/{repo}/code-scanning/analyses": {  # ent:code_scanning_analysi:cmp=code_scanning_analysi;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_scanning_analysi
    }
    path: "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}": {  # ent:code_scanning_analysi:cmp=code_scanning_analysi;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=code_scanning_analysi
    }
  }

  entity: code_scanning_analysis_deletion: {
    path: "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}": {  # ent:code_scanning_analysis_deletion:cmp=code_scanning_analysis_deletion;path=t/p/;cmp-primary
      op: remove: method: *DELETE|string  # not-load;ent=code_scanning_analysis_deletion
    }
  }

  entity: code_scanning_autofix: {
    path: "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix": {  # ent:code_scanning_autofix:cmp=code_scanning_autofix;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=code_scanning_autofix
      op: load: method: *GET|string  # not-list;ent=code_scanning_autofix
    }
  }

  entity: code_scanning_autofix_commits_response: {
    path: "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits": {  # ent:code_scanning_autofix_commits_response:cmp=code_scanning_autofix_commits_response;path=t/;cmp-primary
      rename: param: "alert_number": *"alert_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=code_scanning_autofix_commits_response
    }
  }

  entity: code_scanning_codeql_database: {
    path: "/repos/{owner}/{repo}/code-scanning/codeql/databases": {  # ent:code_scanning_codeql_database:cmp=code_scanning_codeql_database;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_scanning_codeql_database
    }
    path: "/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}": {  # ent:code_scanning_codeql_database:cmp=code_scanning_codeql_database;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=code_scanning_codeql_database
      op: remove: method: *DELETE|string  # was/delete/A:databas:not-load;ent=databas
    }
  }

  entity: code_scanning_default_setup: {
    path: "/repos/{owner}/{repo}/code-scanning/default-setup": {  # ent:code_scanning_default_setup:cmp=code_scanning_default_setup;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:languages;ent=code_scanning_default_setup
    }
  }

  entity: code_scanning_organization_alert_item: {
    path: "/orgs/{org}/code-scanning/alerts": {  # ent:code_scanning_organization_alert_item:cmp=code_scanning_organization_alert_item;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_scanning_organization_alert_item
    }
  }

  entity: code_scanning_sarifs_status: {
    path: "/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}": {  # ent:code_scanning_sarifs_status:cmp=code_scanning_sarifs_status;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=code_scanning_sarifs_status
    }
  }

  entity: code_scanning_variant_analysi: {
    path: "/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses": {  # ent:code_scanning_variant_analysi:cmp=code_scanning_variant_analysi;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=code_scanning_variant_analysi
    }
    path: "/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}": {  # ent:code_scanning_variant_analysi:cmp=code_scanning_variant_analysi;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=code_scanning_variant_analysi
    }
  }

  entity: code_scanning_variant_analysis_repo_task: {
    path: "/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}": {  # ent:code_scanning_variant_analysis_repo_task:cmp=code_scanning_variant_analysis_repo_task;path=t/p/p;cmp-primary
      op: load: method: *GET|string  # not-list;ent=code_scanning_variant_analysis_repo_task
    }
  }

  entity: code_security_configuration: {
    path: "/enterprises/{enterprise}/code-security/configurations": {  # ent:code_security_configuration:cmp=code_security_configuration;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=code_security_configuration
      op: list: method: *GET|string  # array;ent=code_security_configuration
    }
    path: "/enterprises/{enterprise}/code-security/configurations/{configuration_id}": {  # ent:code_security_configuration:cmp=code_security_configuration;path=t/p/;cmp-primary
      rename: param: "configuration_id": *"id"|string  # end-id:GET:parent=true/configuration:cmp=false/code_security_configuration
      op: load: method: *GET|string  # end-param;ent=code_security_configuration
      op: patch: method: *PATCH|string  # not-load;ent=code_security_configuration
    }
    path: "/enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults": {  # ent:code_security_configuration:cmp=code_security_configuration;path=t/p/t/;cmp-primary;has-cmp
      op: update: method: *PUT|string  # not-load;ent=code_security_configuration
    }
    path: "/orgs/{org}/code-security/configurations": {  # ent:code_security_configuration:cmp=code_security_configuration;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=code_security_configuration
      op: list: method: *GET|string  # array;ent=code_security_configuration
    }
    path: "/orgs/{org}/code-security/configurations/{configuration_id}": {  # ent:code_security_configuration:cmp=code_security_configuration;path=t/p/;cmp-primary
      rename: param: "configuration_id": *"id"|string  # end-id:GET:parent=true/configuration:cmp=false/code_security_configuration
      op: load: method: *GET|string  # end-param;ent=code_security_configuration
      op: patch: method: *PATCH|string  # not-load;ent=code_security_configuration
    }
    path: "/orgs/{org}/code-security/configurations/{configuration_id}/defaults": {  # ent:code_security_configuration:cmp=code_security_configuration;path=t/p/t/;cmp-primary;has-cmp
      op: update: method: *PUT|string  # not-load;ent=code_security_configuration
    }
    path: "/repos/{owner}/{repo}/code-security-configuration": {  # ent:code_security_configuration:cmp=code_security_configuration_for_repository;path=p/t/;path-primary
      op: load: method: *GET|string  # not-list;ent=code_security_configuration
    }
  }

  entity: code_security_configuration_repository: {
    path: "/enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories": {  # ent:code_security_configuration_repository:cmp=code_security_configuration_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=code_security_configuration_repository
    }
    path: "/orgs/{org}/code-security/configurations/{configuration_id}/repositories": {  # ent:code_security_configuration_repository:cmp=code_security_configuration_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=code_security_configuration_repository
    }
  }

  entity: code_security_default_configuration: {
    path: "/enterprises/{enterprise}/code-security/configurations/defaults": {  # ent:code_security_default_configuration:cmp=code_security_default_configuration;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_security_default_configuration
    }
    path: "/orgs/{org}/code-security/configurations/defaults": {  # ent:code_security_default_configuration:cmp=code_security_default_configuration;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=code_security_default_configuration
    }
  }

  entity: codeowners_error: {
    path: "/repos/{owner}/{repo}/codeowners/errors": {  # ent:codeowners_error:cmp=codeowners_error;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:errors;ent=codeowners_error
    }
  }

  entity: codespace: {
    path: "/orgs/{org}/codespaces": {  # ent:codespace:cmp=codespace;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:codespaces;ent=codespace
    }
    path: "/orgs/{org}/members/{username}/codespaces": {  # ent:codespace:cmp=codespace;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:codespaces;ent=codespace
    }
    path: "/orgs/{org}/members/{username}/codespaces/{codespace_name}": {  # ent:codespace:no-cmp;path=t/p/;entres=false/202,304,401,403,404,500;ent-act
      rename: param: "codespace_name": *"id"|string  # end-id:DELETE:parent=true/codespace:cmp=false/undefined
      rename: param: "username": *"member_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=codespace
    }
    path: "/orgs/{org}/members/{username}/codespaces/{codespace_name}/stop": {  # ent:codespace:cmp=codespace;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "username": *"member_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=codespace
    }
    path: "/repos/{owner}/{repo}/codespaces": {  # ent:codespace:cmp=codespace;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=codespace
      op: list: method: *GET|string  # array-prop:codespaces;ent=codespace
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/codespaces": {  # ent:codespace:cmp=codespace;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=codespace
    }
    path: "/user/codespaces": {  # ent:codespace:cmp=codespace;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=codespace
      op: list: method: *GET|string  # array-prop:codespaces;ent=codespace
    }
    path: "/user/codespaces/{codespace_name}": {  # ent:codespace:no-cmp;path=t/p/;entres=false/202,304,401,403,404,500;ent-act
      rename: param: "codespace_name": *"id"|string  # end-id:GET:parent=true/codespace:cmp=false/codespace
      op: load: method: *GET|string  # end-param;ent=codespace
      op: patch: method: *PATCH|string  # not-load;ent=codespace
      op: remove: method: *DELETE|string  # not-load;ent=codespace
    }
    path: "/user/codespaces/{codespace_name}/start": {  # ent:codespace:cmp=codespace;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=codespace
    }
    path: "/user/codespaces/{codespace_name}/stop": {  # ent:codespace:cmp=codespace;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=codespace
    }
  }

  entity: codespace_export: {
    path: "/user/codespaces/{codespace_name}/exports": {  # ent:codespace_export:no-cmp;path=t/p/t/;entres=false/202,401,403,404,422,500;part-ent
      op: create: method: *POST|string  # not-load;ent=codespace_export
    }
  }

  entity: codespace_export_detail: {
    path: "/user/codespaces/{codespace_name}/exports/{export_id}": {  # ent:codespace_export_detail:cmp=codespace_export_detail;path=t/p/;cmp-primary
      rename: param: "codespace_name": *"codespace_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=codespace_export_detail
    }
  }

  entity: codespace_machine: {
    path: "/repos/{owner}/{repo}/codespaces/machines": {  # ent:codespace_machine:cmp=codespace_machine;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:machines;ent=codespace_machine
    }
    path: "/user/codespaces/{codespace_name}/machines": {  # ent:codespace_machine:cmp=codespace_machine;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:machines;ent=codespace_machine
    }
  }

  entity: codespace_with_full_repository: {
    path: "/user/codespaces/{codespace_name}/publish": {  # ent:codespace_with_full_repository:cmp=codespace_with_full_repository;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=codespace_with_full_repository
    }
  }

  entity: codespaces_org_secret: {
    path: "/orgs/{org}/codespaces/secrets": {  # ent:codespaces_org_secret:cmp=codespaces_org_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=codespaces_org_secret
    }
    path: "/orgs/{org}/codespaces/secrets/{secret_name}": {  # ent:codespaces_org_secret:cmp=codespaces_org_secret;path=t/p/;cmp-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/codespaces_org_secret
      op: load: method: *GET|string  # end-param;ent=codespaces_org_secret
    }
  }

  entity: codespaces_permissions_check_for_devcontainer: {
    path: "/repos/{owner}/{repo}/codespaces/permissions_check": {  # ent:codespaces_permissions_check_for_devcontainer:cmp=codespaces_permissions_check_for_devcontainer;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=codespaces_permissions_check_for_devcontainer
    }
  }

  entity: codespaces_public_key: {
    path: "/orgs/{org}/codespaces/secrets/public-key": {  # ent:codespaces_public_key:cmp=codespaces_public_key;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=codespaces_public_key
    }
    path: "/repos/{owner}/{repo}/codespaces/secrets/public-key": {  # ent:codespaces_public_key:cmp=codespaces_public_key;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=codespaces_public_key
    }
  }

  entity: codespaces_secret: {
    path: "/user/codespaces/secrets": {  # ent:codespaces_secret:cmp=codespaces_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=codespaces_secret
    }
    path: "/user/codespaces/secrets/{secret_name}": {  # ent:codespaces_secret:cmp=codespaces_secret;path=t/p/;cmp-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/codespaces_secret
      op: load: method: *GET|string  # end-param;ent=codespaces_secret
    }
  }

  entity: codespaces_user_public_key: {
    path: "/user/codespaces/secrets/public-key": {  # ent:codespaces_user_public_key:cmp=codespaces_user_public_key;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=codespaces_user_public_key
    }
  }

  entity: collaborator: {
    path: "/projects/{project_id}/collaborators": {  # ent:collaborator:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=collaborator
    }
    path: "/projects/{project_id}/collaborators/{username}": {  # ent:collaborator:no-cmp;path=t/p/;entres=true/204,304,401,403,404,422/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:PUT:parent=true/collaborator:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=collaborator
      op: update: method: *PUT|string  # not-load;ent=collaborator
    }
    path: "/repos/{owner}/{repo}/collaborators": {  # ent:collaborator:cmp=collaborator;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=collaborator
    }
    path: "/repos/{owner}/{repo}/collaborators/{username}": {  # ent:collaborator:no-cmp;path=t/p/;entres=true/204,403,422/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/collaborator:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=collaborator
      op: remove: method: *DELETE|string  # not-load;ent=collaborator
    }
  }

  entity: column_mof: {
    path: "/projects/columns/{column_id}/moves": {  # ent:column_mof:no-cmp;path=t/p/t/;entres=false/201,304,401,403,422;part-ent
      rename: param: "column_id": *"id"|string  # action-not-parent:column_mof
      op: create: method: *POST|string  # not-load;ent=column_mof
    }
  }

  entity: combined_billing_usage: {
    path: "/orgs/{org}/settings/billing/shared-storage": {  # ent:combined_billing_usage:cmp=combined_billing_usage;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=combined_billing_usage
    }
    path: "/users/{username}/settings/billing/shared-storage": {  # ent:combined_billing_usage:cmp=combined_billing_usage;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=combined_billing_usage
    }
  }

  entity: combined_commit_status: {
    path: "/repos/{owner}/{repo}/commits/{ref}/status": {  # ent:combined_commit_status:cmp=combined_commit_status;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:statuses;ent=combined_commit_status
    }
  }

  entity: comment: {
    path: "/gists/{gist_id}/comments/{comment_id}": {  # ent:comment:no-cmp;path=t/p/;entres=true/204,304,403,404/nores;path-primary-delete
      rename: param: "comment_id": *"id"|string  # end-id:DELETE:parent=true/comment:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=comment
    }
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}": {  # ent:comment:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "comment_number": *"id"|string  # end-id:DELETE:parent=true/comment:cmp=false/undefined
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=comment
    }
    path: "/repos/{owner}/{repo}/comments/{comment_id}": {  # ent:comment:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "comment_id": *"id"|string  # end-id:DELETE:parent=true/comment:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=comment
    }
    path: "/repos/{owner}/{repo}/issues/comments/{comment_id}": {  # ent:comment:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "comment_id": *"id"|string  # end-id:DELETE:parent=true/comment:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=comment
    }
    path: "/repos/{owner}/{repo}/pulls/comments/{comment_id}": {  # ent:comment:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "comment_id": *"id"|string  # end-id:DELETE:parent=true/comment:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=comment
    }
    path: "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}": {  # ent:comment:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "comment_number": *"id"|string  # end-id:DELETE:parent=true/comment:cmp=false/undefined
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=comment
    }
  }

  entity: commit: {
    path: "/repos/{owner}/{repo}/commits": {  # ent:commit:cmp=commit;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=commit
    }
    path: "/repos/{owner}/{repo}/commits/{ref}": {  # ent:commit:cmp=commit;path=t/p/;path-primary
      rename: param: "ref": *"id"|string  # end-id:GET:parent=true/commit:cmp=false/commit
      op: load: method: *GET|string  # end-param;ent=commit
    }
    path: "/repos/{owner}/{repo}/merges": {  # ent:commit:cmp=commit;path=p/t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=commit
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/commits": {  # ent:commit:cmp=commit;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=commit
    }
    path: "/search/commits": {  # ent:commit:cmp=commit_search_result_item;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:items;ent=commit
    }
  }

  entity: commit_activity: {
    path: "/repos/{owner}/{repo}/stats/commit_activity": {  # ent:commit_activity:cmp=commit_activity;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=commit_activity
    }
  }

  entity: commit_comment: {
    path: "/repos/{owner}/{repo}/comments": {  # ent:commit_comment:cmp=commit_comment;path=p/t/;cmp-primary
      op: list: method: *GET|string  # array;ent=commit_comment
    }
    path: "/repos/{owner}/{repo}/comments/{comment_id}": {  # ent:commit_comment:cmp=commit_comment;path=t/p/;cmp-primary
      rename: param: "comment_id": *"id"|string  # end-id:GET:parent=true/comment:cmp=false/commit_comment
      op: load: method: *GET|string  # end-param;ent=commit_comment
      op: patch: method: *PATCH|string  # not-load;ent=commit_comment
    }
    path: "/repos/{owner}/{repo}/commits/{commit_sha}/comments": {  # ent:commit_comment:cmp=commit_comment;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=commit_comment
      op: list: method: *GET|string  # array;ent=commit_comment
    }
  }

  entity: commit_comparison: {
    path: "/repos/{owner}/{repo}/compare/{basehead}": {  # ent:commit_comparison:cmp=commit_comparison;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=commit_comparison
    }
  }

  entity: community_profile: {
    path: "/repos/{owner}/{repo}/community/profile": {  # ent:community_profile:cmp=community_profile;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=community_profile
    }
  }

  entity: configuration: {
    path: "/enterprises/{enterprise}/code-security/configurations/{configuration_id}": {  # ent:configuration:no-cmp;path=t/p/;entres=true/204,400,403,404,409/nores;path-primary-delete
      rename: param: "configuration_id": *"id"|string  # end-id:DELETE:parent=true/configuration:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=configuration
    }
    path: "/orgs/{org}/code-security/configurations/{configuration_id}": {  # ent:configuration:no-cmp;path=t/p/;entres=true/204,400,403,404,409/nores;path-primary-delete
      rename: param: "configuration_id": *"id"|string  # end-id:DELETE:parent=true/configuration:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=configuration
    }
  }

  entity: configuration_attach: {
    path: "/enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach": {  # ent:configuration_attach:no-cmp;path=t/p/t/;entres=false/202,403,404,409;part-ent
      rename: param: "configuration_id": *"id"|string  # action-not-parent:configuration_attach
      op: create: method: *POST|string  # not-load;ent=configuration_attach
    }
    path: "/orgs/{org}/code-security/configurations/{configuration_id}/attach": {  # ent:configuration_attach:no-cmp;path=t/p/t/;entres=false/202;part-ent
      rename: param: "configuration_id": *"id"|string  # action-not-parent:configuration_attach
      op: create: method: *POST|string  # not-load;ent=configuration_attach
    }
  }

  entity: content: {
    path: "/repos/{owner}/{repo}/contents/{path}": {  # ent:content:cmp=content_tree;path=t/p/;path-primary
      rename: param: "path": *"id"|string  # end-id:GET:parent=true/content:cmp=false/content_tree
      op: load: method: *GET|string  # end-param;ent=content
    }
  }

  entity: content_file: {
    path: "/repos/{owner}/{repo}/readme": {  # ent:content_file:cmp=content_file;path=p/t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=content_file
    }
    path: "/repos/{owner}/{repo}/readme/{dir}": {  # ent:content_file:cmp=content_file;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=content_file
    }
  }

  entity: content_traffic: {
    path: "/repos/{owner}/{repo}/traffic/popular/paths": {  # ent:content_traffic:cmp=content_traffic;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=content_traffic
    }
  }

  entity: context: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts": {  # ent:context:no-cmp;path=t/;entres=false/200,404,422;ent-act
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=context
      op: list: method: *GET|string  # array;ent=context
      op: remove: method: *DELETE|string  # not-load;ent=context
      op: update: method: *PUT|string  # not-load;ent=context
    }
  }

  entity: contributor: {
    path: "/repos/{owner}/{repo}/contributors": {  # ent:contributor:cmp=contributor;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=contributor
    }
    path: "/repos/{owner}/{repo}/stats/contributors": {  # ent:contributor:cmp=contributor_activity;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=contributor
    }
  }

  entity: copilot: {
    path: "/orgs/{org}/members/{username}/copilot": {  # ent:copilot:cmp=copilot_seat_detail;path=t/p/t/;path-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=copilot
    }
  }

  entity: copilot_organization_detail: {
    path: "/orgs/{org}/copilot/billing": {  # ent:copilot_organization_detail:cmp=copilot_organization_detail;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=copilot_organization_detail
    }
  }

  entity: copilot_seat_detail: {
    path: "/orgs/{org}/copilot/billing/seats": {  # ent:copilot_seat_detail:cmp=copilot_seat_detail;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:seats;ent=copilot_seat_detail
    }
  }

  entity: copilot_usage_metrics_day: {
    path: "/orgs/{org}/copilot/metrics": {  # ent:copilot_usage_metrics_day:cmp=copilot_usage_metrics_day;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=copilot_usage_metrics_day
    }
    path: "/orgs/{org}/team/{team_slug}/copilot/metrics": {  # ent:copilot_usage_metrics_day:cmp=copilot_usage_metrics_day;path=t/;cmp-primary
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: list: method: *GET|string  # array;ent=copilot_usage_metrics_day
    }
  }

  entity: custom_deployment_rule_app: {
    path: "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps": {  # ent:custom_deployment_rule_app:cmp=custom_deployment_rule_app;path=t/;cmp-primary
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      op: list: method: *GET|string  # array-prop:available_custom_deployment_protection_rule_integrations;ent=custom_deployment_rule_app
    }
  }

  entity: custom_property: {
    path: "/orgs/{org}/properties/schema": {  # ent:custom_property:cmp=custom_property;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=custom_property
      op: patch: method: *PATCH|string  # not-load;ent=custom_property
    }
    path: "/orgs/{org}/properties/schema/{custom_property_name}": {  # ent:custom_property:cmp=custom_property;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=custom_property
      op: remove: method: *DELETE|string  # was/delete/A:schema:not-load;ent=schema
      op: update: method: *PUT|string  # not-load;ent=custom_property
    }
  }

  entity: custom_property_value: {
    path: "/repos/{owner}/{repo}/properties/values": {  # ent:custom_property_value:cmp=custom_property_value;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=custom_property_value
    }
  }

  entity: default_level: {
    path: "/organizations/{org}/dependabot/repository-access/default-level": {  # ent:default_level:no-cmp;path=t/;entres=true/204,403,404/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=default_level
    }
  }

  entity: delete_request: {
    path: "/orgs/{org}/attestations/delete-request": {  # ent:delete_request:no-cmp;path=t/;entres=false/200,404;ent-act
      op: create: method: *POST|string  # not-load;ent=delete_request
    }
    path: "/users/{username}/attestations/delete-request": {  # ent:delete_request:no-cmp;path=t/;entres=false/200,404;ent-act
      op: create: method: *POST|string  # not-load;ent=delete_request
    }
  }

  entity: delivery_attempt: {
    path: "/app/hook/deliveries/{delivery_id}/attempts": {  # ent:delivery_attempt:no-cmp;path=t/p/t/;entres=false/202,400,422;part-ent
      rename: param: "delivery_id": *"id"|string  # action-not-parent:delivery_attempt
      op: create: method: *POST|string  # not-load;ent=delivery_attempt
    }
    path: "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts": {  # ent:delivery_attempt:no-cmp;path=t/p/t/;entres=false/202,400,422;part-ent
      rename: param: "delivery_id": *"id"|string  # action-not-parent:delivery_attempt
      op: create: method: *POST|string  # not-load;ent=delivery_attempt
    }
    path: "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts": {  # ent:delivery_attempt:no-cmp;path=t/p/t/;entres=false/202,400,422;part-ent
      rename: param: "delivery_id": *"id"|string  # action-not-parent:delivery_attempt
      op: create: method: *POST|string  # not-load;ent=delivery_attempt
    }
  }

  entity: dependabot_alert: {
    path: "/repos/{owner}/{repo}/dependabot/alerts": {  # ent:dependabot_alert:cmp=dependabot_alert;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=dependabot_alert
    }
    path: "/repos/{owner}/{repo}/dependabot/alerts/{alert_number}": {  # ent:dependabot_alert:cmp=dependabot_alert;path=t/p/;cmp-primary
      rename: param: "alert_number": *"id"|string  # end-id:GET:parent=true/alert:cmp=false/dependabot_alert
      op: load: method: *GET|string  # end-param;ent=dependabot_alert
      op: patch: method: *PATCH|string  # not-load;ent=dependabot_alert
    }
  }

  entity: dependabot_alert_with_repository: {
    path: "/enterprises/{enterprise}/dependabot/alerts": {  # ent:dependabot_alert_with_repository:cmp=dependabot_alert_with_repository;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=dependabot_alert_with_repository
    }
    path: "/orgs/{org}/dependabot/alerts": {  # ent:dependabot_alert_with_repository:cmp=dependabot_alert_with_repository;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=dependabot_alert_with_repository
    }
  }

  entity: dependabot_public_key: {
    path: "/orgs/{org}/dependabot/secrets/public-key": {  # ent:dependabot_public_key:cmp=dependabot_public_key;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=dependabot_public_key
    }
    path: "/repos/{owner}/{repo}/dependabot/secrets/public-key": {  # ent:dependabot_public_key:cmp=dependabot_public_key;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=dependabot_public_key
    }
  }

  entity: dependabot_repository_access_detail: {
    path: "/organizations/{org}/dependabot/repository-access": {  # ent:dependabot_repository_access_detail:cmp=dependabot_repository_access_detail;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:accessible_repositories;ent=dependabot_repository_access_detail
    }
  }

  entity: dependabot_secret: {
    path: "/repos/{owner}/{repo}/dependabot/secrets": {  # ent:dependabot_secret:cmp=dependabot_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=dependabot_secret
    }
    path: "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}": {  # ent:dependabot_secret:cmp=dependabot_secret;path=t/p/;cmp-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/dependabot_secret
      op: load: method: *GET|string  # end-param;ent=dependabot_secret
    }
  }

  entity: dependency_graph_diff: {
    path: "/repos/{owner}/{repo}/dependency-graph/compare/{basehead}": {  # ent:dependency_graph_diff:cmp=dependency_graph_diff;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=dependency_graph_diff
    }
  }

  entity: dependency_graph_spdx_sbom: {
    path: "/repos/{owner}/{repo}/dependency-graph/sbom": {  # ent:dependency_graph_spdx_sbom:cmp=dependency_graph_spdx_sbom;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=dependency_graph_spdx_sbom
    }
  }

  entity: deploy_key: {
    path: "/repos/{owner}/{repo}/keys": {  # ent:deploy_key:cmp=deploy_key;path=p/t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=deploy_key
      op: list: method: *GET|string  # array;ent=deploy_key
    }
    path: "/repos/{owner}/{repo}/keys/{key_id}": {  # ent:deploy_key:cmp=deploy_key;path=t/p/;cmp-primary
      rename: param: "key_id": *"id"|string  # end-id:GET:parent=true/key:cmp=false/deploy_key
      op: load: method: *GET|string  # end-param;ent=deploy_key
    }
  }

  entity: deployment: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments": {  # ent:deployment:cmp=deployment;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=deployment
    }
    path: "/repos/{owner}/{repo}/deployments": {  # ent:deployment:cmp=deployment;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=deployment
      op: list: method: *GET|string  # array;ent=deployment
    }
    path: "/repos/{owner}/{repo}/deployments/{deployment_id}": {  # ent:deployment:no-cmp;path=t/p/;entres=true/204,404,422/nores;path-primary-delete
      rename: param: "deployment_id": *"id"|string  # end-id:GET:parent=true/deployment:cmp=false/deployment
      op: load: method: *GET|string  # end-param;ent=deployment
      op: remove: method: *DELETE|string  # not-load;ent=deployment
    }
  }

  entity: deployment_branch_policy: {
    path: "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies": {  # ent:deployment_branch_policy:cmp=deployment_branch_policy;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=deployment_branch_policy
      op: list: method: *GET|string  # array-prop:branch_policies;ent=deployment_branch_policy
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}": {  # ent:deployment_branch_policy:no-cmp;path=t/p/;entres=true/204/nores;cmp-found-delete
      rename: param: "branch_policy_id": *"id"|string  # end-id:GET:parent=true/deployment_branch_policy:cmp=false/deployment_branch_policy
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=deployment_branch_policy
      op: remove: method: *DELETE|string  # not-load;ent=deployment_branch_policy
      op: update: method: *PUT|string  # not-load;ent=deployment_branch_policy
    }
  }

  entity: deployment_cancel: {
    path: "/repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel": {  # ent:deployment_cancel:no-cmp;path=t/p/t/;entres=true/204,404/nores;path-primary;prob-ent-part
      rename: param: "pages_deployment_id": *"id"|string  # action-not-parent:deployment_cancel
      op: create: method: *POST|string  # not-load;ent=deployment_cancel
    }
  }

  entity: deployment_protection_rule: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule": {  # ent:deployment_protection_rule:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-last
      op: create: method: *POST|string  # not-load;ent=deployment_protection_rule
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules": {  # ent:deployment_protection_rule:cmp=deployment_protection_rule;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=deployment_protection_rule
      op: list: method: *GET|string  # array-prop:custom_deployment_protection_rules;ent=deployment_protection_rule
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}": {  # ent:deployment_protection_rule:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      rename: param: "protection_rule_id": *"id"|string  # end-id:GET:parent=true/deployment_protection_rule:cmp=false/deployment_protection_rule
      op: load: method: *GET|string  # end-param;ent=deployment_protection_rule
      op: remove: method: *DELETE|string  # not-load;ent=deployment_protection_rule
    }
  }

  entity: deployment_status: {
    path: "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses": {  # ent:deployment_status:cmp=deployment_status;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "deployment_id": *"id"|string  # action-not-parent:deployment_status
      op: create: method: *POST|string  # not-load;ent=deployment_status
      op: list: method: *GET|string  # array;ent=deployment_status
    }
    path: "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}": {  # ent:deployment_status:cmp=deployment_status;path=t/p/;cmp-primary
      rename: param: "status_id": *"id"|string  # end-id:GET:parent=true/status:cmp=false/deployment_status
      op: load: method: *GET|string  # end-param;ent=deployment_status
    }
  }

  entity: detach: {
    path: "/orgs/{org}/code-security/configurations/detach": {  # ent:detach:no-cmp;path=t/;entres=true/204,400,403,404,409/nores;path-primary-delete
      op: remove: method: *DELETE|string  # not-load;ent=detach
    }
  }

  entity: devcontainer: {
    path: "/repos/{owner}/{repo}/codespaces/devcontainers": {  # ent:devcontainer:no-cmp;path=t/;entres=true/200,400,401,403,404,500/get;path-primary
      op: list: method: *GET|string  # array-prop:devcontainers;ent=devcontainer
    }
  }

  entity: diff_entry: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/files": {  # ent:diff_entry:cmp=diff_entry;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=diff_entry
    }
  }

  entity: discussion: {
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}": {  # ent:discussion:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "discussion_number": *"id"|string  # end-id:DELETE:parent=true/discussion:cmp=false/undefined
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=discussion
    }
    path: "/teams/{team_id}/discussions/{discussion_number}": {  # ent:discussion:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "discussion_number": *"id"|string  # end-id:DELETE:parent=true/discussion:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=discussion
    }
  }

  entity: dispatch: {
    path: "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches": {  # ent:dispatch:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-part
      rename: param: "workflow_id": *"id"|string  # action-not-parent:workflow_dispatch
      op: create: method: *POST|string  # was/create/A:workflow_dispatch:not-load;ent=workflow_dispatch
    }
    path: "/repos/{owner}/{repo}/dispatches": {  # ent:dispatch:no-cmp;path=p/t/;entres=true/204,404,422/nores;path-primary
      op: create: method: *POST|string  # not-load;ent=dispatch
    }
  }

  entity: email: {
    path: "/user/email/visibility": {  # ent:email:cmp=email;path=t/;cmp-primary
      op: patch: method: *PATCH|string  # not-load;ent=email
    }
    path: "/user/emails": {  # ent:email:no-cmp;path=t/;entres=true/204,304,401,403,404,422/nores;path-primary-delete
      op: create: method: *POST|string  # not-load;ent=email
      op: list: method: *GET|string  # array;ent=email
      op: remove: method: *DELETE|string  # not-load;ent=email
    }
    path: "/user/public_emails": {  # ent:email:cmp=email;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=email
    }
  }

  entity: emoji: {
    path: "/emojis": {  # ent:emoji:no-cmp;path=t/;entres=true/200,304/get;path-primary
      op: load: method: *GET|string  # not-list;ent=emoji
    }
  }

  entity: empty_object: {
    path: "/orgs/{org}/actions/oidc/customization/sub": {  # ent:empty_object:cmp=empty_object;path=t/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/orgs/{org}/actions/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/orgs/{org}/actions/variables": {  # ent:empty_object:cmp=empty_object;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/orgs/{org}/codespaces/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/orgs/{org}/dependabot/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun": {  # ent:empty_object:cmp=empty_object;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/actions/oidc/customization/sub": {  # ent:empty_object:cmp=empty_object;path=t/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/approve": {  # ent:empty_object:cmp=empty_object;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun": {  # ent:empty_object:cmp=empty_object;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs": {  # ent:empty_object:cmp=empty_object;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/actions/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/actions/variables": {  # ent:empty_object:cmp=empty_object;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest": {  # ent:empty_object:cmp=empty_object;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest": {  # ent:empty_object:cmp=empty_object;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/code-scanning/default-setup": {  # ent:empty_object:cmp=empty_object;path=t/;cmp-primary
      op: patch: method: *PATCH|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/variables": {  # ent:empty_object:cmp=empty_object;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=empty_object
    }
    path: "/user/codespaces/secrets/{secret_name}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=empty_object
    }
    path: "/users/{username}/attestations/{subject_digest}": {  # ent:empty_object:cmp=empty_object;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=empty_object
    }
  }

  entity: enterprise_team: {
    path: "/enterprises/{enterprise}/teams": {  # ent:enterprise_team:cmp=enterprise_team;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=enterprise_team
      op: list: method: *GET|string  # array;ent=enterprise_team
    }
    path: "/enterprises/{enterprise}/teams/{team_slug}": {  # ent:enterprise_team:cmp=enterprise_team;path=t/p/;cmp-primary
      rename: param: "team_slug": *"id"|string  # end-id:GET:parent=true/team:cmp=false/enterprise_team
      op: load: method: *GET|string  # end-param;ent=enterprise_team
      op: patch: method: *PATCH|string  # not-load;ent=enterprise_team
    }
  }

  entity: entity0: {
    path: "/": {  # ent:entity0:cmp=root
      op: load: method: *GET|string  # not-list;ent=entity0
    }
  }

  entity: environment: {
    path: "/repos/{owner}/{repo}/environments": {  # ent:environment:cmp=environment;path=p/t/;path-primary
      op: list: method: *GET|string  # array-prop:environments;ent=environment
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}": {  # ent:environment:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "environment_name": *"id"|string  # end-id:GET:parent=true/environment:cmp=false/environment
      op: load: method: *GET|string  # end-param;ent=environment
      op: remove: method: *DELETE|string  # not-load;ent=environment
      op: update: method: *PUT|string  # not-load;ent=environment
    }
  }

  entity: environment_approval: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/approvals": {  # ent:environment_approval:cmp=environment_approval;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=environment_approval
    }
  }

  entity: event: {
    path: "/events": {  # ent:event:cmp=event;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=event
    }
    path: "/networks/{owner}/{repo}/events": {  # ent:event:cmp=event;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=event
    }
    path: "/orgs/{org}/events": {  # ent:event:cmp=event;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=event
    }
    path: "/repos/{owner}/{repo}/events": {  # ent:event:cmp=event;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=event
    }
    path: "/users/{username}/events": {  # ent:event:cmp=event;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=event
    }
    path: "/users/{username}/events/orgs/{org}": {  # ent:event:cmp=event;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=event
    }
    path: "/users/{username}/events/public": {  # ent:event:cmp=event;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=event
    }
    path: "/users/{username}/received_events": {  # ent:event:cmp=event;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=event
    }
    path: "/users/{username}/received_events/public": {  # ent:event:cmp=event;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=event
    }
  }

  entity: feed: {
    path: "/feeds": {  # ent:feed:cmp=feed;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:current_user_organization_urls;ent=feed
    }
  }

  entity: file_commit: {
    path: "/repos/{owner}/{repo}/contents/{path}": {  # ent:file_commit:cmp=file_commit;path=t/p/;cmp-primary
      op: remove: method: *DELETE|string  # not-load;ent=file_commit
      op: update: method: *PUT|string  # not-load;ent=file_commit
    }
  }

  entity: follower: {
    path: "/user/followers": {  # ent:follower:cmp=simple_user;path=t/;path-over-cmp
      op: list: method: *GET|string  # array;ent=follower
    }
    path: "/users/{username}/followers": {  # ent:follower:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=follower
    }
  }

  entity: following: {
    path: "/user/following": {  # ent:following:cmp=simple_user;path=t/;path-over-cmp
      op: list: method: *GET|string  # array;ent=following
    }
    path: "/user/following/{username}": {  # ent:following:no-cmp;path=t/p/;entres=true/204,304,401,403,404/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/following:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=following
      op: remove: method: *DELETE|string  # not-load;ent=following
      op: update: method: *PUT|string  # not-load;ent=following
    }
    path: "/users/{username}/following": {  # ent:following:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=following
    }
    path: "/users/{username}/following/{target_user}": {  # ent:following:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary
      rename: param: "target_user": *"id"|string  # end-id:GET:parent=true/following:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=following
    }
  }

  entity: fork: {
    path: "/repos/{owner}/{repo}/forks": {  # ent:fork:no-cmp;path=p/t/;entres=false/202,400,403,404,422;ent-act
      op: create: method: *POST|string  # not-load;ent=fork
    }
    path: "/repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks": {  # ent:fork:no-cmp;path=t/p/t/;entres=false/202,400,403,404,422;part-ent
      rename: param: "ghsa_id": *"id"|string  # action-not-parent:security_advisory_fork
      op: create: method: *POST|string  # was/create/A:security_advisory_fork:not-load;ent=security_advisory_fork
    }
  }

  entity: fork_pr_contributor_approval: {
    path: "/orgs/{org}/actions/permissions/fork-pr-contributor-approval": {  # ent:fork_pr_contributor_approval:no-cmp;path=t/;entres=true/204,404,422/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=fork_pr_contributor_approval
    }
    path: "/repos/{owner}/{repo}/actions/permissions/fork-pr-contributor-approval": {  # ent:fork_pr_contributor_approval:no-cmp;path=t/;entres=true/204,404,422/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=fork_pr_contributor_approval
    }
  }

  entity: fork_pr_workflows_private_repo: {
    path: "/orgs/{org}/actions/permissions/fork-pr-workflows-private-repos": {  # ent:fork_pr_workflows_private_repo:no-cmp;path=t/;entres=true/204,403,404,422/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=fork_pr_workflows_private_repo
    }
    path: "/repos/{owner}/{repo}/actions/permissions/fork-pr-workflows-private-repos": {  # ent:fork_pr_workflows_private_repo:no-cmp;path=t/;entres=true/204,404,422/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=fork_pr_workflows_private_repo
    }
  }

  entity: full_repository: {
    path: "/orgs/{org}/repos": {  # ent:full_repository:cmp=full_repository;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=full_repository
    }
    path: "/repos/{owner}/{repo}": {  # ent:full_repository:cmp=full_repository;path=t/p/p;cmp-primary
      op: list: method: *GET|string  # array-prop:topics;ent=full_repository
      op: patch: method: *PATCH|string  # not-load;ent=full_repository
    }
    path: "/repos/{template_owner}/{template_repo}/generate": {  # ent:full_repository:cmp=full_repository;path=p/t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=full_repository
    }
    path: "/user/repos": {  # ent:full_repository:cmp=full_repository;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=full_repository
    }
  }

  entity: gist: {
    path: "/gists": {  # ent:gist:cmp=gist_simple;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=gist
    }
    path: "/gists/{gist_id}": {  # ent:gist:no-cmp;path=t/p/;entres=true/204,304,403,404/nores;path-primary-delete
      rename: param: "gist_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/gist_simple
      op: load: method: *GET|string  # end-param;ent=gist
      op: patch: method: *PATCH|string  # not-load;ent=gist
      op: remove: method: *DELETE|string  # not-load;ent=gist
    }
    path: "/gists/{gist_id}/{sha}": {  # ent:gist:cmp=gist_simple;path=t/p/p;path-primary
      op: list: method: *GET|string  # array-prop:forks;array-prop:history;ent=gist
    }
  }

  entity: gist_comment: {
    path: "/gists/{gist_id}/comments": {  # ent:gist_comment:cmp=gist_comment;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=gist_comment
      op: list: method: *GET|string  # array;ent=gist_comment
    }
    path: "/gists/{gist_id}/comments/{comment_id}": {  # ent:gist_comment:cmp=gist_comment;path=t/p/;cmp-primary
      rename: param: "comment_id": *"id"|string  # end-id:GET:parent=true/comment:cmp=false/gist_comment
      op: load: method: *GET|string  # end-param;ent=gist_comment
      op: patch: method: *PATCH|string  # not-load;ent=gist_comment
    }
  }

  entity: gist_commit: {
    path: "/gists/{gist_id}/commits": {  # ent:gist_commit:cmp=gist_commit;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=gist_commit
    }
  }

  entity: gist_simple: {
    path: "/gists/{gist_id}/forks": {  # ent:gist_simple:cmp=gist_simple;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=gist_simple
    }
  }

  entity: gist_star: {
    path: "/gists/{gist_id}/star": {  # ent:gist_star:no-cmp;path=t/p/t/;entres=true/204,304,403,404/nores;path-primary;prob-ent-part
      op: load: method: *GET|string  # no-schema;ent=gist_star
      op: update: method: *PUT|string  # not-load;ent=gist_star
    }
  }

  entity: git_commit: {
    path: "/repos/{owner}/{repo}/git/commits": {  # ent:git_commit:cmp=git_commit;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=git_commit
    }
    path: "/repos/{owner}/{repo}/git/commits/{commit_sha}": {  # ent:git_commit:cmp=git_commit;path=t/p/;cmp-primary
      rename: param: "commit_sha": *"id"|string  # end-id:GET:parent=true/commit:cmp=false/git_commit
      op: load: method: *GET|string  # end-param;ent=git_commit
    }
  }

  entity: git_ref: {
    path: "/repos/{owner}/{repo}/git/matching-refs/{ref}": {  # ent:git_ref:cmp=git_ref;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=git_ref
    }
    path: "/repos/{owner}/{repo}/git/ref/{ref}": {  # ent:git_ref:cmp=git_ref;path=t/p/;cmp-primary
      rename: param: "ref": *"id"|string  # end-id:GET:parent=true/ref:cmp=false/git_ref
      op: load: method: *GET|string  # end-param;ent=git_ref
    }
    path: "/repos/{owner}/{repo}/git/refs": {  # ent:git_ref:cmp=git_ref;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=git_ref
    }
    path: "/repos/{owner}/{repo}/git/refs/{ref}": {  # ent:git_ref:cmp=git_ref;path=t/p/;cmp-primary
      rename: param: "ref": *"id"|string  # end-id:PATCH:parent=true/ref:cmp=false/git_ref
      op: patch: method: *PATCH|string  # not-load;ent=git_ref
      op: remove: method: *DELETE|string  # was/delete/A:ref:not-load;ent=ref
    }
  }

  entity: git_tag: {
    path: "/repos/{owner}/{repo}/git/tags": {  # ent:git_tag:cmp=git_tag;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=git_tag
    }
    path: "/repos/{owner}/{repo}/git/tags/{tag_sha}": {  # ent:git_tag:cmp=git_tag;path=t/p/;cmp-primary
      rename: param: "tag_sha": *"id"|string  # end-id:GET:parent=true/tag:cmp=false/git_tag
      op: load: method: *GET|string  # end-param;ent=git_tag
    }
  }

  entity: git_tree: {
    path: "/repos/{owner}/{repo}/git/trees": {  # ent:git_tree:cmp=git_tree;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=git_tree
    }
    path: "/repos/{owner}/{repo}/git/trees/{tree_sha}": {  # ent:git_tree:cmp=git_tree;path=t/p/;cmp-primary
      rename: param: "tree_sha": *"id"|string  # end-id:GET:parent=true/tree:cmp=false/git_tree
      op: load: method: *GET|string  # end-param;ent=git_tree
    }
  }

  entity: gitignore_template: {
    path: "/gitignore/templates/{name}": {  # ent:gitignore_template:cmp=gitignore_template;path=t/p/;cmp-primary
      rename: param: "name": *"id"|string  # end-id:GET:parent=true/template:cmp=false/gitignore_template
      op: load: method: *GET|string  # end-param;ent=gitignore_template
    }
  }

  entity: global_advisory: {
    path: "/advisories": {  # ent:global_advisory:cmp=global_advisory;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=global_advisory
    }
    path: "/advisories/{ghsa_id}": {  # ent:global_advisory:cmp=global_advisory;path=t/p/;cmp-primary
      rename: param: "ghsa_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/global_advisory
      op: load: method: *GET|string  # end-param;ent=global_advisory
    }
  }

  entity: gpg_key: {
    path: "/user/gpg_keys": {  # ent:gpg_key:cmp=gpg_key;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=gpg_key
      op: list: method: *GET|string  # array;ent=gpg_key
    }
    path: "/user/gpg_keys/{gpg_key_id}": {  # ent:gpg_key:no-cmp;path=t/p/;entres=true/204,304,401,403,404,422/nores;path-primary-delete
      rename: param: "gpg_key_id": *"id"|string  # end-id:GET:parent=true/gpg_key:cmp=false/gpg_key
      op: load: method: *GET|string  # end-param;ent=gpg_key
      op: remove: method: *DELETE|string  # not-load;ent=gpg_key
    }
    path: "/users/{username}/gpg_keys": {  # ent:gpg_key:cmp=gpg_key;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=gpg_key
    }
  }

  entity: hook: {
    path: "/orgs/{org}/hooks/{hook_id}": {  # ent:hook:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "hook_id": *"id"|string  # end-id:DELETE:parent=true/hook:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=hook
    }
    path: "/repos/{owner}/{repo}/hooks": {  # ent:hook:cmp=hook;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=hook
      op: list: method: *GET|string  # array;ent=hook
    }
    path: "/repos/{owner}/{repo}/hooks/{hook_id}": {  # ent:hook:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "hook_id": *"id"|string  # end-id:GET:parent=true/hook:cmp=false/hook
      op: load: method: *GET|string  # end-param;ent=hook
      op: patch: method: *PATCH|string  # not-load;ent=hook
      op: remove: method: *DELETE|string  # not-load;ent=hook
    }
  }

  entity: hook_delivery: {
    path: "/app/hook/deliveries/{delivery_id}": {  # ent:hook_delivery:cmp=hook_delivery;path=t/p/;cmp-primary
      rename: param: "delivery_id": *"id"|string  # end-id:GET:parent=true/delivery:cmp=false/hook_delivery
      op: load: method: *GET|string  # end-param;ent=hook_delivery
    }
    path: "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}": {  # ent:hook_delivery:cmp=hook_delivery;path=t/p/;cmp-primary
      rename: param: "delivery_id": *"id"|string  # end-id:GET:parent=true/delivery:cmp=false/hook_delivery
      op: load: method: *GET|string  # end-param;ent=hook_delivery
    }
    path: "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}": {  # ent:hook_delivery:cmp=hook_delivery;path=t/p/;cmp-primary
      rename: param: "delivery_id": *"id"|string  # end-id:GET:parent=true/delivery:cmp=false/hook_delivery
      op: load: method: *GET|string  # end-param;ent=hook_delivery
    }
  }

  entity: hook_delivery_item: {
    path: "/app/hook/deliveries": {  # ent:hook_delivery_item:cmp=hook_delivery_item;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=hook_delivery_item
    }
    path: "/orgs/{org}/hooks/{hook_id}/deliveries": {  # ent:hook_delivery_item:cmp=hook_delivery_item;path=t/p/t/;cmp-primary;has-cmp
      action: "deliveries": kind: *"`$BOOLEAN`"|top  # ent:hook_delivery_item:action-not-parent:hook_id:GET
      rename: param: "hook_id": *"id"|string  # action-not-parent:hook_delivery_item
      op: list: method: *GET|string  # array;ent=hook_delivery_item
    }
    path: "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries": {  # ent:hook_delivery_item:cmp=hook_delivery_item;path=t/p/t/;cmp-primary;has-cmp
      action: "deliveries": kind: *"`$BOOLEAN`"|top  # ent:hook_delivery_item:action-not-parent:hook_id:GET
      rename: param: "hook_id": *"id"|string  # action-not-parent:hook_delivery_item
      op: list: method: *GET|string  # array;ent=hook_delivery_item
    }
  }

  entity: hook_ping: {
    path: "/orgs/{org}/hooks/{hook_id}/pings": {  # ent:hook_ping:no-cmp;path=t/p/t/;entres=true/204,404/nores;path-primary;prob-ent-part
      rename: param: "hook_id": *"id"|string  # action-not-parent:hook_ping
      op: create: method: *POST|string  # not-load;ent=hook_ping
    }
    path: "/repos/{owner}/{repo}/hooks/{hook_id}/pings": {  # ent:hook_ping:no-cmp;path=t/p/t/;entres=true/204,404/nores;path-primary;prob-ent-part
      rename: param: "hook_id": *"id"|string  # action-not-parent:hook_ping
      op: create: method: *POST|string  # not-load;ent=hook_ping
    }
  }

  entity: hook_test: {
    path: "/repos/{owner}/{repo}/hooks/{hook_id}/tests": {  # ent:hook_test:no-cmp;path=t/p/t/;entres=true/204,404/nores;path-primary;prob-ent-part
      rename: param: "hook_id": *"id"|string  # action-not-parent:hook_test
      op: create: method: *POST|string  # not-load;ent=hook_test
    }
  }

  entity: hovercard: {
    path: "/users/{username}/hovercard": {  # ent:hovercard:cmp=hovercard;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:contexts;ent=hovercard
    }
  }

  entity: import: {
    path: "/repos/{owner}/{repo}/import": {  # ent:import:no-cmp;path=p/t/;entres=true/204,503/nores;path-primary-delete
      op: list: method: *GET|string  # array-prop:project_choices;ent=import
      op: patch: method: *PATCH|string  # not-load;ent=import
      op: remove: method: *DELETE|string  # not-load;ent=import
      op: update: method: *PUT|string  # not-load;ent=import
    }
    path: "/repos/{owner}/{repo}/import/lfs": {  # ent:import:cmp=import;path=t/;cmp-primary
      op: patch: method: *PATCH|string  # not-load;ent=import
    }
  }

  entity: installation: {
    path: "/app/installations": {  # ent:installation:cmp=installation;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=installation
    }
    path: "/app/installations/{installation_id}": {  # ent:installation:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "installation_id": *"id"|string  # end-id:GET:parent=true/installation:cmp=false/installation
      op: load: method: *GET|string  # end-param;ent=installation
      op: remove: method: *DELETE|string  # not-load;ent=installation
    }
    path: "/orgs/{org}/installation": {  # ent:installation:cmp=installation;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:events;array-prop:single_file_paths;ent=installation
    }
    path: "/orgs/{org}/installations": {  # ent:installation:cmp=installation;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:installations;ent=installation
    }
    path: "/repos/{owner}/{repo}/installation": {  # ent:installation:cmp=installation;path=p/t/;path-primary
      op: list: method: *GET|string  # array-prop:events;array-prop:single_file_paths;ent=installation
    }
    path: "/user/installations": {  # ent:installation:cmp=installation;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:installations;ent=installation
    }
    path: "/users/{username}/installation": {  # ent:installation:cmp=installation;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:events;array-prop:single_file_paths;ent=installation
    }
  }

  entity: installation_suspended: {
    path: "/app/installations/{installation_id}/suspended": {  # ent:installation_suspended:no-cmp;path=t/p/t/;entres=true/204,404/nores;path-primary;prob-ent-part
      rename: param: "installation_id": *"id"|string  # action-not-parent:installation_suspended
      op: update: method: *PUT|string  # not-load;ent=installation_suspended
    }
  }

  entity: installation_token: {
    path: "/app/installations/{installation_id}/access_tokens": {  # ent:installation_token:cmp=installation_token;path=t/p/t/;cmp-primary;has-cmp
      action: "access_tokens": kind: *"`$BOOLEAN`"|top  # ent:installation_token:action-not-parent:installation_id:POST
      rename: param: "installation_id": *"id"|string  # action-not-parent:installation_token
      op: create: method: *POST|string  # not-load;ent=installation_token
    }
  }

  entity: integration: {
    path: "/app": {  # ent:integration:cmp=integration;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:events;ent=integration
    }
    path: "/app-manifests/{code}/conversions": {  # ent:integration:cmp=integration;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=integration
    }
    path: "/apps/{app_slug}": {  # ent:integration:cmp=integration;path=t/p/;cmp-primary
      rename: param: "app_slug": *"id"|string  # end-id:GET:parent=false/null:cmp=false/integration
      op: load: method: *GET|string  # end-param;ent=integration
    }
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps": {  # ent:integration:cmp=integration;path=t/;cmp-primary
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=integration
      op: list: method: *GET|string  # array;ent=integration
      op: remove: method: *DELETE|string  # not-load;ent=integration
      op: update: method: *PUT|string  # not-load;ent=integration
    }
  }

  entity: integration_installation_request: {
    path: "/app/installation-requests": {  # ent:integration_installation_request:cmp=integration_installation_request;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=integration_installation_request
    }
  }

  entity: interaction_limit: {
    path: "/orgs/{org}/interaction-limits": {  # ent:interaction_limit:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary-delete;prob-ent-last
      op: load: method: *GET|string  # not-list;ent=interaction_limit
      op: remove: method: *DELETE|string  # not-load;ent=interaction_limit
      op: update: method: *PUT|string  # not-load;ent=interaction_limit
    }
    path: "/repos/{owner}/{repo}/interaction-limits": {  # ent:interaction_limit:no-cmp;path=p/t/;entres=true/204,409/nores;path-primary-delete
      op: load: method: *GET|string  # not-list;ent=interaction_limit
      op: remove: method: *DELETE|string  # not-load;ent=interaction_limit
      op: update: method: *PUT|string  # not-load;ent=interaction_limit
    }
    path: "/user/interaction-limits": {  # ent:interaction_limit:no-cmp;path=t/;entres=true/204/nores;path-primary-delete
      op: load: method: *GET|string  # not-list;ent=interaction_limit
      op: remove: method: *DELETE|string  # not-load;ent=interaction_limit
      op: update: method: *PUT|string  # not-load;ent=interaction_limit
    }
  }

  entity: invitation: {
    path: "/orgs/{org}/invitations/{invitation_id}": {  # ent:invitation:no-cmp;path=t/p/;entres=true/204,404,422/nores;path-primary-delete
      rename: param: "invitation_id": *"id"|string  # end-id:DELETE:parent=true/invitation:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=invitation
    }
    path: "/repos/{owner}/{repo}/invitations/{invitation_id}": {  # ent:invitation:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "invitation_id": *"id"|string  # end-id:DELETE:parent=true/invitation:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=invitation
    }
  }

  entity: issue: {
    path: "/issues": {  # ent:issue:cmp=issue;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=issue
    }
    path: "/orgs/{org}/issues": {  # ent:issue:cmp=issue;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues": {  # ent:issue:cmp=issue;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=issue
      op: list: method: *GET|string  # array;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}": {  # ent:issue:cmp=issue;path=t/p/;path-primary
      rename: param: "issue_number": *"id"|string  # end-id:GET:parent=true/issue:cmp=false/issue
      op: load: method: *GET|string  # end-param;ent=issue
      op: patch: method: *PATCH|string  # not-load;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/assignees": {  # ent:issue:cmp=issue;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=issue
      op: remove: method: *DELETE|string  # not-load;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by": {  # ent:issue:cmp=issue;path=t/;cmp-primary
      rename: param: "issue_number": *"id"|string  # id-not-last
      op: create: method: *POST|string  # not-load;ent=issue
      op: list: method: *GET|string  # array;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by/{issue_id}": {  # ent:issue:cmp=issue;path=t/p/;cmp-primary
      rename: param: "issue_number": *"id"|string  # id-not-last
      op: remove: method: *DELETE|string  # not-load;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocking": {  # ent:issue:cmp=issue;path=t/;cmp-primary
      rename: param: "issue_number": *"id"|string  # id-not-last
      op: list: method: *GET|string  # array;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/parent": {  # ent:issue:cmp=issue;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:assignees;array-prop:issue_field_values;array-prop:labels;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/sub_issue": {  # ent:issue:cmp=issue;path=t/p/t/;cmp-primary;has-cmp
      op: remove: method: *DELETE|string  # not-load;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/sub_issues": {  # ent:issue:cmp=issue;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=issue
      op: list: method: *GET|string  # array;ent=issue
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority": {  # ent:issue:cmp=issue;path=t/;cmp-primary
      rename: param: "issue_number": *"id"|string  # id-not-last
      op: patch: method: *PATCH|string  # not-load;ent=issue
    }
    path: "/search/issues": {  # ent:issue:cmp=issue_search_result_item;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:items;ent=issue
    }
    path: "/user/issues": {  # ent:issue:cmp=issue;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=issue
    }
  }

  entity: issue_comment: {
    path: "/repos/{owner}/{repo}/issues/comments": {  # ent:issue_comment:cmp=issue_comment;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=issue_comment
    }
    path: "/repos/{owner}/{repo}/issues/comments/{comment_id}": {  # ent:issue_comment:cmp=issue_comment;path=t/p/;cmp-primary
      rename: param: "comment_id": *"id"|string  # end-id:GET:parent=true/comment:cmp=false/issue_comment
      op: load: method: *GET|string  # end-param;ent=issue_comment
      op: patch: method: *PATCH|string  # not-load;ent=issue_comment
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/comments": {  # ent:issue_comment:cmp=issue_comment;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=issue_comment
      op: list: method: *GET|string  # array;ent=issue_comment
    }
  }

  entity: issue_event: {
    path: "/repos/{owner}/{repo}/issues/events": {  # ent:issue_event:cmp=issue_event;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=issue_event
    }
    path: "/repos/{owner}/{repo}/issues/events/{event_id}": {  # ent:issue_event:cmp=issue_event;path=t/p/;cmp-primary
      rename: param: "event_id": *"id"|string  # end-id:GET:parent=true/event:cmp=false/issue_event
      op: load: method: *GET|string  # end-param;ent=issue_event
    }
  }

  entity: issue_event_for_issue: {
    path: "/repos/{owner}/{repo}/issues/{issue_number}/events": {  # ent:issue_event_for_issue:cmp=issue_event_for_issue;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=issue_event_for_issue
    }
  }

  entity: issue_lock: {
    path: "/repos/{owner}/{repo}/issues/{issue_number}/lock": {  # ent:issue_lock:no-cmp;path=t/p/t/;entres=true/204,403,404/nores;path-primary-delete;prob-ent-part
      op: remove: method: *DELETE|string  # not-load;ent=issue_lock
      op: update: method: *PUT|string  # not-load;ent=issue_lock
    }
  }

  entity: issue_type: {
    path: "/orgs/{org}/issue-types": {  # ent:issue_type:cmp=issue_type;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=issue_type
      op: list: method: *GET|string  # array;ent=issue_type
    }
    path: "/orgs/{org}/issue-types/{issue_type_id}": {  # ent:issue_type:no-cmp;path=t/p/;entres=true/204,404,422/nores;path-primary-delete
      rename: param: "issue_type_id": *"id"|string  # end-id:PUT:parent=true/issue_type:cmp=false/issue_type
      op: remove: method: *DELETE|string  # not-load;ent=issue_type
      op: update: method: *PUT|string  # not-load;ent=issue_type
    }
  }

  entity: item: {
    path: "/orgs/{org}/projectsV2/{project_number}/items/{item_id}": {  # ent:item:no-cmp;path=t/p/;entres=true/204,401,403/nores;path-primary-delete
      rename: param: "item_id": *"id"|string  # end-id:DELETE:parent=true/item:cmp=false/undefined
      rename: param: "project_number": *"projects_v2_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=item
    }
    path: "/users/{username}/projectsV2/{project_number}/items/{item_id}": {  # ent:item:no-cmp;path=t/p/;entres=true/204,401,403/nores;path-primary-delete
      rename: param: "item_id": *"id"|string  # end-id:DELETE:parent=true/item:cmp=false/undefined
      rename: param: "project_number": *"projects_v2_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=item
    }
  }

  entity: job: {
    path: "/repos/{owner}/{repo}/actions/jobs/{job_id}": {  # ent:job:cmp=job;path=t/p/;path-primary
      rename: param: "job_id": *"id"|string  # end-id:GET:parent=true/job:cmp=false/job
      op: load: method: *GET|string  # end-param;ent=job
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs": {  # ent:job:cmp=job;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:jobs;ent=job
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs": {  # ent:job:cmp=job;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:jobs;ent=job
    }
  }

  entity: job_log: {
    path: "/repos/{owner}/{repo}/actions/jobs/{job_id}/logs": {  # ent:job_log:no-cmp;path=t/p/t/;entres=true/302/get;path-primary;prob-ent-part
      rename: param: "job_id": *"id"|string  # action-not-parent:job_log
      op: load: method: *GET|string  # no-schema;ent=job_log
    }
  }

  entity: key: {
    path: "/repos/{owner}/{repo}/keys/{key_id}": {  # ent:key:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "key_id": *"id"|string  # end-id:DELETE:parent=true/key:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=key
    }
    path: "/user/keys": {  # ent:key:cmp=key;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=key
      op: list: method: *GET|string  # array;ent=key
    }
    path: "/user/keys/{key_id}": {  # ent:key:no-cmp;path=t/p/;entres=true/204,304,401,403,404/nores;path-primary-delete
      rename: param: "key_id": *"id"|string  # end-id:GET:parent=true/key:cmp=false/key
      op: load: method: *GET|string  # end-param;ent=key
      op: remove: method: *DELETE|string  # not-load;ent=key
    }
    path: "/users/{username}/keys": {  # ent:key:cmp=key_simple;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=key
    }
  }

  entity: label: {
    path: "/repos/{owner}/{repo}/issues/{issue_number}/labels": {  # ent:label:no-cmp;path=t/p/t/;entres=true/204,301,404,410/nores;path-primary-delete;prob-ent-last
      op: create: method: *POST|string  # not-load;ent=label
      op: list: method: *GET|string  # array;ent=label
      op: remove: method: *DELETE|string  # not-load;ent=label
      op: update: method: *PUT|string  # not-load;ent=label
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}": {  # ent:label:cmp=label;path=t/p/;path-primary
      rename: param: "issue_number": *"issue_id"|string  # not-primary
      rename: param: "name": *"id"|string  # end-id:DELETE:parent=true/label:cmp=false/label
      op: remove: method: *DELETE|string  # not-load;ent=label
    }
    path: "/repos/{owner}/{repo}/labels": {  # ent:label:cmp=label;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=label
      op: list: method: *GET|string  # array;ent=label
    }
    path: "/repos/{owner}/{repo}/labels/{name}": {  # ent:label:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "name": *"id"|string  # end-id:GET:parent=true/label:cmp=false/label
      op: load: method: *GET|string  # end-param;ent=label
      op: patch: method: *PATCH|string  # not-load;ent=label
      op: remove: method: *DELETE|string  # not-load;ent=label
    }
    path: "/repos/{owner}/{repo}/milestones/{milestone_number}/labels": {  # ent:label:cmp=label;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=label
    }
    path: "/search/labels": {  # ent:label:cmp=label_search_result_item;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:items;ent=label
    }
  }

  entity: language: {
    path: "/repos/{owner}/{repo}/languages": {  # ent:language:cmp=language;path=p/t/;path-primary
      op: load: method: *GET|string  # not-list;ent=language
    }
  }

  entity: license: {
    path: "/licenses": {  # ent:license:cmp=license_simple;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=license
    }
    path: "/licenses/{license}": {  # ent:license:cmp=licenses;path=t/p/;path-primary
      rename: param: "license": *"id"|string  # end-id:GET:parent=false/null:cmp=false/licenses
      op: load: method: *GET|string  # end-param;ent=license
    }
  }

  entity: license_content: {
    path: "/repos/{owner}/{repo}/license": {  # ent:license_content:cmp=license_content;path=p/t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=license_content
    }
  }

  entity: markdown: {
    path: "/markdown": {  # ent:markdown:no-cmp;path=t/;entres=false/200,304;ent-act
      op: create: method: *POST|string  # not-load;ent=markdown
    }
  }

  entity: marketplace_listing_plan: {
    path: "/marketplace_listing/plans": {  # ent:marketplace_listing_plan:cmp=marketplace_listing_plan;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=marketplace_listing_plan
    }
    path: "/marketplace_listing/stubbed/plans": {  # ent:marketplace_listing_plan:cmp=marketplace_listing_plan;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=marketplace_listing_plan
    }
  }

  entity: marketplace_purchase: {
    path: "/marketplace_listing/accounts/{account_id}": {  # ent:marketplace_purchase:cmp=marketplace_purchase;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=marketplace_purchase
    }
    path: "/marketplace_listing/plans/{plan_id}/accounts": {  # ent:marketplace_purchase:cmp=marketplace_purchase;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=marketplace_purchase
    }
    path: "/marketplace_listing/stubbed/accounts/{account_id}": {  # ent:marketplace_purchase:cmp=marketplace_purchase;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=marketplace_purchase
    }
    path: "/marketplace_listing/stubbed/plans/{plan_id}/accounts": {  # ent:marketplace_purchase:cmp=marketplace_purchase;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=marketplace_purchase
    }
  }

  entity: member: {
    path: "/orgs/{org}/members": {  # ent:member:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=member
    }
    path: "/orgs/{org}/members/{username}": {  # ent:member:no-cmp;path=t/p/;entres=true/204,302,404/nores;path-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/member:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=member
    }
    path: "/orgs/{org}/teams/{team_slug}/members": {  # ent:member:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=member
    }
    path: "/teams/{team_id}/members": {  # ent:member:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=member
    }
    path: "/teams/{team_id}/members/{username}": {  # ent:member:no-cmp;path=t/p/;entres=true/204,403,404,422/nores;path-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/member:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=member
      op: update: method: *PUT|string  # not-load;ent=member
    }
  }

  entity: membership: {
    path: "/enterprises/{enterprise}/teams/{enterprise-team}/memberships": {  # ent:membership:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=membership
    }
    path: "/enterprises/{enterprise}/teams/{enterprise-team}/memberships/{username}": {  # ent:membership:no-cmp;path=t/p/;entres=true/204,403/nores;path-primary-delete
      rename: param: "enterprise-team": *"team_id"|string  # not-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/membership:cmp=false/simple_user
      op: load: method: *GET|string  # end-param;ent=membership
      op: remove: method: *DELETE|string  # not-load;ent=membership
      op: update: method: *PUT|string  # not-load;ent=membership
    }
    path: "/orgs/{org}/memberships/{username}": {  # ent:membership:no-cmp;path=t/p/;entres=true/204,403,404/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:DELETE:parent=true/membership:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=membership
    }
    path: "/teams/{team_id}/memberships/{username}": {  # ent:membership:no-cmp;path=t/p/;entres=true/204,403/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:DELETE:parent=true/membership:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=membership
    }
  }

  entity: merged_upstream: {
    path: "/repos/{owner}/{repo}/merge-upstream": {  # ent:merged_upstream:cmp=merged_upstream;path=p/t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=merged_upstream
    }
  }

  entity: migration: {
    path: "/orgs/{org}/migrations": {  # ent:migration:cmp=migration;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=migration
      op: list: method: *GET|string  # array;ent=migration
    }
    path: "/orgs/{org}/migrations/{migration_id}": {  # ent:migration:cmp=migration;path=t/p/;path-primary
      rename: param: "migration_id": *"id"|string  # end-id:GET:parent=true/migration:cmp=false/migration
      op: load: method: *GET|string  # end-param;ent=migration
    }
    path: "/user/migrations": {  # ent:migration:cmp=migration;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=migration
      op: list: method: *GET|string  # array;ent=migration
    }
    path: "/user/migrations/{migration_id}": {  # ent:migration:cmp=migration;path=t/p/;path-primary
      rename: param: "migration_id": *"id"|string  # end-id:GET:parent=true/migration:cmp=false/migration
      op: load: method: *GET|string  # end-param;ent=migration
    }
  }

  entity: migration_archive: {
    path: "/orgs/{org}/migrations/{migration_id}/archive": {  # ent:migration_archive:no-cmp;path=t/p/t/;entres=true/302,404/get;path-primary;prob-ent-part
      rename: param: "migration_id": *"id"|string  # action-not-parent:migration_archive
      op: load: method: *GET|string  # no-schema;ent=migration_archive
    }
    path: "/user/migrations/{migration_id}/archive": {  # ent:migration_archive:no-cmp;path=t/p/t/;entres=true/302,304,401,403/get;path-primary;prob-ent-part
      rename: param: "migration_id": *"id"|string  # action-not-parent:migration_archive
      op: load: method: *GET|string  # no-schema;ent=migration_archive
    }
  }

  entity: milestone: {
    path: "/repos/{owner}/{repo}/milestones": {  # ent:milestone:cmp=milestone;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=milestone
      op: list: method: *GET|string  # array;ent=milestone
    }
    path: "/repos/{owner}/{repo}/milestones/{milestone_number}": {  # ent:milestone:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "milestone_number": *"id"|string  # end-id:GET:parent=true/milestone:cmp=false/milestone
      op: load: method: *GET|string  # end-param;ent=milestone
      op: patch: method: *PATCH|string  # not-load;ent=milestone
      op: remove: method: *DELETE|string  # not-load;ent=milestone
    }
  }

  entity: minimal_repository: {
    path: "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:repositories;ent=minimal_repository
    }
    path: "/orgs/{org}/actions/secrets/{secret_name}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:repositories;ent=minimal_repository
    }
    path: "/orgs/{org}/actions/variables/{name}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:repositories;ent=minimal_repository
    }
    path: "/orgs/{org}/codespaces/secrets/{secret_name}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:repositories;ent=minimal_repository
    }
    path: "/orgs/{org}/dependabot/secrets/{secret_name}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:repositories;ent=minimal_repository
    }
    path: "/orgs/{org}/migrations/{migration_id}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "pat_request_id": *"personal_access_token_request_id"|string  # parent:personal_access_token_request
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/orgs/{org}/personal-access-tokens/{pat_id}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "pat_id": *"personal_access_token_id"|string  # parent:personal_access_token
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/orgs/{org}/repos": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/orgs/{org}/teams/{team_slug}/repos": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/repos/{owner}/{repo}/forks": {  # ent:minimal_repository:cmp=minimal_repository;path=p/t/;cmp-primary
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/teams/{team_id}/repos": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/user/codespaces/secrets/{secret_name}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:repositories;ent=minimal_repository
    }
    path: "/user/migrations/{migration_id}/repositories": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/user/subscriptions": {  # ent:minimal_repository:cmp=minimal_repository;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/users/{username}/repos": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
    path: "/users/{username}/subscriptions": {  # ent:minimal_repository:cmp=minimal_repository;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=minimal_repository
    }
  }

  entity: network_configuration: {
    path: "/orgs/{org}/settings/network-configurations": {  # ent:network_configuration:cmp=network_configuration;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=network_configuration
      op: list: method: *GET|string  # array-prop:network_configurations;ent=network_configuration
    }
    path: "/orgs/{org}/settings/network-configurations/{network_configuration_id}": {  # ent:network_configuration:no-cmp;path=t/p/;entres=true/204/nores;cmp-found-delete
      rename: param: "network_configuration_id": *"id"|string  # end-id:GET:parent=true/network_configuration:cmp=false/network_configuration
      op: load: method: *GET|string  # end-param;ent=network_configuration
      op: patch: method: *PATCH|string  # not-load;ent=network_configuration
      op: remove: method: *DELETE|string  # not-load;ent=network_configuration
    }
  }

  entity: network_setting: {
    path: "/orgs/{org}/settings/network-settings/{network_settings_id}": {  # ent:network_setting:cmp=network_setting;path=t/p/;path-primary
      rename: param: "network_settings_id": *"id"|string  # end-id:GET:parent=true/network_setting:cmp=false/network_setting
      op: load: method: *GET|string  # end-param;ent=network_setting
    }
  }

  entity: new: {
    path: "/repos/{owner}/{repo}/codespaces/new": {  # ent:new:cmp=simple_user;path=t/;path-over-cmp
      op: load: method: *GET|string  # not-list;ent=new
    }
  }

  entity: notification: {
    path: "/notifications": {  # ent:notification:no-cmp;path=t/;entres=false/202,205,304,401,403;ent-act
      op: update: method: *PUT|string  # not-load;ent=notification
    }
    path: "/repos/{owner}/{repo}/notifications": {  # ent:notification:no-cmp;path=p/t/;entres=false/202,205;ent-act
      op: update: method: *PUT|string  # not-load;ent=notification
    }
  }

  entity: octocat: {
    path: "/octocat": {  # ent:octocat:no-cmp;path=t/;entres=true/200/get;path-primary
      op: load: method: *GET|string  # no-schema;ent=octocat
    }
  }

  entity: oidc_custom_sub: {
    path: "/orgs/{org}/actions/oidc/customization/sub": {  # ent:oidc_custom_sub:cmp=oidc_custom_sub;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:include_claim_keys;ent=oidc_custom_sub
    }
  }

  entity: oidc_custom_sub_repo: {
    path: "/repos/{owner}/{repo}/actions/oidc/customization/sub": {  # ent:oidc_custom_sub_repo:cmp=oidc_custom_sub_repo;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:include_claim_keys;ent=oidc_custom_sub_repo
    }
  }

  entity: org: {
    path: "/orgs/{org}": {  # ent:org:no-cmp;path=t/p/;entres=false/202,403,404;ent-act
      rename: param: "org": *"id"|string  # end-id:GET:parent=false/null:cmp=false/organization_full
      op: load: method: *GET|string  # end-param;ent=org
      op: patch: method: *PATCH|string  # not-load;ent=org
      op: remove: method: *DELETE|string  # not-load;ent=org
    }
    path: "/orgs/{org}/{security_product}/{enablement}": {  # ent:org:no-cmp;path=t/p/p;entres=true/204,422/nores;path-primary
      op: create: method: *POST|string  # not-load;ent=org
    }
    path: "/user/memberships/orgs": {  # ent:org:cmp=org_membership;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=org
    }
    path: "/user/memberships/orgs/{org}": {  # ent:org:cmp=org_membership;path=t/p/;path-primary
      rename: param: "org": *"id"|string  # end-id:GET:parent=true/org:cmp=false/org_membership
      op: load: method: *GET|string  # end-param;ent=org
      op: patch: method: *PATCH|string  # not-load;ent=org
    }
    path: "/user/orgs": {  # ent:org:cmp=organization_simple;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=org
    }
    path: "/users/{username}/orgs": {  # ent:org:cmp=organization_simple;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=org
    }
  }

  entity: org_hook: {
    path: "/orgs/{org}/hooks": {  # ent:org_hook:cmp=org_hook;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=org_hook
      op: list: method: *GET|string  # array;ent=org_hook
    }
    path: "/orgs/{org}/hooks/{hook_id}": {  # ent:org_hook:cmp=org_hook;path=t/p/;cmp-primary
      rename: param: "hook_id": *"id"|string  # end-id:GET:parent=true/hook:cmp=false/org_hook
      op: load: method: *GET|string  # end-param;ent=org_hook
      op: patch: method: *PATCH|string  # not-load;ent=org_hook
    }
  }

  entity: org_membership: {
    path: "/orgs/{org}/memberships/{username}": {  # ent:org_membership:cmp=org_membership;path=t/p/;cmp-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/membership:cmp=false/org_membership
      op: load: method: *GET|string  # end-param;ent=org_membership
      op: update: method: *PUT|string  # not-load;ent=org_membership
    }
  }

  entity: org_private_registry_configuration: {
    path: "/orgs/{org}/private-registries": {  # ent:org_private_registry_configuration:cmp=org_private_registry_configuration;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:configurations;ent=org_private_registry_configuration
    }
    path: "/orgs/{org}/private-registries/{secret_name}": {  # ent:org_private_registry_configuration:cmp=org_private_registry_configuration;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=org_private_registry_configuration
    }
  }

  entity: org_private_registry_configuration_with_selected_repository: {
    path: "/orgs/{org}/private-registries": {  # ent:org_private_registry_configuration_with_selected_repository:cmp=org_private_registry_configuration_with_selected_repository;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=org_private_registry_configuration_with_selected_repository
    }
  }

  entity: org_repo_custom_property_value: {
    path: "/orgs/{org}/properties/values": {  # ent:org_repo_custom_property_value:cmp=org_repo_custom_property_value;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=org_repo_custom_property_value
    }
  }

  entity: organization: {
    path: "/organizations": {  # ent:organization:cmp=organization_simple;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=organization
    }
  }

  entity: organization_actions_secret: {
    path: "/orgs/{org}/actions/secrets": {  # ent:organization_actions_secret:cmp=organization_actions_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=organization_actions_secret
    }
    path: "/orgs/{org}/actions/secrets/{secret_name}": {  # ent:organization_actions_secret:cmp=organization_actions_secret;path=t/p/;cmp-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/organization_actions_secret
      op: load: method: *GET|string  # end-param;ent=organization_actions_secret
    }
  }

  entity: organization_actions_variable: {
    path: "/orgs/{org}/actions/variables": {  # ent:organization_actions_variable:cmp=organization_actions_variable;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:variables;ent=organization_actions_variable
    }
    path: "/orgs/{org}/actions/variables/{name}": {  # ent:organization_actions_variable:no-cmp;path=t/p/;entres=true/204/nores;cmp-found-delete
      rename: param: "name": *"id"|string  # end-id:GET:parent=true/variable:cmp=false/organization_actions_variable
      op: load: method: *GET|string  # end-param;ent=organization_actions_variable
      op: remove: method: *DELETE|string  # not-load;ent=organization_actions_variable
    }
  }

  entity: organization_dependabot_secret: {
    path: "/orgs/{org}/dependabot/secrets": {  # ent:organization_dependabot_secret:cmp=organization_dependabot_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=organization_dependabot_secret
    }
    path: "/orgs/{org}/dependabot/secrets/{secret_name}": {  # ent:organization_dependabot_secret:cmp=organization_dependabot_secret;path=t/p/;cmp-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/organization_dependabot_secret
      op: load: method: *GET|string  # end-param;ent=organization_dependabot_secret
    }
  }

  entity: organization_invitation: {
    path: "/orgs/{org}/failed_invitations": {  # ent:organization_invitation:cmp=organization_invitation;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=organization_invitation
    }
    path: "/orgs/{org}/invitations": {  # ent:organization_invitation:cmp=organization_invitation;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=organization_invitation
      op: list: method: *GET|string  # array;ent=organization_invitation
    }
    path: "/orgs/{org}/teams/{team_slug}/invitations": {  # ent:organization_invitation:cmp=organization_invitation;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=organization_invitation
    }
    path: "/teams/{team_id}/invitations": {  # ent:organization_invitation:cmp=organization_invitation;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=organization_invitation
    }
  }

  entity: organization_programmatic_access_grant: {
    path: "/orgs/{org}/personal-access-tokens": {  # ent:organization_programmatic_access_grant:cmp=organization_programmatic_access_grant;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=organization_programmatic_access_grant
    }
  }

  entity: organization_programmatic_access_grant_request: {
    path: "/orgs/{org}/personal-access-token-requests": {  # ent:organization_programmatic_access_grant_request:cmp=organization_programmatic_access_grant_request;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=organization_programmatic_access_grant_request
    }
  }

  entity: organization_role: {
    path: "/orgs/{org}/organization-roles": {  # ent:organization_role:cmp=organization_role;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:roles;ent=organization_role
    }
    path: "/orgs/{org}/organization-roles/{role_id}": {  # ent:organization_role:cmp=organization_role;path=t/p/;path-primary
      rename: param: "role_id": *"id"|string  # end-id:GET:parent=true/organization_role:cmp=false/organization_role
      op: load: method: *GET|string  # end-param;ent=organization_role
    }
  }

  entity: organization_secret_scanning_alert: {
    path: "/enterprises/{enterprise}/secret-scanning/alerts": {  # ent:organization_secret_scanning_alert:cmp=organization_secret_scanning_alert;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=organization_secret_scanning_alert
    }
    path: "/orgs/{org}/secret-scanning/alerts": {  # ent:organization_secret_scanning_alert:cmp=organization_secret_scanning_alert;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=organization_secret_scanning_alert
    }
  }

  entity: outside_collaborator: {
    path: "/orgs/{org}/outside_collaborators": {  # ent:outside_collaborator:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=outside_collaborator
    }
    path: "/orgs/{org}/outside_collaborators/{username}": {  # ent:outside_collaborator:no-cmp;path=t/p/;entres=true/202,204,403,404/nores;path-primary
      rename: param: "username": *"id"|string  # end-id:PUT:parent=true/outside_collaborator:cmp=false/undefined
      op: update: method: *PUT|string  # not-load;ent=outside_collaborator
    }
  }

  entity: package: {
    path: "/orgs/{org}/docker/conflicts": {  # ent:package:cmp=package;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=package
    }
    path: "/orgs/{org}/packages": {  # ent:package:cmp=package;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=package
    }
    path: "/orgs/{org}/packages/{package_type}/{package_name}": {  # ent:package:no-cmp;path=t/p/p;entres=true/204,401,403,404/nores;path-primary-delete
      op: load: method: *GET|string  # not-list;ent=package
      op: remove: method: *DELETE|string  # not-load;ent=package
    }
    path: "/orgs/{org}/settings/billing/packages": {  # ent:package:cmp=packages_billing_usage;path=t/;path-primary
      op: load: method: *GET|string  # not-list;ent=package
    }
    path: "/user/docker/conflicts": {  # ent:package:cmp=package;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=package
    }
    path: "/user/packages": {  # ent:package:cmp=package;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=package
    }
    path: "/user/packages/{package_type}/{package_name}": {  # ent:package:no-cmp;path=t/p/p;entres=true/204,401,403,404/nores;path-primary-delete
      op: load: method: *GET|string  # not-list;ent=package
      op: remove: method: *DELETE|string  # not-load;ent=package
    }
    path: "/users/{username}/docker/conflicts": {  # ent:package:cmp=package;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=package
    }
    path: "/users/{username}/packages": {  # ent:package:cmp=package;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=package
    }
    path: "/users/{username}/packages/{package_type}/{package_name}": {  # ent:package:no-cmp;path=t/p/p;entres=true/204,401,403,404/nores;path-primary-delete
      op: load: method: *GET|string  # not-list;ent=package
      op: remove: method: *DELETE|string  # not-load;ent=package
    }
    path: "/users/{username}/settings/billing/packages": {  # ent:package:cmp=packages_billing_usage;path=t/;path-primary
      op: load: method: *GET|string  # not-list;ent=package
    }
  }

  entity: package_version: {
    path: "/orgs/{org}/packages/{package_type}/{package_name}/versions": {  # ent:package_version:cmp=package_version;path=p/t/;cmp-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      op: list: method: *GET|string  # array;ent=package_version
    }
    path: "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}": {  # ent:package_version:cmp=package_version;path=t/p/;cmp-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # end-id:GET:parent=true/version:cmp=false/package_version
      op: load: method: *GET|string  # end-param;ent=package_version
    }
    path: "/user/packages/{package_type}/{package_name}/versions": {  # ent:package_version:cmp=package_version;path=p/t/;cmp-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      op: list: method: *GET|string  # array;ent=package_version
    }
    path: "/user/packages/{package_type}/{package_name}/versions/{package_version_id}": {  # ent:package_version:cmp=package_version;path=t/p/;cmp-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # end-id:GET:parent=true/version:cmp=false/package_version
      op: load: method: *GET|string  # end-param;ent=package_version
    }
    path: "/users/{username}/packages/{package_type}/{package_name}/versions": {  # ent:package_version:cmp=package_version;path=p/t/;cmp-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      op: list: method: *GET|string  # array;ent=package_version
    }
    path: "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}": {  # ent:package_version:cmp=package_version;path=t/p/;cmp-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # end-id:GET:parent=true/version:cmp=false/package_version
      op: load: method: *GET|string  # end-param;ent=package_version
    }
  }

  entity: page: {
    path: "/repos/{owner}/{repo}/pages": {  # ent:page:no-cmp;path=p/t/;entres=true/204,404,409,422/nores;path-primary-delete
      op: create: method: *POST|string  # not-load;ent=page
      op: load: method: *GET|string  # not-list;ent=page
      op: remove: method: *DELETE|string  # not-load;ent=page
      op: update: method: *PUT|string  # not-load;ent=page
    }
  }

  entity: page_build: {
    path: "/repos/{owner}/{repo}/pages/builds": {  # ent:page_build:cmp=page_build;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=page_build
    }
    path: "/repos/{owner}/{repo}/pages/builds/latest": {  # ent:page_build:cmp=page_build;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=page_build
    }
    path: "/repos/{owner}/{repo}/pages/builds/{build_id}": {  # ent:page_build:cmp=page_build;path=t/p/;cmp-primary
      rename: param: "build_id": *"id"|string  # end-id:GET:parent=true/build:cmp=false/page_build
      op: load: method: *GET|string  # end-param;ent=page_build
    }
  }

  entity: page_build_status: {
    path: "/repos/{owner}/{repo}/pages/builds": {  # ent:page_build_status:cmp=page_build_status;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=page_build_status
    }
  }

  entity: page_deployment: {
    path: "/repos/{owner}/{repo}/pages/deployments": {  # ent:page_deployment:cmp=page_deployment;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=page_deployment
    }
  }

  entity: pages_deployment_status: {
    path: "/repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}": {  # ent:pages_deployment_status:cmp=pages_deployment_status;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=pages_deployment_status
    }
  }

  entity: pages_health_check: {
    path: "/repos/{owner}/{repo}/pages/health": {  # ent:pages_health_check:cmp=pages_health_check;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=pages_health_check
    }
  }

  entity: participation: {
    path: "/repos/{owner}/{repo}/stats/participation": {  # ent:participation:cmp=participation_stat;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:all;array-prop:owner;ent=participation
    }
  }

  entity: pattern_configuration: {
    path: "/orgs/{org}/secret-scanning/pattern-configurations": {  # ent:pattern_configuration:no-cmp;path=t/;entres=false/200,400,403,404,409,422;ent-act
      op: patch: method: *PATCH|string  # not-load;ent=pattern_configuration
    }
  }

  entity: pending_deployment: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments": {  # ent:pending_deployment:cmp=pending_deployment;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=pending_deployment
    }
  }

  entity: permission: {
    path: "/orgs/{org}/actions/permissions": {  # ent:permission:no-cmp;path=t/;entres=true/204/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=permission
    }
    path: "/repos/{owner}/{repo}/actions/permissions": {  # ent:permission:no-cmp;path=t/;entres=true/204/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=permission
    }
  }

  entity: personal_access_token: {
    path: "/orgs/{org}/personal-access-tokens": {  # ent:personal_access_token:no-cmp;path=t/p/t/;entres=true/202,403,404,422,500/post;path-primary;prob-ent-prefix
      op: create: method: *POST|string  # not-load;ent=personal_access_token
    }
    path: "/orgs/{org}/personal-access-tokens/{pat_id}": {  # ent:personal_access_token:no-cmp;path=t/p/;entres=true/204,403,404,422,500/nores;path-primary
      rename: param: "pat_id": *"id"|string  # end-id:POST:parent=true/personal_access_token:cmp=false/undefined
      op: create: method: *POST|string  # not-load;ent=personal_access_token
    }
  }

  entity: personal_access_token_request: {
    path: "/orgs/{org}/personal-access-token-requests": {  # ent:personal_access_token_request:no-cmp;path=t/p/t/;entres=true/202,403,404,422,500/post;path-primary;prob-ent-last
      op: create: method: *POST|string  # not-load;ent=personal_access_token_request
    }
    path: "/orgs/{org}/personal-access-token-requests/{pat_request_id}": {  # ent:personal_access_token_request:no-cmp;path=t/p/;entres=true/204,403,404,422,500/nores;path-primary
      rename: param: "pat_request_id": *"id"|string  # end-id:POST:parent=true/personal_access_token_request:cmp=false/undefined
      op: create: method: *POST|string  # not-load;ent=personal_access_token_request
    }
  }

  entity: platform: {
    path: "/orgs/{org}/actions/hosted-runners/platforms": {  # ent:platform:no-cmp;path=t/;entres=true/200/get;path-primary
      op: list: method: *GET|string  # array-prop:platforms;ent=platform
    }
  }

  entity: porter_author: {
    path: "/repos/{owner}/{repo}/import/authors": {  # ent:porter_author:cmp=porter_author;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=porter_author
    }
    path: "/repos/{owner}/{repo}/import/authors/{author_id}": {  # ent:porter_author:cmp=porter_author;path=t/p/;cmp-primary
      rename: param: "author_id": *"id"|string  # end-id:PATCH:parent=true/author:cmp=false/porter_author
      op: patch: method: *PATCH|string  # not-load;ent=porter_author
    }
  }

  entity: porter_large_file: {
    path: "/repos/{owner}/{repo}/import/large_files": {  # ent:porter_large_file:cmp=porter_large_file;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=porter_large_file
    }
  }

  entity: private_registry: {
    path: "/orgs/{org}/private-registries/{secret_name}": {  # ent:private_registry:no-cmp;path=t/p/;entres=true/204,400,404/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:PATCH:parent=true/private_registry:cmp=false/undefined
      op: patch: method: *PATCH|string  # not-load;ent=private_registry
      op: remove: method: *DELETE|string  # not-load;ent=private_registry
    }
  }

  entity: private_user: {
    path: "/user": {  # ent:private_user:cmp=private_user;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=private_user
      op: patch: method: *PATCH|string  # not-load;ent=private_user
    }
    path: "/user/{account_id}": {  # ent:private_user:cmp=private_user;path=t/p/;cmp-primary
      rename: param: "account_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/private_user
      op: load: method: *GET|string  # end-param;ent=private_user
    }
    path: "/users/{username}": {  # ent:private_user:cmp=private_user;path=t/p/;cmp-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=false/null:cmp=false/private_user
      op: load: method: *GET|string  # end-param;ent=private_user
    }
  }

  entity: private_vulnerability_reporting: {
    path: "/repos/{owner}/{repo}/private-vulnerability-reporting": {  # ent:private_vulnerability_reporting:no-cmp;path=p/t/;entres=true/204,422/nores;path-primary-delete
      op: load: method: *GET|string  # not-list;ent=private_vulnerability_reporting
      op: remove: method: *DELETE|string  # not-load;ent=private_vulnerability_reporting
      op: update: method: *PUT|string  # not-load;ent=private_vulnerability_reporting
    }
  }

  entity: project: {
    path: "/orgs/{org}/projects": {  # ent:project:cmp=project;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=project
      op: list: method: *GET|string  # array;ent=project
    }
    path: "/orgs/{org}/teams/{team_slug}/projects/{project_id}": {  # ent:project:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "project_id": *"id"|string  # end-id:PUT:parent=true/project:cmp=false/undefined
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=project
      op: update: method: *PUT|string  # not-load;ent=project
    }
    path: "/projects/{project_id}": {  # ent:project:no-cmp;path=t/p/;entres=true/204,304,401,403,404,410/nores;path-primary-delete
      rename: param: "project_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/project
      op: load: method: *GET|string  # end-param;ent=project
      op: patch: method: *PATCH|string  # not-load;ent=project
      op: remove: method: *DELETE|string  # not-load;ent=project
    }
    path: "/repos/{owner}/{repo}/projects": {  # ent:project:cmp=project;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=project
      op: list: method: *GET|string  # array;ent=project
    }
    path: "/teams/{team_id}/projects/{project_id}": {  # ent:project:no-cmp;path=t/p/;entres=true/204,404,422/nores;path-primary-delete
      rename: param: "project_id": *"id"|string  # end-id:PUT:parent=true/project:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=project
      op: update: method: *PUT|string  # not-load;ent=project
    }
    path: "/user/projects": {  # ent:project:cmp=project;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=project
    }
    path: "/users/{username}/projects": {  # ent:project:cmp=project;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=project
    }
  }

  entity: project_collaborator_permission: {
    path: "/projects/{project_id}/collaborators/{username}/permission": {  # ent:project_collaborator_permission:cmp=project_collaborator_permission;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=project_collaborator_permission
    }
  }

  entity: project_column: {
    path: "/projects/columns/{column_id}": {  # ent:project_column:cmp=project_column;path=t/p/;cmp-primary
      rename: param: "column_id": *"id"|string  # end-id:GET:parent=true/column:cmp=false/project_column
      op: load: method: *GET|string  # end-param;ent=project_column
      op: patch: method: *PATCH|string  # not-load;ent=project_column
      op: remove: method: *DELETE|string  # was/delete/A:column:not-load;ent=column
    }
    path: "/projects/{project_id}/columns": {  # ent:project_column:cmp=project_column;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=project_column
      op: list: method: *GET|string  # array;ent=project_column
    }
  }

  entity: projects_v2: {
    path: "/orgs/{org}/projectsV2": {  # ent:projects_v2:cmp=projects_v2;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=projects_v2
    }
    path: "/orgs/{org}/projectsV2/{project_number}": {  # ent:projects_v2:cmp=projects_v2;path=t/p/;path-primary
      rename: param: "project_number": *"id"|string  # end-id:GET:parent=true/projects_v2:cmp=false/projects_v2
      op: load: method: *GET|string  # end-param;ent=projects_v2
    }
    path: "/users/{username}/projectsV2": {  # ent:projects_v2:cmp=projects_v2;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=projects_v2
    }
    path: "/users/{username}/projectsV2/{project_number}": {  # ent:projects_v2:cmp=projects_v2;path=t/p/;path-primary
      rename: param: "project_number": *"id"|string  # end-id:GET:parent=true/projects_v2:cmp=false/projects_v2
      op: load: method: *GET|string  # end-param;ent=projects_v2
    }
  }

  entity: projects_v2_field: {
    path: "/orgs/{org}/projectsV2/{project_number}/fields": {  # ent:projects_v2_field:cmp=projects_v2_field;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=projects_v2_field
    }
    path: "/orgs/{org}/projectsV2/{project_number}/fields/{field_id}": {  # ent:projects_v2_field:cmp=projects_v2_field;path=t/p/;cmp-primary
      rename: param: "field_id": *"id"|string  # end-id:GET:parent=true/field:cmp=false/projects_v2_field
      rename: param: "project_number": *"projects_v2_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=projects_v2_field
    }
    path: "/users/{username}/projectsV2/{project_number}/fields": {  # ent:projects_v2_field:cmp=projects_v2_field;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=projects_v2_field
    }
    path: "/users/{username}/projectsV2/{project_number}/fields/{field_id}": {  # ent:projects_v2_field:cmp=projects_v2_field;path=t/p/;cmp-primary
      rename: param: "field_id": *"id"|string  # end-id:GET:parent=true/field:cmp=false/projects_v2_field
      rename: param: "project_number": *"projects_v2_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=projects_v2_field
    }
  }

  entity: projects_v2_item_simple: {
    path: "/orgs/{org}/projectsV2/{project_number}/items": {  # ent:projects_v2_item_simple:cmp=projects_v2_item_simple;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=projects_v2_item_simple
    }
    path: "/users/{username}/projectsV2/{project_number}/items": {  # ent:projects_v2_item_simple:cmp=projects_v2_item_simple;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=projects_v2_item_simple
    }
  }

  entity: projects_v2_item_with_content: {
    path: "/orgs/{org}/projectsV2/{project_number}/items": {  # ent:projects_v2_item_with_content:cmp=projects_v2_item_with_content;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=projects_v2_item_with_content
    }
    path: "/orgs/{org}/projectsV2/{project_number}/items/{item_id}": {  # ent:projects_v2_item_with_content:cmp=projects_v2_item_with_content;path=t/p/;cmp-primary
      rename: param: "project_number": *"projects_v2_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=projects_v2_item_with_content
      op: patch: method: *PATCH|string  # not-load;ent=projects_v2_item_with_content
    }
    path: "/users/{username}/projectsV2/{project_number}/items": {  # ent:projects_v2_item_with_content:cmp=projects_v2_item_with_content;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=projects_v2_item_with_content
    }
    path: "/users/{username}/projectsV2/{project_number}/items/{item_id}": {  # ent:projects_v2_item_with_content:cmp=projects_v2_item_with_content;path=t/p/;cmp-primary
      rename: param: "project_number": *"projects_v2_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=projects_v2_item_with_content
      op: patch: method: *PATCH|string  # not-load;ent=projects_v2_item_with_content
    }
  }

  entity: protected_branch: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection": {  # ent:protected_branch:cmp=protected_branch;path=t/p/t/;cmp-primary;has-cmp
      op: update: method: *PUT|string  # not-load;ent=protected_branch
    }
  }

  entity: protected_branch_admin_enforced: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins": {  # ent:protected_branch_admin_enforced:cmp=protected_branch_admin_enforced;path=t/;cmp-primary
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=protected_branch_admin_enforced
      op: load: method: *GET|string  # not-list;ent=protected_branch_admin_enforced
      op: remove: method: *DELETE|string  # was/delete/A:enforce_admin:not-load;ent=enforce_admin
    }
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures": {  # ent:protected_branch_admin_enforced:cmp=protected_branch_admin_enforced;path=t/;cmp-primary
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=protected_branch_admin_enforced
      op: load: method: *GET|string  # not-list;ent=protected_branch_admin_enforced
      op: remove: method: *DELETE|string  # was/delete/A:required_signature:not-load;ent=required_signature
    }
  }

  entity: protected_branch_pull_request_review: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews": {  # ent:protected_branch_pull_request_review:cmp=protected_branch_pull_request_review;path=t/;cmp-primary
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: load: method: *GET|string  # not-list;ent=protected_branch_pull_request_review
      op: patch: method: *PATCH|string  # not-load;ent=protected_branch_pull_request_review
      op: remove: method: *DELETE|string  # was/delete/A:required_pull_request_review:not-load;ent=required_pull_request_review
    }
  }

  entity: protection: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection": {  # ent:protection:no-cmp;path=t/p/t/;entres=true/204,403/nores;path-primary-delete;prob-ent-prefix
      op: remove: method: *DELETE|string  # not-load;ent=protection
    }
  }

  entity: public_key: {
    path: "/orgs/{org}/private-registries/public-key": {  # ent:public_key:no-cmp;path=t/;entres=true/200,404/get;path-primary
      op: load: method: *GET|string  # not-list;ent=public_key
    }
  }

  entity: public_member: {
    path: "/orgs/{org}/public_members": {  # ent:public_member:cmp=simple_user;path=t/p/t/;path-over-cmp;has-cmp
      op: list: method: *GET|string  # array;ent=public_member
    }
    path: "/orgs/{org}/public_members/{username}": {  # ent:public_member:no-cmp;path=t/p/;entres=true/204,403/nores;path-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/public_member:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=public_member
      op: update: method: *PUT|string  # not-load;ent=public_member
    }
  }

  entity: pull: {
    path: "/repos/{owner}/{repo}/commits/{commit_sha}/pulls": {  # ent:pull:cmp=pull_request_simple;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=pull
    }
    path: "/repos/{owner}/{repo}/pulls": {  # ent:pull:cmp=pull;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=pull
      op: list: method: *GET|string  # array;ent=pull
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}": {  # ent:pull:cmp=pull_request;path=t/p/;path-primary
      rename: param: "pull_number": *"id"|string  # end-id:GET:parent=true/pull:cmp=false/pull_request
      op: load: method: *GET|string  # end-param;ent=pull
      op: patch: method: *PATCH|string  # not-load;ent=pull
    }
  }

  entity: pull_merge: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/merge": {  # ent:pull_merge:no-cmp;path=t/p/t/;entres=true/204,404/nores;path-primary;prob-ent-part
      op: load: method: *GET|string  # no-schema;ent=pull_merge
    }
  }

  entity: pull_request_merge_result: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/merge": {  # ent:pull_request_merge_result:cmp=pull_request_merge_result;path=t/p/t/;cmp-primary;has-cmp
      op: update: method: *PUT|string  # not-load;ent=pull_request_merge_result
    }
  }

  entity: pull_request_review: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/reviews": {  # ent:pull_request_review:cmp=pull_request_review;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=pull_request_review
      op: list: method: *GET|string  # array;ent=pull_request_review
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}": {  # ent:pull_request_review:cmp=pull_request_review;path=t/p/;cmp-primary
      rename: param: "pull_number": *"pull_id"|string  # not-primary
      rename: param: "review_id": *"id"|string  # end-id:GET:parent=true/review:cmp=false/pull_request_review
      op: load: method: *GET|string  # end-param;ent=pull_request_review
      op: remove: method: *DELETE|string  # not-load;ent=pull_request_review
      op: update: method: *PUT|string  # not-load;ent=pull_request_review
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals": {  # ent:pull_request_review:cmp=pull_request_review;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "pull_number": *"pull_id"|string  # not-primary
      op: update: method: *PUT|string  # not-load;ent=pull_request_review
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events": {  # ent:pull_request_review:cmp=pull_request_review;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "pull_number": *"pull_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=pull_request_review
    }
  }

  entity: pull_request_review_comment: {
    path: "/repos/{owner}/{repo}/pulls/comments": {  # ent:pull_request_review_comment:cmp=pull_request_review_comment;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=pull_request_review_comment
    }
    path: "/repos/{owner}/{repo}/pulls/comments/{comment_id}": {  # ent:pull_request_review_comment:cmp=pull_request_review_comment;path=t/p/;cmp-primary
      rename: param: "comment_id": *"id"|string  # end-id:GET:parent=true/comment:cmp=false/pull_request_review_comment
      op: load: method: *GET|string  # end-param;ent=pull_request_review_comment
      op: patch: method: *PATCH|string  # not-load;ent=pull_request_review_comment
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/comments": {  # ent:pull_request_review_comment:cmp=pull_request_review_comment;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=pull_request_review_comment
      op: list: method: *GET|string  # array;ent=pull_request_review_comment
    }
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies": {  # ent:pull_request_review_comment:cmp=pull_request_review_comment;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "pull_number": *"pull_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=pull_request_review_comment
    }
  }

  entity: pull_request_review_request: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers": {  # ent:pull_request_review_request:cmp=pull_request_review_request;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array-prop:teams;array-prop:users;ent=pull_request_review_request
    }
  }

  entity: pull_request_simple: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers": {  # ent:pull_request_simple:cmp=pull_request_simple;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=pull_request_simple
      op: remove: method: *DELETE|string  # not-load;ent=pull_request_simple
    }
  }

  entity: pull_update_branch: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch": {  # ent:pull_update_branch:no-cmp;path=t/p/t/;entres=false/202,403,422;part-ent
      op: update: method: *PUT|string  # not-load;ent=pull_update_branch
    }
  }

  entity: rate_limit: {
    path: "/rate_limit": {  # ent:rate_limit:cmp=rate_limit_overview;path=t/;path-primary
      op: load: method: *GET|string  # not-list;ent=rate_limit
    }
  }

  entity: raw: {
    path: "/markdown/raw": {  # ent:raw:no-cmp;path=t/;entres=false/200,304;ent-act
      op: create: method: *POST|string  # not-load;ent=raw
    }
  }

  entity: reaction: {
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}": {  # ent:reaction:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "comment_number": *"comment_id"|string  # not-primary
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      rename: param: "reaction_id": *"id"|string  # end-id:DELETE:parent=true/reaction:cmp=false/undefined
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=reaction
    }
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}": {  # ent:reaction:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      rename: param: "reaction_id": *"id"|string  # end-id:DELETE:parent=true/reaction:cmp=false/undefined
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=reaction
    }
    path: "/repos/{owner}/{repo}/comments/{comment_id}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}": {  # ent:reaction:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "reaction_id": *"id"|string  # end-id:DELETE:parent=true/reaction:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=reaction
    }
    path: "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}": {  # ent:reaction:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "reaction_id": *"id"|string  # end-id:DELETE:parent=true/reaction:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=reaction
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}": {  # ent:reaction:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "issue_number": *"issue_id"|string  # not-primary
      rename: param: "reaction_id": *"id"|string  # end-id:DELETE:parent=true/reaction:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=reaction
    }
    path: "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}": {  # ent:reaction:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "reaction_id": *"id"|string  # end-id:DELETE:parent=true/reaction:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=reaction
    }
    path: "/repos/{owner}/{repo}/releases/{release_id}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}": {  # ent:reaction:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "reaction_id": *"id"|string  # end-id:DELETE:parent=true/reaction:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=reaction
    }
    path: "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
    path: "/teams/{team_id}/discussions/{discussion_number}/reactions": {  # ent:reaction:cmp=reaction;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=reaction
      op: list: method: *GET|string  # array;ent=reaction
    }
  }

  entity: referrer: {
    path: "/repos/{owner}/{repo}/traffic/popular/referrers": {  # ent:referrer:cmp=referrer_traffic;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=referrer
    }
  }

  entity: release: {
    path: "/repos/{owner}/{repo}/releases": {  # ent:release:cmp=release;path=p/t/;path-primary
      op: create: method: *POST|string  # not-load;ent=release
      op: list: method: *GET|string  # array;ent=release
    }
    path: "/repos/{owner}/{repo}/releases/latest": {  # ent:release:cmp=release;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:assets;ent=release
    }
    path: "/repos/{owner}/{repo}/releases/tags/{tag}": {  # ent:release:cmp=release;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=release
    }
    path: "/repos/{owner}/{repo}/releases/{release_id}": {  # ent:release:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "release_id": *"id"|string  # end-id:GET:parent=true/release:cmp=false/release
      op: load: method: *GET|string  # end-param;ent=release
      op: patch: method: *PATCH|string  # not-load;ent=release
      op: remove: method: *DELETE|string  # not-load;ent=release
    }
  }

  entity: release_asset: {
    path: "/repos/{owner}/{repo}/releases/assets/{asset_id}": {  # ent:release_asset:cmp=release_asset;path=t/p/;cmp-primary
      rename: param: "asset_id": *"id"|string  # end-id:GET:parent=true/asset:cmp=false/release_asset
      op: load: method: *GET|string  # end-param;ent=release_asset
      op: patch: method: *PATCH|string  # not-load;ent=release_asset
      op: remove: method: *DELETE|string  # was/delete/A:asset:not-load;ent=asset
    }
    path: "/repos/{owner}/{repo}/releases/{release_id}/assets": {  # ent:release_asset:cmp=release_asset;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "release_id": *"id"|string  # action-not-parent:release_asset
      op: create: method: *POST|string  # not-load;ent=release_asset
      op: list: method: *GET|string  # array;ent=release_asset
    }
  }

  entity: release_notes_content: {
    path: "/repos/{owner}/{repo}/releases/generate-notes": {  # ent:release_notes_content:cmp=release_notes_content;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=release_notes_content
    }
  }

  entity: remove: {
    path: "/enterprises/{enterprise}/teams/{enterprise-team}/memberships/remove": {  # ent:remove:cmp=simple_user;path=t/;path-over-cmp
      rename: param: "enterprise-team": *"team_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=remove
    }
  }

  entity: repo: {
    path: "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {  # ent:repo:no-cmp;path=t/p/p;entres=true/204/nores;path-primary-delete
      op: remove: method: *DELETE|string  # not-load;ent=repo
      op: update: method: *PUT|string  # not-load;ent=repo
    }
    path: "/repos/{owner}/{repo}": {  # ent:repo:no-cmp;path=t/p/p;entres=true/204,307,403,404,409/nores;path-primary-delete
      op: remove: method: *DELETE|string  # not-load;ent=repo
    }
    path: "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}": {  # ent:repo:no-cmp;path=t/p/p;entres=true/302,410/get;path-primary
      op: load: method: *GET|string  # no-schema;ent=repo
    }
    path: "/teams/{team_id}/repos/{owner}/{repo}": {  # ent:repo:no-cmp;path=t/p/p;entres=true/204/nores;path-primary-delete
      op: remove: method: *DELETE|string  # not-load;ent=repo
      op: update: method: *PUT|string  # not-load;ent=repo
    }
    path: "/user/repos": {  # ent:repo:cmp=repository;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=repo
    }
  }

  entity: repo_codespaces_secret: {
    path: "/repos/{owner}/{repo}/codespaces/secrets": {  # ent:repo_codespaces_secret:cmp=repo_codespaces_secret;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:secrets;ent=repo_codespaces_secret
    }
    path: "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}": {  # ent:repo_codespaces_secret:cmp=repo_codespaces_secret;path=t/p/;cmp-primary
      rename: param: "secret_name": *"id"|string  # end-id:GET:parent=true/secret:cmp=false/repo_codespaces_secret
      op: load: method: *GET|string  # end-param;ent=repo_codespaces_secret
    }
  }

  entity: repo_search_result_item: {
    path: "/search/repositories": {  # ent:repo_search_result_item:cmp=repo_search_result_item;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:items;ent=repo_search_result_item
    }
  }

  entity: repository: {
    path: "/installation/repositories": {  # ent:repository:cmp=repository;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:repositories;ent=repository
    }
    path: "/orgs/{org}/actions/permissions/repositories": {  # ent:repository:no-cmp;path=t/;entres=true/204/nores;path-primary
      op: list: method: *GET|string  # array-prop:repositories;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/permissions/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/permissions/self-hosted-runners/repositories": {  # ent:repository:no-cmp;path=t/;entres=true/204,403,404,422/nores;path-primary
      op: list: method: *GET|string  # array-prop:repositories;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/permissions/self-hosted-runners/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204,403,404,409,422/nores;path-primary-delete
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories": {  # ent:repository:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-last
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/secrets/{secret_name}/repositories": {  # ent:repository:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-last
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204,409/nores;path-primary-delete
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      rename: param: "secret_name": *"secret_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/variables/{name}/repositories": {  # ent:repository:no-cmp;path=t/p/t/;entres=true/204,409/nores;path-primary;prob-ent-last
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204,409/nores;path-primary-delete
      rename: param: "name": *"variable_id"|string  # not-primary
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/codespaces/secrets/{secret_name}/repositories": {  # ent:repository:no-cmp;path=t/p/t/;entres=true/204,404,409/nores;path-primary;prob-ent-last
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204,404,409,422/nores;path-primary-delete
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      rename: param: "secret_name": *"secret_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/dependabot/secrets/{secret_name}/repositories": {  # ent:repository:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-last
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204,409/nores;path-primary-delete
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      rename: param: "secret_name": *"secret_id"|string  # not-primary
      op: remove: method: *DELETE|string  # not-load;ent=repository
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/user/codespaces/secrets/{secret_name}/repositories": {  # ent:repository:no-cmp;path=t/p/t/;entres=true/204,401,403,404,500/nores;path-primary;prob-ent-last
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204,401,403,404,500/nores;path-primary
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      rename: param: "secret_name": *"secret_id"|string  # not-primary
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/user/installations/{installation_id}/repositories": {  # ent:repository:cmp=repository;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array-prop:repositories;ent=repository
    }
    path: "/user/installations/{installation_id}/repositories/{repository_id}": {  # ent:repository:no-cmp;path=t/p/;entres=true/204,304,403,404/nores;path-primary
      rename: param: "repository_id": *"id"|string  # end-id:PUT:parent=true/repository:cmp=false/undefined
      op: update: method: *PUT|string  # not-load;ent=repository
    }
    path: "/user/starred": {  # ent:repository:cmp=repository;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=repository
    }
  }

  entity: repository_access: {
    path: "/organizations/{org}/dependabot/repository-access": {  # ent:repository_access:no-cmp;path=t/;entres=true/204,403,404/nores;path-primary
      op: patch: method: *PATCH|string  # not-load;ent=repository_access
    }
  }

  entity: repository_advisory: {
    path: "/orgs/{org}/security-advisories": {  # ent:repository_advisory:cmp=repository_advisory;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=repository_advisory
    }
    path: "/repos/{owner}/{repo}/security-advisories": {  # ent:repository_advisory:cmp=repository_advisory;path=p/t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=repository_advisory
      op: list: method: *GET|string  # array;ent=repository_advisory
    }
    path: "/repos/{owner}/{repo}/security-advisories/reports": {  # ent:repository_advisory:cmp=repository_advisory;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=repository_advisory
    }
    path: "/repos/{owner}/{repo}/security-advisories/{ghsa_id}": {  # ent:repository_advisory:cmp=repository_advisory;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=repository_advisory
      op: patch: method: *PATCH|string  # not-load;ent=repository_advisory
    }
  }

  entity: repository_collaborator_permission: {
    path: "/repos/{owner}/{repo}/collaborators/{username}/permission": {  # ent:repository_collaborator_permission:cmp=repository_collaborator_permission;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=repository_collaborator_permission
    }
  }

  entity: repository_invitation: {
    path: "/repos/{owner}/{repo}/collaborators/{username}": {  # ent:repository_invitation:cmp=repository_invitation;path=t/p/;cmp-primary
      op: update: method: *PUT|string  # not-load;ent=repository_invitation
    }
    path: "/repos/{owner}/{repo}/invitations": {  # ent:repository_invitation:cmp=repository_invitation;path=p/t/;cmp-primary
      op: list: method: *GET|string  # array;ent=repository_invitation
    }
    path: "/repos/{owner}/{repo}/invitations/{invitation_id}": {  # ent:repository_invitation:cmp=repository_invitation;path=t/p/;cmp-primary
      rename: param: "invitation_id": *"id"|string  # end-id:PATCH:parent=true/invitation:cmp=false/repository_invitation
      op: patch: method: *PATCH|string  # not-load;ent=repository_invitation
    }
    path: "/user/repository_invitations": {  # ent:repository_invitation:cmp=repository_invitation;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=repository_invitation
    }
    path: "/user/repository_invitations/{invitation_id}": {  # ent:repository_invitation:no-cmp;path=t/p/;entres=true/204,304,403,404,409/nores;path-primary
      rename: param: "invitation_id": *"id"|string  # end-id:PATCH:parent=true/repository_invitation:cmp=false/undefined
      op: patch: method: *PATCH|string  # not-load;ent=repository_invitation
    }
  }

  entity: repository_rule_detailed: {
    path: "/repos/{owner}/{repo}/rules/branches/{branch}": {  # ent:repository_rule_detailed:cmp=repository_rule_detailed;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=repository_rule_detailed
    }
  }

  entity: repository_ruleset: {
    path: "/orgs/{org}/rulesets": {  # ent:repository_ruleset:cmp=repository_ruleset;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=repository_ruleset
      op: list: method: *GET|string  # array;ent=repository_ruleset
    }
    path: "/orgs/{org}/rulesets/{ruleset_id}": {  # ent:repository_ruleset:cmp=repository_ruleset;path=t/p/;cmp-primary
      rename: param: "ruleset_id": *"id"|string  # end-id:GET:parent=true/ruleset:cmp=false/repository_ruleset
      op: load: method: *GET|string  # end-param;ent=repository_ruleset
      op: update: method: *PUT|string  # not-load;ent=repository_ruleset
    }
    path: "/repos/{owner}/{repo}/rulesets": {  # ent:repository_ruleset:cmp=repository_ruleset;path=p/t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=repository_ruleset
      op: list: method: *GET|string  # array;ent=repository_ruleset
    }
    path: "/repos/{owner}/{repo}/rulesets/{ruleset_id}": {  # ent:repository_ruleset:cmp=repository_ruleset;path=t/p/;cmp-primary
      rename: param: "ruleset_id": *"id"|string  # end-id:GET:parent=true/ruleset:cmp=false/repository_ruleset
      op: load: method: *GET|string  # end-param;ent=repository_ruleset
      op: update: method: *PUT|string  # not-load;ent=repository_ruleset
    }
  }

  entity: repository_subscription: {
    path: "/repos/{owner}/{repo}/subscription": {  # ent:repository_subscription:cmp=repository_subscription;path=p/t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=repository_subscription
      op: remove: method: *DELETE|string  # was/delete/A:subscription:not-load;ent=subscription
      op: update: method: *PUT|string  # not-load;ent=repository_subscription
    }
  }

  entity: restore: {
    path: "/orgs/{org}/packages/{package_type}/{package_name}/restore": {  # ent:restore:no-cmp;path=p/t/;entres=true/204,401,403,404/nores;path-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=restore
    }
    path: "/user/packages/{package_type}/{package_name}/restore": {  # ent:restore:no-cmp;path=p/t/;entres=true/204,401,403,404/nores;path-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=restore
    }
    path: "/users/{username}/packages/{package_type}/{package_name}/restore": {  # ent:restore:no-cmp;path=p/t/;entres=true/204,401,403,404/nores;path-primary
      rename: param: "package_type": *"package_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=restore
    }
  }

  entity: review_comment: {
    path: "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments": {  # ent:review_comment:cmp=review_comment;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "pull_number": *"pull_id"|string  # not-primary
      rename: param: "review_id": *"id"|string  # action-not-parent:review_comment
      op: list: method: *GET|string  # array;ent=review_comment
    }
  }

  entity: revoke: {
    path: "/credentials/revoke": {  # ent:revoke:no-cmp;path=t/;entres=false/202,422,500;ent-act
      op: create: method: *POST|string  # not-load;ent=revoke
    }
  }

  entity: rule_suite: {
    path: "/orgs/{org}/rulesets/rule-suites": {  # ent:rule_suite:cmp=rule_suite;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=rule_suite
    }
    path: "/orgs/{org}/rulesets/rule-suites/{rule_suite_id}": {  # ent:rule_suite:cmp=rule_suite;path=t/p/;path-primary
      rename: param: "rule_suite_id": *"id"|string  # end-id:GET:parent=true/rule_suite:cmp=false/rule_suite
      op: load: method: *GET|string  # end-param;ent=rule_suite
    }
    path: "/repos/{owner}/{repo}/rulesets/rule-suites": {  # ent:rule_suite:cmp=rule_suite;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=rule_suite
    }
    path: "/repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}": {  # ent:rule_suite:cmp=rule_suite;path=t/p/;path-primary
      rename: param: "rule_suite_id": *"id"|string  # end-id:GET:parent=true/rule_suite:cmp=false/rule_suite
      op: load: method: *GET|string  # end-param;ent=rule_suite
    }
  }

  entity: ruleset: {
    path: "/orgs/{org}/rulesets/{ruleset_id}": {  # ent:ruleset:no-cmp;path=t/p/;entres=true/204,404,500/nores;path-primary-delete
      rename: param: "ruleset_id": *"id"|string  # end-id:DELETE:parent=true/ruleset:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=ruleset
    }
    path: "/repos/{owner}/{repo}/rulesets/{ruleset_id}": {  # ent:ruleset:no-cmp;path=t/p/;entres=true/204,404,500/nores;path-primary-delete
      rename: param: "ruleset_id": *"id"|string  # end-id:DELETE:parent=true/ruleset:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=ruleset
    }
  }

  entity: ruleset_version: {
    path: "/orgs/{org}/rulesets/{ruleset_id}/history": {  # ent:ruleset_version:cmp=ruleset_version;path=t/p/t/;cmp-primary;has-cmp
      action: "history": kind: *"`$BOOLEAN`"|top  # ent:ruleset_version:action-not-parent:ruleset_id:GET
      rename: param: "ruleset_id": *"id"|string  # action-not-parent:ruleset_version
      op: list: method: *GET|string  # array;ent=ruleset_version
    }
    path: "/repos/{owner}/{repo}/rulesets/{ruleset_id}/history": {  # ent:ruleset_version:cmp=ruleset_version;path=t/p/t/;cmp-primary;has-cmp
      action: "history": kind: *"`$BOOLEAN`"|top  # ent:ruleset_version:action-not-parent:ruleset_id:GET
      rename: param: "ruleset_id": *"id"|string  # action-not-parent:ruleset_version
      op: list: method: *GET|string  # array;ent=ruleset_version
    }
  }

  entity: ruleset_version_with_state: {
    path: "/orgs/{org}/rulesets/{ruleset_id}/history/{version_id}": {  # ent:ruleset_version_with_state:cmp=ruleset_version_with_state;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=ruleset_version_with_state
    }
    path: "/repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}": {  # ent:ruleset_version_with_state:cmp=ruleset_version_with_state;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=ruleset_version_with_state
    }
  }

  entity: run_cancel: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/cancel": {  # ent:run_cancel:no-cmp;path=t/p/t/;entres=false/202,409;part-ent
      rename: param: "run_id": *"id"|string  # action-not-parent:run_cancel
      op: create: method: *POST|string  # not-load;ent=run_cancel
    }
  }

  entity: run_force_cancel: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel": {  # ent:run_force_cancel:no-cmp;path=t/p/t/;entres=false/202,409;part-ent
      rename: param: "run_id": *"id"|string  # action-not-parent:run_force_cancel
      op: create: method: *POST|string  # not-load;ent=run_force_cancel
    }
  }

  entity: run_log: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/logs": {  # ent:run_log:no-cmp;path=t/p/t/;entres=true/302/get;path-primary;prob-ent-part
      rename: param: "run_id": *"id"|string  # action-not-parent:run_log
      op: load: method: *GET|string  # no-schema;ent=run_log
    }
  }

  entity: runner: {
    path: "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners": {  # ent:runner:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-last
      op: list: method: *GET|string  # array-prop:runners;ent=runner
      op: update: method: *PUT|string  # not-load;ent=runner
    }
    path: "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}": {  # ent:runner:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "runner_id": *"id"|string  # end-id:PUT:parent=true/runner:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=runner
      op: update: method: *PUT|string  # not-load;ent=runner
    }
    path: "/orgs/{org}/actions/runners": {  # ent:runner:cmp=runner;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:runners;ent=runner
    }
    path: "/orgs/{org}/actions/runners/generate-jitconfig": {  # ent:runner:cmp=runner;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=runner
    }
    path: "/orgs/{org}/actions/runners/{runner_id}": {  # ent:runner:no-cmp;path=t/p/;entres=true/204,422/nores;path-primary-delete
      rename: param: "runner_id": *"id"|string  # end-id:GET:parent=true/runner:cmp=false/runner
      op: load: method: *GET|string  # end-param;ent=runner
      op: remove: method: *DELETE|string  # not-load;ent=runner
    }
    path: "/repos/{owner}/{repo}/actions/runners": {  # ent:runner:cmp=runner;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:runners;ent=runner
    }
    path: "/repos/{owner}/{repo}/actions/runners/generate-jitconfig": {  # ent:runner:cmp=runner;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=runner
    }
    path: "/repos/{owner}/{repo}/actions/runners/{runner_id}": {  # ent:runner:no-cmp;path=t/p/;entres=true/204,422/nores;path-primary-delete
      rename: param: "runner_id": *"id"|string  # end-id:GET:parent=true/runner:cmp=false/runner
      op: load: method: *GET|string  # end-param;ent=runner
      op: remove: method: *DELETE|string  # not-load;ent=runner
    }
  }

  entity: runner_application: {
    path: "/orgs/{org}/actions/runners/downloads": {  # ent:runner_application:cmp=runner_application;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=runner_application
    }
    path: "/repos/{owner}/{repo}/actions/runners/downloads": {  # ent:runner_application:cmp=runner_application;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=runner_application
    }
  }

  entity: runner_group: {
    path: "/orgs/{org}/actions/runner-groups": {  # ent:runner_group:cmp=runner_groups_org;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=runner_group
      op: list: method: *GET|string  # array-prop:runner_groups;ent=runner_group
    }
    path: "/orgs/{org}/actions/runner-groups/{runner_group_id}": {  # ent:runner_group:cmp=runner_groups_org;path=t/p/;path-primary
      rename: param: "runner_group_id": *"id"|string  # end-id:GET:parent=true/runner_group:cmp=false/runner_groups_org
      op: load: method: *GET|string  # end-param;ent=runner_group
      op: patch: method: *PATCH|string  # not-load;ent=runner_group
      op: remove: method: *DELETE|string  # was/delete/A:runner_groups_org:not-load;ent=runner_groups_org
    }
  }

  entity: runner_label: {
    path: "/orgs/{org}/actions/runners/{runner_id}/labels": {  # ent:runner_label:cmp=runner_label;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "runner_id": *"id"|string  # action-not-parent:runner_label
      op: create: method: *POST|string  # not-load;ent=runner_label
      op: list: method: *GET|string  # array-prop:labels;ent=runner_label
      op: remove: method: *DELETE|string  # not-load;ent=runner_label
      op: update: method: *PUT|string  # not-load;ent=runner_label
    }
    path: "/orgs/{org}/actions/runners/{runner_id}/labels/{name}": {  # ent:runner_label:cmp=runner_label;path=t/p/;cmp-primary
      rename: param: "name": *"id"|string  # end-id:DELETE:parent=true/label:cmp=false/runner_label
      op: remove: method: *DELETE|string  # not-load;ent=runner_label
    }
    path: "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels": {  # ent:runner_label:cmp=runner_label;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "runner_id": *"id"|string  # action-not-parent:runner_label
      op: create: method: *POST|string  # not-load;ent=runner_label
      op: list: method: *GET|string  # array-prop:labels;ent=runner_label
      op: remove: method: *DELETE|string  # not-load;ent=runner_label
      op: update: method: *PUT|string  # not-load;ent=runner_label
    }
    path: "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}": {  # ent:runner_label:cmp=runner_label;path=t/p/;cmp-primary
      rename: param: "name": *"id"|string  # end-id:DELETE:parent=true/label:cmp=false/runner_label
      op: remove: method: *DELETE|string  # not-load;ent=runner_label
    }
  }

  entity: sarif: {
    path: "/repos/{owner}/{repo}/code-scanning/sarifs": {  # ent:sarif:no-cmp;path=t/;entres=false/202,400,403,404,413,503;ent-act
      op: create: method: *POST|string  # not-load;ent=sarif
    }
  }

  entity: secret: {
    path: "/orgs/{org}/actions/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
    path: "/orgs/{org}/codespaces/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204,404/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
    path: "/orgs/{org}/dependabot/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
    path: "/repos/{owner}/{repo}/actions/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
    path: "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
    path: "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
    path: "/user/codespaces/secrets/{secret_name}": {  # ent:secret:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "secret_name": *"id"|string  # end-id:DELETE:parent=true/secret:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=secret
    }
  }

  entity: secret_scanning_alert: {
    path: "/repos/{owner}/{repo}/secret-scanning/alerts": {  # ent:secret_scanning_alert:cmp=secret_scanning_alert;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=secret_scanning_alert
    }
    path: "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}": {  # ent:secret_scanning_alert:cmp=secret_scanning_alert;path=t/p/;cmp-primary
      rename: param: "alert_number": *"id"|string  # end-id:GET:parent=true/alert:cmp=false/secret_scanning_alert
      op: load: method: *GET|string  # end-param;ent=secret_scanning_alert
      op: patch: method: *PATCH|string  # not-load;ent=secret_scanning_alert
    }
  }

  entity: secret_scanning_location: {
    path: "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations": {  # ent:secret_scanning_location:cmp=secret_scanning_location;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=secret_scanning_location
    }
  }

  entity: secret_scanning_pattern_configuration: {
    path: "/orgs/{org}/secret-scanning/pattern-configurations": {  # ent:secret_scanning_pattern_configuration:cmp=secret_scanning_pattern_configuration;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:custom_pattern_overrides;array-prop:provider_pattern_overrides;ent=secret_scanning_pattern_configuration
    }
  }

  entity: secret_scanning_push_protection_bypass: {
    path: "/repos/{owner}/{repo}/secret-scanning/push-protection-bypasses": {  # ent:secret_scanning_push_protection_bypass:cmp=secret_scanning_push_protection_bypass;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=secret_scanning_push_protection_bypass
    }
  }

  entity: secret_scanning_scan_history: {
    path: "/repos/{owner}/{repo}/secret-scanning/scan-history": {  # ent:secret_scanning_scan_history:cmp=secret_scanning_scan_history;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:backfill_scans;array-prop:custom_pattern_backfill_scans;array-prop:incremental_scans;array-prop:pattern_update_scans;ent=secret_scanning_scan_history
    }
  }

  entity: security_advisory_cve: {
    path: "/repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve": {  # ent:security_advisory_cve:no-cmp;path=t/p/t/;entres=false/202,400,403,404,422;part-ent
      rename: param: "ghsa_id": *"id"|string  # action-not-parent:security_advisory_cve
      op: create: method: *POST|string  # not-load;ent=security_advisory_cve
    }
  }

  entity: selected_action: {
    path: "/orgs/{org}/actions/permissions/selected-actions": {  # ent:selected_action:no-cmp;path=t/;entres=true/204/nores;path-primary
      op: list: method: *GET|string  # array-prop:patterns_allowed;ent=selected_action
      op: update: method: *PUT|string  # not-load;ent=selected_action
    }
    path: "/repos/{owner}/{repo}/actions/permissions/selected-actions": {  # ent:selected_action:no-cmp;path=t/;entres=true/204/nores;path-primary
      op: list: method: *GET|string  # array-prop:patterns_allowed;ent=selected_action
      op: update: method: *PUT|string  # not-load;ent=selected_action
    }
  }

  entity: selected_team: {
    path: "/orgs/{org}/copilot/billing/selected_teams": {  # ent:selected_team:no-cmp;path=t/;entres=false/200,401,403,404,422,500;ent-act
      op: create: method: *POST|string  # not-load;ent=selected_team
      op: remove: method: *DELETE|string  # not-load;ent=selected_team
    }
  }

  entity: selected_user: {
    path: "/orgs/{org}/codespaces/access/selected_users": {  # ent:selected_user:no-cmp;path=t/;entres=true/204,304,400,404,422,500/nores;path-primary-delete
      op: create: method: *POST|string  # not-load;ent=selected_user
      op: remove: method: *DELETE|string  # not-load;ent=selected_user
    }
    path: "/orgs/{org}/copilot/billing/selected_users": {  # ent:selected_user:no-cmp;path=t/;entres=false/200,401,403,404,422,500;ent-act
      op: create: method: *POST|string  # not-load;ent=selected_user
      op: remove: method: *DELETE|string  # not-load;ent=selected_user
    }
  }

  entity: self_hosted_runner: {
    path: "/orgs/{org}/actions/permissions/self-hosted-runners": {  # ent:self_hosted_runner:no-cmp;path=t/;entres=true/204,403,404,409,422/nores;path-primary
      op: load: method: *GET|string  # not-list;ent=self_hosted_runner
      op: update: method: *PUT|string  # not-load;ent=self_hosted_runner
    }
  }

  entity: short_blob: {
    path: "/repos/{owner}/{repo}/git/blobs": {  # ent:short_blob:cmp=short_blob;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=short_blob
    }
  }

  entity: short_branch: {
    path: "/repos/{owner}/{repo}/branches": {  # ent:short_branch:cmp=short_branch;path=p/t/;cmp-primary
      op: list: method: *GET|string  # array;ent=short_branch
    }
  }

  entity: simple_classroom: {
    path: "/classrooms": {  # ent:simple_classroom:cmp=simple_classroom;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=simple_classroom
    }
  }

  entity: simple_classroom_assignment: {
    path: "/classrooms/{classroom_id}/assignments": {  # ent:simple_classroom_assignment:cmp=simple_classroom_assignment;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=simple_classroom_assignment
    }
  }

  entity: snapshot: {
    path: "/repos/{owner}/{repo}/dependency-graph/snapshots": {  # ent:snapshot:no-cmp;path=t/;entres=false/201;ent-act
      op: create: method: *POST|string  # not-load;ent=snapshot
    }
  }

  entity: social_account: {
    path: "/user/social_accounts": {  # ent:social_account:no-cmp;path=t/;entres=true/204,304,401,403,404,422/nores;path-primary-delete
      op: create: method: *POST|string  # not-load;ent=social_account
      op: list: method: *GET|string  # array;ent=social_account
      op: remove: method: *DELETE|string  # not-load;ent=social_account
    }
    path: "/users/{username}/social_accounts": {  # ent:social_account:cmp=social_account;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=social_account
    }
  }

  entity: ssh_signing_key: {
    path: "/user/ssh_signing_keys": {  # ent:ssh_signing_key:cmp=ssh_signing_key;path=t/;path-primary
      op: create: method: *POST|string  # not-load;ent=ssh_signing_key
      op: list: method: *GET|string  # array;ent=ssh_signing_key
    }
    path: "/user/ssh_signing_keys/{ssh_signing_key_id}": {  # ent:ssh_signing_key:no-cmp;path=t/p/;entres=true/204,304,401,403,404/nores;path-primary-delete
      rename: param: "ssh_signing_key_id": *"id"|string  # end-id:GET:parent=true/ssh_signing_key:cmp=false/ssh_signing_key
      op: load: method: *GET|string  # end-param;ent=ssh_signing_key
      op: remove: method: *DELETE|string  # not-load;ent=ssh_signing_key
    }
    path: "/users/{username}/ssh_signing_keys": {  # ent:ssh_signing_key:cmp=ssh_signing_key;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=ssh_signing_key
    }
  }

  entity: stargazer: {
    path: "/repos/{owner}/{repo}/stargazers": {  # ent:stargazer:cmp=stargazer;path=p/t/;path-primary
      op: load: method: *GET|string  # not-list;ent=stargazer
    }
  }

  entity: starred: {
    path: "/user/starred/{owner}/{repo}": {  # ent:starred:no-cmp;path=t/p/p;entres=true/204,304,401,403,404/nores;path-primary
      op: load: method: *GET|string  # no-schema;ent=starred
      op: update: method: *PUT|string  # not-load;ent=starred
    }
    path: "/users/{username}/starred": {  # ent:starred:cmp=starred_repository;path=t/p/t/;path-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=starred
    }
  }

  entity: status: {
    path: "/repos/{owner}/{repo}/commits/{ref}/statuses": {  # ent:status:cmp=status;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=status
    }
    path: "/repos/{owner}/{repo}/statuses/{sha}": {  # ent:status:cmp=status;path=t/p/;path-primary
      rename: param: "sha": *"id"|string  # end-id:POST:parent=true/status:cmp=false/status
      op: create: method: *POST|string  # not-load;ent=status
    }
  }

  entity: status_check_policy: {
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks": {  # ent:status_check_policy:cmp=status_check_policy;path=t/;cmp-primary
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: list: method: *GET|string  # array-prop:checks;array-prop:contexts;ent=status_check_policy
      op: patch: method: *PATCH|string  # not-load;ent=status_check_policy
      op: remove: method: *DELETE|string  # was/delete/A:required_status_check:not-load;ent=required_status_check
    }
  }

  entity: storage_record: {
    path: "/orgs/{org}/artifacts/metadata/storage-record": {  # ent:storage_record:no-cmp;path=t/;entres=false/200;ent-act
      op: create: method: *POST|string  # not-load;ent=storage_record
    }
    path: "/orgs/{org}/artifacts/{subject_digest}/metadata/storage-records": {  # ent:storage_record:no-cmp;path=t/;entres=true/200/get;path-primary
      rename: param: "subject_digest": *"artifact_id"|string  # not-primary
      op: list: method: *GET|string  # array-prop:storage_records;ent=storage_record
    }
  }

  entity: subscriber: {
    path: "/repos/{owner}/{repo}/subscribers": {  # ent:subscriber:cmp=simple_user;path=p/t/;path-over-cmp
      op: list: method: *GET|string  # array;ent=subscriber
    }
  }

  entity: tag: {
    path: "/repos/{owner}/{repo}/tags": {  # ent:tag:cmp=tag;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=tag
    }
  }

  entity: tag_protection: {
    path: "/repos/{owner}/{repo}/tags/protection": {  # ent:tag_protection:cmp=tag_protection;path=t/;cmp-primary
      op: create: method: *POST|string  # not-load;ent=tag_protection
      op: list: method: *GET|string  # array;ent=tag_protection
    }
  }

  entity: tarball: {
    path: "/repos/{owner}/{repo}/tarball/{ref}": {  # ent:tarball:no-cmp;path=t/p/;entres=true/302/get;path-primary
      rename: param: "ref": *"id"|string  # end-id:GET:parent=true/tarball:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=tarball
    }
  }

  entity: team: {
    path: "/enterprises/{enterprise}/teams/{team_slug}": {  # ent:team:no-cmp;path=t/p/;entres=true/204,403/nores;path-primary-delete
      rename: param: "team_slug": *"id"|string  # end-id:DELETE:parent=true/team:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=team
    }
    path: "/orgs/{org}/invitations/{invitation_id}/teams": {  # ent:team:cmp=team;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=team
    }
    path: "/orgs/{org}/organization-roles/teams/{team_slug}": {  # ent:team:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "team_slug": *"id"|string  # end-id:DELETE:parent=true/team:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=team
    }
    path: "/orgs/{org}/organization-roles/teams/{team_slug}/{role_id}": {  # ent:team:no-cmp;path=t/p/p;entres=true/204/nores;path-primary-delete
      op: remove: method: *DELETE|string  # not-load;ent=team
      op: update: method: *PUT|string  # not-load;ent=team
    }
    path: "/orgs/{org}/organization-roles/{role_id}/teams": {  # ent:team:cmp=team_role_assignment;path=t/p/t/;path-primary;has-cmp
      rename: param: "role_id": *"organization_role_id"|string  # parent:organization_role
      op: list: method: *GET|string  # array;ent=team
    }
    path: "/orgs/{org}/security-managers/teams/{team_slug}": {  # ent:team:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "team_slug": *"id"|string  # end-id:PUT:parent=true/team:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=team
      op: update: method: *PUT|string  # not-load;ent=team
    }
    path: "/orgs/{org}/teams": {  # ent:team:cmp=team_full;path=t/p/t/;path-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=team
      op: list: method: *GET|string  # array;ent=team
    }
    path: "/orgs/{org}/teams/{team_slug}": {  # ent:team:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "team_slug": *"id"|string  # end-id:GET:parent=true/team:cmp=false/team_full
      op: load: method: *GET|string  # end-param;ent=team
      op: patch: method: *PATCH|string  # not-load;ent=team
      op: remove: method: *DELETE|string  # not-load;ent=team
    }
    path: "/orgs/{org}/teams/{team_slug}/teams": {  # ent:team:cmp=team;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=team
    }
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams": {  # ent:team:cmp=team;path=t/;path-primary
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=team
      op: list: method: *GET|string  # array;ent=team
      op: remove: method: *DELETE|string  # not-load;ent=team
      op: update: method: *PUT|string  # not-load;ent=team
    }
    path: "/repos/{owner}/{repo}/teams": {  # ent:team:cmp=team;path=p/t/;path-primary
      op: list: method: *GET|string  # array;ent=team
    }
    path: "/teams/{team_id}": {  # ent:team:no-cmp;path=t/p/;entres=true/204,404,422/nores;path-primary-delete
      rename: param: "team_id": *"id"|string  # end-id:GET:parent=false/null:cmp=false/team_full
      op: load: method: *GET|string  # end-param;ent=team
      op: patch: method: *PATCH|string  # not-load;ent=team
      op: remove: method: *DELETE|string  # not-load;ent=team
    }
    path: "/teams/{team_id}/teams": {  # ent:team:cmp=team;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=team
    }
    path: "/user/teams": {  # ent:team:cmp=team_full;path=t/;path-primary
      op: list: method: *GET|string  # array;ent=team
    }
  }

  entity: team_discussion: {
    path: "/orgs/{org}/teams/{team_slug}/discussions": {  # ent:team_discussion:cmp=team_discussion;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=team_discussion
      op: list: method: *GET|string  # array;ent=team_discussion
    }
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}": {  # ent:team_discussion:cmp=team_discussion;path=t/p/;cmp-primary
      rename: param: "discussion_number": *"id"|string  # end-id:GET:parent=true/discussion:cmp=false/team_discussion
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=team_discussion
      op: patch: method: *PATCH|string  # not-load;ent=team_discussion
    }
    path: "/teams/{team_id}/discussions": {  # ent:team_discussion:cmp=team_discussion;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=team_discussion
      op: list: method: *GET|string  # array;ent=team_discussion
    }
    path: "/teams/{team_id}/discussions/{discussion_number}": {  # ent:team_discussion:cmp=team_discussion;path=t/p/;cmp-primary
      rename: param: "discussion_number": *"id"|string  # end-id:GET:parent=true/discussion:cmp=false/team_discussion
      op: load: method: *GET|string  # end-param;ent=team_discussion
      op: patch: method: *PATCH|string  # not-load;ent=team_discussion
    }
  }

  entity: team_discussion_comment: {
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments": {  # ent:team_discussion_comment:cmp=team_discussion_comment;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=team_discussion_comment
      op: list: method: *GET|string  # array;ent=team_discussion_comment
    }
    path: "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}": {  # ent:team_discussion_comment:cmp=team_discussion_comment;path=t/p/;cmp-primary
      rename: param: "comment_number": *"id"|string  # end-id:GET:parent=true/comment:cmp=false/team_discussion_comment
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=team_discussion_comment
      op: patch: method: *PATCH|string  # not-load;ent=team_discussion_comment
    }
    path: "/teams/{team_id}/discussions/{discussion_number}/comments": {  # ent:team_discussion_comment:cmp=team_discussion_comment;path=t/p/t/;cmp-primary;has-cmp
      op: create: method: *POST|string  # not-load;ent=team_discussion_comment
      op: list: method: *GET|string  # array;ent=team_discussion_comment
    }
    path: "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}": {  # ent:team_discussion_comment:cmp=team_discussion_comment;path=t/p/;cmp-primary
      rename: param: "comment_number": *"id"|string  # end-id:GET:parent=true/comment:cmp=false/team_discussion_comment
      rename: param: "discussion_number": *"discussion_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=team_discussion_comment
      op: patch: method: *PATCH|string  # not-load;ent=team_discussion_comment
    }
  }

  entity: team_membership: {
    path: "/orgs/{org}/teams/{team_slug}/memberships/{username}": {  # ent:team_membership:no-cmp;path=t/p/;entres=true/204,403/nores;cmp-found-delete
      rename: param: "team_slug": *"team_id"|string  # not-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/membership:cmp=false/team_membership
      op: load: method: *GET|string  # end-param;ent=team_membership
      op: remove: method: *DELETE|string  # not-load;ent=team_membership
      op: update: method: *PUT|string  # not-load;ent=team_membership
    }
    path: "/teams/{team_id}/memberships/{username}": {  # ent:team_membership:cmp=team_membership;path=t/p/;cmp-primary
      rename: param: "username": *"id"|string  # end-id:GET:parent=true/membership:cmp=false/team_membership
      op: load: method: *GET|string  # end-param;ent=team_membership
      op: update: method: *PUT|string  # not-load;ent=team_membership
    }
  }

  entity: team_project: {
    path: "/orgs/{org}/teams/{team_slug}/projects": {  # ent:team_project:cmp=team_project;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=team_project
    }
    path: "/orgs/{org}/teams/{team_slug}/projects/{project_id}": {  # ent:team_project:cmp=team_project;path=t/p/;cmp-primary
      rename: param: "project_id": *"id"|string  # end-id:GET:parent=true/project:cmp=false/team_project
      rename: param: "team_slug": *"team_id"|string  # not-primary
      op: load: method: *GET|string  # end-param;ent=team_project
    }
    path: "/teams/{team_id}/projects": {  # ent:team_project:cmp=team_project;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=team_project
    }
    path: "/teams/{team_id}/projects/{project_id}": {  # ent:team_project:cmp=team_project;path=t/p/;cmp-primary
      rename: param: "project_id": *"id"|string  # end-id:GET:parent=true/project:cmp=false/team_project
      op: load: method: *GET|string  # end-param;ent=team_project
    }
  }

  entity: team_repository: {
    path: "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {  # ent:team_repository:cmp=team_repository;path=t/p/p;cmp-primary
      op: list: method: *GET|string  # array-prop:topics;ent=team_repository
    }
    path: "/teams/{team_id}/repos/{owner}/{repo}": {  # ent:team_repository:cmp=team_repository;path=t/p/p;cmp-primary
      op: list: method: *GET|string  # array-prop:topics;ent=team_repository
    }
  }

  entity: team_simple: {
    path: "/orgs/{org}/security-managers": {  # ent:team_simple:cmp=team_simple;path=t/p/t/;cmp-primary;has-cmp
      op: list: method: *GET|string  # array;ent=team_simple
    }
  }

  entity: template: {
    path: "/gitignore/templates": {  # ent:template:no-cmp;path=t/;entres=true/200,304/get;path-primary
      op: list: method: *GET|string  # array;ent=template
    }
  }

  entity: thread: {
    path: "/notifications": {  # ent:thread:cmp=thread;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=thread
    }
    path: "/notifications/threads/{thread_id}": {  # ent:thread:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "thread_id": *"id"|string  # end-id:GET:parent=true/thread:cmp=false/thread
      op: load: method: *GET|string  # end-param;ent=thread
      op: patch: method: *PATCH|string  # not-load;ent=thread
      op: remove: method: *DELETE|string  # not-load;ent=thread
    }
    path: "/repos/{owner}/{repo}/notifications": {  # ent:thread:cmp=thread;path=p/t/;cmp-primary
      op: list: method: *GET|string  # array;ent=thread
    }
  }

  entity: thread_subscription: {
    path: "/notifications/threads/{thread_id}/subscription": {  # ent:thread_subscription:no-cmp;path=t/p/t/;entres=true/204,304,401,403/nores;path-primary-delete;prob-ent-part
      rename: param: "thread_id": *"id"|string  # action-not-parent:thread_subscription
      op: load: method: *GET|string  # not-list;ent=thread_subscription
      op: remove: method: *DELETE|string  # not-load;ent=thread_subscription
      op: update: method: *PUT|string  # not-load;ent=thread_subscription
    }
  }

  entity: timeline: {
    path: "/repos/{owner}/{repo}/issues/{issue_number}/timeline": {  # ent:timeline:cmp=timeline_issue_event;path=t/p/t/;path-primary;has-cmp
      op: list: method: *GET|string  # array;ent=timeline
    }
  }

  entity: token: {
    path: "/applications/{client_id}/token": {  # ent:token:no-cmp;path=t/p/t/;entres=true/204,422/nores;path-primary-delete;prob-ent-prefix
      op: remove: method: *DELETE|string  # not-load;ent=token
    }
    path: "/installation/token": {  # ent:token:no-cmp;path=t/;entres=true/204/nores;path-primary-delete
      op: remove: method: *DELETE|string  # not-load;ent=token
    }
  }

  entity: topic: {
    path: "/repos/{owner}/{repo}/topics": {  # ent:topic:cmp=topic;path=p/t/;path-primary
      op: list: method: *GET|string  # array-prop:names;ent=topic
      op: update: method: *PUT|string  # not-load;ent=topic
    }
    path: "/search/topics": {  # ent:topic:cmp=topic_search_result_item;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:items;ent=topic
    }
  }

  entity: transfer: {
    path: "/repos/{owner}/{repo}/transfer": {  # ent:transfer:no-cmp;path=p/t/;entres=false/202;ent-act
      op: create: method: *POST|string  # not-load;ent=transfer
    }
  }

  entity: user: {
    path: "/orgs/{org}/organization-roles/users/{username}": {  # ent:user:no-cmp;path=t/p/;entres=true/204/nores;path-primary-delete
      rename: param: "username": *"id"|string  # end-id:DELETE:parent=true/user:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=user
    }
    path: "/orgs/{org}/organization-roles/users/{username}/{role_id}": {  # ent:user:no-cmp;path=t/p/p;entres=true/204/nores;path-primary-delete
      op: remove: method: *DELETE|string  # not-load;ent=user
      op: update: method: *PUT|string  # not-load;ent=user
    }
    path: "/orgs/{org}/organization-roles/{role_id}/users": {  # ent:user:cmp=user_role_assignment;path=t/p/t/;path-primary;has-cmp
      rename: param: "role_id": *"organization_role_id"|string  # parent:organization_role
      op: list: method: *GET|string  # array;ent=user
    }
    path: "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users": {  # ent:user:cmp=simple_user;path=t/;path-over-cmp
      rename: param: "branch": *"branch_id"|string  # not-primary
      op: create: method: *POST|string  # not-load;ent=user
      op: list: method: *GET|string  # array;ent=user
      op: remove: method: *DELETE|string  # not-load;ent=user
      op: update: method: *PUT|string  # not-load;ent=user
    }
    path: "/search/users": {  # ent:user:cmp=user_search_result_item;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:items;ent=user
    }
    path: "/users": {  # ent:user:cmp=simple_user;path=t/;path-over-cmp
      op: list: method: *GET|string  # array;ent=user
    }
  }

  entity: user_marketplace_purchase: {
    path: "/user/marketplace_purchases": {  # ent:user_marketplace_purchase:cmp=user_marketplace_purchase;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=user_marketplace_purchase
    }
    path: "/user/marketplace_purchases/stubbed": {  # ent:user_marketplace_purchase:cmp=user_marketplace_purchase;path=t/;cmp-primary
      op: list: method: *GET|string  # array;ent=user_marketplace_purchase
    }
  }

  entity: validation_error: {
    path: "/applications/{client_id}/grant": {  # ent:validation_error:no-cmp;path=t/p/t/;entres=true/204,422/nores;cmp-found-delete;prob-ent
      op: remove: method: *DELETE|string  # not-load;ent=validation_error
    }
  }

  entity: value: {
    path: "/orgs/{org}/properties/values": {  # ent:value:no-cmp;path=t/;entres=true/204,403,404,422/nores;path-primary
      op: patch: method: *PATCH|string  # not-load;ent=value
    }
    path: "/repos/{owner}/{repo}/properties/values": {  # ent:value:no-cmp;path=t/;entres=true/204,403,404,422/nores;path-primary
      op: patch: method: *PATCH|string  # not-load;ent=value
    }
  }

  entity: variable: {
    path: "/orgs/{org}/actions/variables/{name}": {  # ent:variable:no-cmp;path=t/p/;entres=true/204/nores;path-primary
      rename: param: "name": *"id"|string  # end-id:PATCH:parent=true/variable:cmp=false/undefined
      op: patch: method: *PATCH|string  # not-load;ent=variable
    }
    path: "/repos/{owner}/{repo}/actions/variables/{name}": {  # ent:variable:no-cmp;path=t/p/;entres=true/204/nores;path-primary
      rename: param: "name": *"id"|string  # end-id:PATCH:parent=true/variable:cmp=false/undefined
      op: patch: method: *PATCH|string  # not-load;ent=variable
    }
    path: "/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}": {  # ent:variable:no-cmp;path=t/p/;entres=true/204/nores;path-primary
      rename: param: "environment_name": *"environment_id"|string  # not-primary
      rename: param: "name": *"id"|string  # end-id:PATCH:parent=true/variable:cmp=false/undefined
      op: patch: method: *PATCH|string  # not-load;ent=variable
    }
  }

  entity: version: {
    path: "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}": {  # ent:version:no-cmp;path=t/p/;entres=true/204,401,403,404/nores;path-primary-delete
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # end-id:DELETE:parent=true/version:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=version
    }
    path: "/user/packages/{package_type}/{package_name}/versions/{package_version_id}": {  # ent:version:no-cmp;path=t/p/;entres=true/204,401,403,404/nores;path-primary-delete
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # end-id:DELETE:parent=true/version:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=version
    }
    path: "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}": {  # ent:version:no-cmp;path=t/p/;entres=true/204,401,403,404/nores;path-primary-delete
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # end-id:DELETE:parent=true/version:cmp=false/undefined
      op: remove: method: *DELETE|string  # not-load;ent=version
    }
    path: "/versions": {  # ent:version:no-cmp;path=t/;entres=true/200,404/get;path-primary
      op: list: method: *GET|string  # array;ent=version
    }
  }

  entity: version_restore: {
    path: "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": {  # ent:version_restore:no-cmp;path=t/p/t/;entres=true/204,401,403,404/nores;path-primary;prob-ent-part
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # action-not-parent:version_restore
      op: create: method: *POST|string  # not-load;ent=version_restore
    }
    path: "/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": {  # ent:version_restore:no-cmp;path=t/p/t/;entres=true/204,401,403,404/nores;path-primary;prob-ent-part
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # action-not-parent:version_restore
      op: create: method: *POST|string  # not-load;ent=version_restore
    }
    path: "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": {  # ent:version_restore:no-cmp;path=t/p/t/;entres=true/204,401,403,404/nores;path-primary;prob-ent-part
      rename: param: "package_type": *"package_id"|string  # not-primary
      rename: param: "package_version_id": *"id"|string  # action-not-parent:version_restore
      op: create: method: *POST|string  # not-load;ent=version_restore
    }
  }

  entity: view: {
    path: "/repos/{owner}/{repo}/traffic/views": {  # ent:view:cmp=view_traffic;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:views;ent=view
    }
  }

  entity: vulnerability_alert: {
    path: "/repos/{owner}/{repo}/vulnerability-alerts": {  # ent:vulnerability_alert:no-cmp;path=p/t/;entres=true/204/nores;path-primary-delete
      op: load: method: *GET|string  # no-schema;ent=vulnerability_alert
      op: remove: method: *DELETE|string  # not-load;ent=vulnerability_alert
      op: update: method: *PUT|string  # not-load;ent=vulnerability_alert
    }
  }

  entity: webhook_config: {
    path: "/app/hook/config": {  # ent:webhook_config:cmp=webhook_config;path=t/;cmp-primary
      op: load: method: *GET|string  # not-list;ent=webhook_config
      op: patch: method: *PATCH|string  # not-load;ent=webhook_config
    }
    path: "/orgs/{org}/hooks/{hook_id}/config": {  # ent:webhook_config:cmp=webhook_config;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=webhook_config
      op: patch: method: *PATCH|string  # not-load;ent=webhook_config
    }
    path: "/repos/{owner}/{repo}/hooks/{hook_id}/config": {  # ent:webhook_config:cmp=webhook_config;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=webhook_config
      op: patch: method: *PATCH|string  # not-load;ent=webhook_config
    }
  }

  entity: workflow: {
    path: "/orgs/{org}/actions/permissions/workflow": {  # ent:workflow:no-cmp;path=t/;entres=true/204/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=workflow
    }
    path: "/repos/{owner}/{repo}/actions/permissions/workflow": {  # ent:workflow:no-cmp;path=t/;entres=true/204,409/nores;path-primary
      op: update: method: *PUT|string  # not-load;ent=workflow
    }
    path: "/repos/{owner}/{repo}/actions/workflows": {  # ent:workflow:cmp=workflow;path=t/;path-primary
      op: list: method: *GET|string  # array-prop:workflows;ent=workflow
    }
    path: "/repos/{owner}/{repo}/actions/workflows/{workflow_id}": {  # ent:workflow:cmp=workflow;path=t/p/;path-primary
      rename: param: "workflow_id": *"id"|string  # end-id:GET:parent=true/workflow:cmp=false/workflow
      op: load: method: *GET|string  # end-param;ent=workflow
    }
  }

  entity: workflow_disable: {
    path: "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable": {  # ent:workflow_disable:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-part
      rename: param: "workflow_id": *"id"|string  # action-not-parent:workflow_disable
      op: update: method: *PUT|string  # not-load;ent=workflow_disable
    }
  }

  entity: workflow_enable: {
    path: "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable": {  # ent:workflow_enable:no-cmp;path=t/p/t/;entres=true/204/nores;path-primary;prob-ent-part
      rename: param: "workflow_id": *"id"|string  # action-not-parent:workflow_enable
      op: update: method: *PUT|string  # not-load;ent=workflow_enable
    }
  }

  entity: workflow_run: {
    path: "/repos/{owner}/{repo}/actions/runs": {  # ent:workflow_run:cmp=workflow_run;path=t/;cmp-primary
      op: list: method: *GET|string  # array-prop:workflow_runs;ent=workflow_run
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}": {  # ent:workflow_run:cmp=workflow_run;path=t/p/;cmp-primary
      rename: param: "run_id": *"id"|string  # end-id:GET:parent=true/run:cmp=false/workflow_run
      op: load: method: *GET|string  # end-param;ent=workflow_run
      op: remove: method: *DELETE|string  # was/delete/A:run:not-load;ent=run
    }
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}": {  # ent:workflow_run:cmp=workflow_run;path=t/p/;cmp-primary
      op: load: method: *GET|string  # end-param;ent=workflow_run
    }
    path: "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs": {  # ent:workflow_run:cmp=workflow_run;path=t/p/t/;cmp-primary;has-cmp
      rename: param: "workflow_id": *"id"|string  # action-not-parent:workflow_run
      op: list: method: *GET|string  # array-prop:workflow_runs;ent=workflow_run
    }
  }

  entity: workflow_run_usage: {
    path: "/repos/{owner}/{repo}/actions/runs/{run_id}/timing": {  # ent:workflow_run_usage:cmp=workflow_run_usage;path=t/p/t/;cmp-primary;has-cmp
      op: load: method: *GET|string  # not-list;ent=workflow_run_usage
    }
  }

  entity: workflow_usage: {
    path: "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing": {  # ent:workflow_usage:cmp=workflow_usage;path=t/p/t/;cmp-primary;has-cmp
      action: "timing": kind: *"`$BOOLEAN`"|top  # ent:workflow_usage:action-not-parent:workflow_id:GET
      rename: param: "workflow_id": *"id"|string  # action-not-parent:workflow_usage
      op: load: method: *GET|string  # not-list;ent=workflow_usage
    }
  }

  entity: zen: {
    path: "/zen": {  # ent:zen:no-cmp;path=t/;entres=true/200/get;path-primary
      op: load: method: *GET|string  # no-schema;ent=zen
    }
  }

  entity: zipball: {
    path: "/repos/{owner}/{repo}/zipball/{ref}": {  # ent:zipball:no-cmp;path=t/p/;entres=true/302/get;path-primary
      rename: param: "ref": *"id"|string  # end-id:GET:parent=true/zipball:cmp=false/undefined
      op: load: method: *GET|string  # end-param;ent=zipball
    }
  }

}